
(function (i, l, n, g) { var j, b, k; j = { start: 0, startX: 0, startY: 0, current: 0, currentX: 0, currentY: 0, offsetX: 0, offsetY: 0, distance: null, startTime: 0, endTime: 0, updatedX: 0, targetEl: null }; b = { isTouch: false, isScrolling: false, isSwiping: false, direction: false, inMotion: false }; k = { _onDragStart: null, _onDragMove: null, _onDragEnd: null, _transitionEnd: null, _resizer: null, _responsiveCall: null, _goToLoop: null, _checkVisibile: null }; function c(q, e) { this.settings = null; this.options = i.extend({}, c.Defaults, e); this.$element = i(q); this.drag = i.extend({}, j); this.state = i.extend({}, b); this.e = i.extend({}, k); this._plugins = {}; this._supress = {}; this._current = null; this._speed = null; this._coordinates = []; this._breakpoint = null; this._width = null; this._items = []; this._clones = []; this._mergers = []; this._invalidated = {}; this._pipe = []; i.each(c.Plugins, i.proxy(function (r, s) { this._plugins[r[0].toLowerCase() + r.slice(1)] = new s(this) }, this)); i.each(c.Pipe, i.proxy(function (r, s) { this._pipe.push({ filter: s.filter, run: i.proxy(s.run, this) }) }, this)); this.setup(); this.initialize() } c.Defaults = { items: 3, loop: false, center: false, mouseDrag: true, touchDrag: true, pullDrag: true, freeDrag: false, margin: 0, stagePadding: 0, merge: false, mergeFit: true, autoWidth: false, startPosition: 0, rtl: false, smartSpeed: 250, fluidSpeed: false, dragEndSpeed: false, responsive: {}, responsiveRefreshRate: 200, responsiveBaseElement: l, responsiveClass: false, fallbackEasing: "swing", info: false, nestedItemSelector: false, itemElement: "div", stageElement: "div", themeClass: "owl-theme", baseClass: "owl-carousel", itemClass: "owl-item", centerClass: "center", activeClass: "active" }; c.Width = { Default: "default", Inner: "inner", Outer: "outer" }; c.Plugins = {}; c.Pipe = [{ filter: ["width", "items", "settings"], run: function (e) { e.current = this._items && this._items[this.relative(this._current)] } }, { filter: ["items", "settings"], run: function () { var e = this._clones, q = this.$stage.children(".cloned"); if (q.length !== e.length || (!this.settings.loop && e.length > 0)) { this.$stage.children(".cloned").remove(); this._clones = [] } } }, { filter: ["items", "settings"], run: function () { var q, t, r = this._clones, e = this._items, s = this.settings.loop ? r.length - Math.max(this.settings.items * 2, 4) : 0; for (q = 0, t = Math.abs(s / 2); q < t; q++) { if (s > 0) { this.$stage.children().eq(e.length + r.length - 1).remove(); r.pop(); this.$stage.children().eq(0).remove(); r.pop() } else { if (e.length > 1) { r.push(r.length / 2); this.$stage.append(e[r[r.length - 1]].clone().addClass("cloned")); r.push(e.length - 1 - (r.length - 1) / 2); this.$stage.prepend(e[r[r.length - 1]].clone().addClass("cloned")) } } } } }, { filter: ["width", "items", "settings"], run: function () { var r = (this.settings.rtl ? 1 : -1), q = (this.width() / this.settings.items).toFixed(3), u = 0, t, e, s; this._coordinates = []; for (e = 0, s = this._clones.length + this._items.length; e < s; e++) { t = this._mergers[this.relative(e)]; t = (this.settings.mergeFit && Math.min(t, this.settings.items)) || t; u += (this.settings.autoWidth ? this._items[this.relative(e)].width() + this.settings.margin : q * t) * r; this._coordinates.push(u) } } }, { filter: ["width", "items", "settings"], run: function () { var q, s, r = (this.width() / this.settings.items).toFixed(3), e = { width: Math.abs(this._coordinates[this._coordinates.length - 1]) + this.settings.stagePadding * 2, "padding-left": this.settings.stagePadding || "", "padding-right": this.settings.stagePadding || "" }; this.$stage.css(e); e = { width: this.settings.autoWidth ? "auto" : r - this.settings.margin }; e[this.settings.rtl ? "margin-left" : "margin-right"] = this.settings.margin; if (!this.settings.autoWidth && i.grep(this._mergers, function (t) { return t > 1 }).length > 0) { for (q = 0, s = this._coordinates.length; q < s; q++) { e.width = Math.abs(this._coordinates[q]) - Math.abs(this._coordinates[q - 1] || 0) - this.settings.margin; this.$stage.children().eq(q).css(e) } } else { this.$stage.children().css(e) } } }, { filter: ["width", "items", "settings"], run: function (e) { e.current && this.reset(this.$stage.children().index(e.current)) } }, { filter: ["position"], run: function () { this.animate(this.coordinates(this._current)) } }, { filter: ["width", "position", "items", "settings"], run: function () { var u = this.settings.rtl ? 1 : -1, v = this.settings.stagePadding * 2, q = this.coordinates(this.current()) + v, r = q + this.width() * u, x, w, t = [], s, e; for (s = 0, e = this._coordinates.length; s < e; s++) { x = this._coordinates[s - 1] || 0; w = Math.abs(this._coordinates[s]) + v * u; if ((this.op(x, "<=", q) && (this.op(x, ">", r))) || (this.op(w, "<", q) && this.op(w, ">", r))) { t.push(s) } } this.$stage.children("." + this.settings.activeClass).removeClass(this.settings.activeClass); this.$stage.children(":eq(" + t.join("), :eq(") + ")").addClass(this.settings.activeClass); if (this.settings.center) { this.$stage.children("." + this.settings.centerClass).removeClass(this.settings.centerClass); this.$stage.children().eq(this.current()).addClass(this.settings.centerClass) } } }]; c.prototype.initialize = function () { this.trigger("initialize"); this.$element.addClass(this.settings.baseClass).addClass(this.settings.themeClass).toggleClass("owl-rtl", this.settings.rtl); this.browserSupport(); if (this.settings.autoWidth && this.state.imagesLoaded !== true) { var r, q, e; r = this.$element.find("img"); q = this.settings.nestedItemSelector ? "." + this.settings.nestedItemSelector : g; e = this.$element.children(q).width(); if (r.length && e <= 0) { this.preloadAutoWidthImages(r); return false } } this.$element.addClass("owl-loading"); this.$stage = i("<" + this.settings.stageElement + ' class="owl-stage"/>').wrap('<div class="owl-stage-outer">'); this.$element.append(this.$stage.parent()); this.replace(this.$element.children().not(this.$stage.parent())); this._width = this.$element.width(); this.refresh(); this.$element.removeClass("owl-loading").addClass("owl-loaded"); this.eventsCall(); this.internalEvents(); this.addTriggerableEvents(); this.trigger("initialized") }; c.prototype.setup = function () { var e = this.viewport(), r = this.options.responsive, q = -1, s = null; if (!r) { s = i.extend({}, this.options) } else { i.each(r, function (t) { if (t <= e && t > q) { q = Number(t) } }); s = i.extend({}, this.options, r[q]); delete s.responsive; if (s.responsiveClass) { this.$element.attr("class", function (t, u) { return u.replace(/\b owl-responsive-\S+/g, "") }).addClass("owl-responsive-" + q) } } if (this.settings === null || this._breakpoint !== q) { this.trigger("change", { property: { name: "settings", value: s } }); this._breakpoint = q; this.settings = s; this.invalidate("settings"); this.trigger("changed", { property: { name: "settings", value: this.settings } }) } }; c.prototype.optionsLogic = function () { this.$element.toggleClass("owl-center", this.settings.center); if (this.settings.loop && this._items.length < this.settings.items) { this.settings.loop = false } if (this.settings.autoWidth) { this.settings.stagePadding = false; this.settings.merge = false } }; c.prototype.prepare = function (q) { var e = this.trigger("prepare", { content: q }); if (!e.data) { e.data = i("<" + this.settings.itemElement + "/>").addClass(this.settings.itemClass).append(q) } this.trigger("prepared", { content: e.data }); return e.data }; c.prototype.update = function () { var q = 0, s = this._pipe.length, r = i.proxy(function (t) { return this[t] }, this._invalidated), e = {}; while (q < s) { if (this._invalidated.all || i.grep(this._pipe[q].filter, r).length > 0) { this._pipe[q].run(e) } q++ } this._invalidated = {} }; c.prototype.width = function (e) { e = e || c.Width.Default; switch (e) { case c.Width.Inner: case c.Width.Outer: return this._width; default: return this._width - this.settings.stagePadding * 2 + this.settings.margin } }; c.prototype.refresh = function () { if (this._items.length === 0) { return false } var e = new Date().getTime(); this.trigger("refresh"); this.setup(); this.optionsLogic(); this.$stage.addClass("owl-refresh"); this.update(); this.$stage.removeClass("owl-refresh"); this.state.orientation = l.orientation; this.watchVisibility(); this.trigger("refreshed") }; c.prototype.eventsCall = function () { this.e._onDragStart = i.proxy(function (q) { this.onDragStart(q) }, this); this.e._onDragMove = i.proxy(function (q) { this.onDragMove(q) }, this); this.e._onDragEnd = i.proxy(function (q) { this.onDragEnd(q) }, this); this.e._onResize = i.proxy(function (q) { this.onResize(q) }, this); this.e._transitionEnd = i.proxy(function (q) { this.transitionEnd(q) }, this); this.e._preventClick = i.proxy(function (q) { this.preventClick(q) }, this) }; c.prototype.onThrottledResize = function () { l.clearTimeout(this.resizeTimer); this.resizeTimer = l.setTimeout(this.e._onResize, this.settings.responsiveRefreshRate) }; c.prototype.onResize = function () { if (!this._items.length) { return false } if (this._width === this.$element.width()) { return false } if (this.trigger("resize").isDefaultPrevented()) { return false } this._width = this.$element.width(); this.invalidate("width"); this.refresh(); this.trigger("resized") }; c.prototype.eventsRouter = function (q) { var e = q.type; if (e === "mousedown" || e === "touchstart") { this.onDragStart(q) } else { if (e === "mousemove" || e === "touchmove") { this.onDragMove(q) } else { if (e === "mouseup" || e === "touchend") { this.onDragEnd(q) } else { if (e === "touchcancel") { this.onDragEnd(q) } } } } }; c.prototype.internalEvents = function () { var e = m(), q = p(); if (this.settings.mouseDrag) { this.$stage.on("mousedown", i.proxy(function (r) { this.eventsRouter(r) }, this)); this.$stage.on("dragstart", function () { return false }); this.$stage.get(0).onselectstart = function () { return false } } else { this.$element.addClass("owl-text-select-on") } if (this.settings.touchDrag && !q) { this.$stage.on("touchstart touchcancel", i.proxy(function (r) { this.eventsRouter(r) }, this)) } if (this.transitionEndVendor) { this.on(this.$stage.get(0), this.transitionEndVendor, this.e._transitionEnd, false) } if (this.settings.responsive !== false) { this.on(l, "resize", i.proxy(this.onThrottledResize, this)) } }; c.prototype.onDragStart = function (t) { var s, u, r, q, e; s = t.originalEvent || t || l.event; if (s.which === 3 || this.state.isTouch) { return false } if (s.type === "mousedown") { this.$stage.addClass("owl-grab") } this.trigger("drag"); this.drag.startTime = new Date().getTime(); this.speed(0); this.state.isTouch = true; this.state.isScrolling = false; this.state.isSwiping = false; this.drag.distance = 0; r = d(s).x; q = d(s).y; this.drag.offsetX = this.$stage.position().left; this.drag.offsetY = this.$stage.position().top; if (this.settings.rtl) { this.drag.offsetX = this.$stage.position().left + this.$stage.width() - this.width() + this.settings.margin } if (this.state.inMotion && this.support3d) { e = this.getTransformProperty(); this.drag.offsetX = e; this.animate(e); this.state.inMotion = true } else { if (this.state.inMotion && !this.support3d) { this.state.inMotion = false; return false } } this.drag.startX = r - this.drag.offsetX; this.drag.startY = q - this.drag.offsetY; this.drag.start = r - this.drag.startX; this.drag.targetEl = s.target || s.srcElement; this.drag.updatedX = this.drag.start; if (this.drag.targetEl.tagName === "IMG" || this.drag.targetEl.tagName === "A") { this.drag.targetEl.draggable = false } i(n).on("mousemove.owl.dragEvents mouseup.owl.dragEvents touchmove.owl.dragEvents touchend.owl.dragEvents", i.proxy(function (v) { this.eventsRouter(v) }, this)) }; c.prototype.onDragMove = function (s) { var r, w, q, e, u, v, t; if (!this.state.isTouch) { return } if (this.state.isScrolling) { return } r = s.originalEvent || s || l.event; q = d(r).x; e = d(r).y; this.drag.currentX = q - this.drag.startX; this.drag.currentY = e - this.drag.startY; this.drag.distance = this.drag.currentX - this.drag.offsetX; if (this.drag.distance < 0) { this.state.direction = this.settings.rtl ? "right" : "left" } else { if (this.drag.distance > 0) { this.state.direction = this.settings.rtl ? "left" : "right" } } if (this.settings.loop) { if (this.op(this.drag.currentX, ">", this.coordinates(this.minimum())) && this.state.direction === "right") { this.drag.currentX -= (this.settings.center && this.coordinates(0)) - this.coordinates(this._items.length) } else { if (this.op(this.drag.currentX, "<", this.coordinates(this.maximum())) && this.state.direction === "left") { this.drag.currentX += (this.settings.center && this.coordinates(0)) - this.coordinates(this._items.length) } } } else { u = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum()); v = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum()); t = this.settings.pullDrag ? this.drag.distance / 5 : 0; this.drag.currentX = Math.max(Math.min(this.drag.currentX, u + t), v + t) } if ((this.drag.distance > 8 || this.drag.distance < -8)) { if (r.preventDefault !== g) { r.preventDefault() } else { r.returnValue = false } this.state.isSwiping = true } this.drag.updatedX = this.drag.currentX; if ((this.drag.currentY > 16 || this.drag.currentY < -16) && this.state.isSwiping === false) { this.state.isScrolling = true; this.drag.updatedX = this.drag.start } this.animate(this.drag.updatedX) }; c.prototype.onDragEnd = function (s) { var q, e, r; if (!this.state.isTouch) { return } if (s.type === "mouseup") { this.$stage.removeClass("owl-grab") } this.trigger("dragged"); this.drag.targetEl.removeAttribute("draggable"); this.state.isTouch = false; this.state.isScrolling = false; this.state.isSwiping = false; if (this.drag.distance === 0 && this.state.inMotion !== true) { this.state.inMotion = false; return false } this.drag.endTime = new Date().getTime(); q = this.drag.endTime - this.drag.startTime; e = Math.abs(this.drag.distance); if (e > 3 || q > 300) { this.removeClick(this.drag.targetEl) } r = this.closest(this.drag.updatedX); this.speed(this.settings.dragEndSpeed || this.settings.smartSpeed); this.current(r); this.invalidate("position"); this.update(); if (!this.settings.pullDrag && this.drag.updatedX === this.coordinates(r)) { this.transitionEnd() } this.drag.distance = 0; i(n).off(".owl.dragEvents") }; c.prototype.removeClick = function (e) { this.drag.targetEl = e; i(e).on("click.preventClick", this.e._preventClick); l.setTimeout(function () { i(e).off("click.preventClick") }, 300) }; c.prototype.preventClick = function (e) { if (e.preventDefault) { e.preventDefault() } else { e.returnValue = false } if (e.stopPropagation) { e.stopPropagation() } i(e.target).off("click.preventClick") }; c.prototype.getTransformProperty = function () { var e, q; e = l.getComputedStyle(this.$stage.get(0), null).getPropertyValue(this.vendorName + "transform"); e = e.replace(/matrix(3d)?\(|\)/g, "").split(","); q = e.length === 16; return q !== true ? e[4] : e[12] }; c.prototype.closest = function (t) { var e = -1, r = 30, q = this.width(), s = this.coordinates(); if (!this.settings.freeDrag) { i.each(s, i.proxy(function (u, v) { if (t > v - r && t < v + r) { e = u } else { if (this.op(t, "<", v) && this.op(t, ">", s[u + 1] || v - q)) { e = this.state.direction === "left" ? u + 1 : u } } return e === -1 }, this)) } if (!this.settings.loop) { if (this.op(t, ">", s[this.minimum()])) { e = t = this.minimum() } else { if (this.op(t, "<", s[this.maximum()])) { e = t = this.maximum() } } } return e }; c.prototype.animate = function (e) { this.trigger("translate"); this.state.inMotion = this.speed() > 0; if (this.support3d) { this.$stage.css({ transform: "translate3d(" + e + "px,0px, 0px)", transition: (this.speed() / 1000) + "s" }) } else { if (this.state.isTouch) { this.$stage.css({ left: e + "px" }) } else { this.$stage.animate({ left: e }, this.speed() / 1000, this.settings.fallbackEasing, i.proxy(function () { if (this.state.inMotion) { this.transitionEnd() } }, this)) } } }; c.prototype.current = function (e) { if (e === g) { return this._current } if (this._items.length === 0) { return g } e = this.normalize(e); if (this._current !== e) { var q = this.trigger("change", { property: { name: "position", value: e } }); if (q.data !== g) { e = this.normalize(q.data) } this._current = e; this.invalidate("position"); this.trigger("changed", { property: { name: "position", value: this._current } }) } return this._current }; c.prototype.invalidate = function (e) { this._invalidated[e] = true }; c.prototype.reset = function (e) { e = this.normalize(e); if (e === g) { return } this._speed = 0; this._current = e; this.suppress(["translate", "translated"]); this.animate(this.coordinates(e)); this.release(["translate", "translated"]) }; c.prototype.normalize = function (e, q) { var r = (q ? this._items.length : this._items.length + this._clones.length); if (!i.isNumeric(e) || r < 1) { return g } if (this._clones.length) { e = ((e % r) + r) % r } else { e = Math.max(this.minimum(q), Math.min(this.maximum(q), e)) } return e }; c.prototype.relative = function (e) { e = this.normalize(e); e = e - this._clones.length / 2; return this.normalize(e, true) }; c.prototype.maximum = function (s) { var t, r, e = 0, u, q = this.settings; if (s) { return this._items.length - 1 } if (!q.loop && q.center) { t = this._items.length - 1 } else { if (!q.loop && !q.center) { t = this._items.length - q.items } else { if (q.loop || q.center) { t = this._items.length + q.items } else { if (q.autoWidth || q.merge) { revert = q.rtl ? 1 : -1; r = this.$stage.width() - this.$element.width(); while (u = this.coordinates(e)) { if (u * revert >= r) { break } t = ++e } } else { throw "Can not detect maximum absolute position." } } } } return t }; c.prototype.minimum = function (e) { if (e) { return 0 } return this._clones.length / 2 }; c.prototype.items = function (e) { if (e === g) { return this._items.slice() } e = this.normalize(e, true); return this._items[e] }; c.prototype.mergers = function (e) { if (e === g) { return this._mergers.slice() } e = this.normalize(e, true); return this._mergers[e] }; c.prototype.clones = function (e) { var q = this._clones.length / 2, s = q + this._items.length, r = function (t) { return t % 2 === 0 ? s + t / 2 : q - (t + 1) / 2 }; if (e === g) { return i.map(this._clones, function (t, u) { return r(u) }) } return i.map(this._clones, function (t, u) { return t === e ? r(u) : null }) }; c.prototype.speed = function (e) { if (e !== g) { this._speed = e } return this._speed }; c.prototype.coordinates = function (e) { var q = null; if (e === g) { return i.map(this._coordinates, i.proxy(function (s, r) { return this.coordinates(r) }, this)) } if (this.settings.center) { q = this._coordinates[e]; q += (this.width() - q + (this._coordinates[e - 1] || 0)) / 2 * (this.settings.rtl ? -1 : 1) } else { q = this._coordinates[e - 1] || 0 } return q }; c.prototype.duration = function (r, q, e) { return Math.min(Math.max(Math.abs(q - r), 1), 6) * Math.abs((e || this.settings.smartSpeed)) }; c.prototype.to = function (e, t) { if (this.settings.loop) { var w = e - this.relative(this.current()), q = this.current(), s = this.current(), v = this.current() + w, u = s - v < 0 ? true : false, r = this._clones.length + this._items.length; if (v < this.settings.items && u === false) { q = s + this._items.length; this.reset(q) } else { if (v >= r - this.settings.items && u === true) { q = s - this._items.length; this.reset(q) } } l.clearTimeout(this.e._goToLoop); this.e._goToLoop = l.setTimeout(i.proxy(function () { this.speed(this.duration(this.current(), q + w, t)); this.current(q + w); this.update() }, this), 30) } else { this.speed(this.duration(this.current(), e, t)); this.current(e); this.update() } }; c.prototype.next = function (e) { e = e || false; this.to(this.relative(this.current()) + 1, e) }; c.prototype.prev = function (e) { e = e || false; this.to(this.relative(this.current()) - 1, e) }; c.prototype.transitionEnd = function (e) { if (e !== g) { e.stopPropagation(); if ((e.target || e.srcElement || e.originalTarget) !== this.$stage.get(0)) { return false } } this.state.inMotion = false; this.trigger("translated") }; c.prototype.viewport = function () { var e; if (this.options.responsiveBaseElement !== l) { e = i(this.options.responsiveBaseElement).width() } else { if (l.innerWidth) { e = l.innerWidth } else { if (n.documentElement && n.documentElement.clientWidth) { e = n.documentElement.clientWidth } else { throw "Can not detect viewport width." } } } return e }; c.prototype.replace = function (e) { this.$stage.empty(); this._items = []; if (e) { e = (e instanceof jQuery) ? e : i(e) } if (this.settings.nestedItemSelector) { e = e.find("." + this.settings.nestedItemSelector) } e.filter(function () { return this.nodeType === 1 }).each(i.proxy(function (q, r) { r = this.prepare(r); this.$stage.append(r); this._items.push(r); this._mergers.push(r.find("[data-merge]").andSelf("[data-merge]").attr("data-merge") * 1 || 1) }, this)); this.reset(i.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0); this.invalidate("items") }; c.prototype.add = function (q, e) { e = e === g ? this._items.length : this.normalize(e, true); this.trigger("add", { content: q, position: e }); if (this._items.length === 0 || e === this._items.length) { this.$stage.append(q); this._items.push(q); this._mergers.push(q.find("[data-merge]").andSelf("[data-merge]").attr("data-merge") * 1 || 1) } else { this._items[e].before(q); this._items.splice(e, 0, q); this._mergers.splice(e, 0, q.find("[data-merge]").andSelf("[data-merge]").attr("data-merge") * 1 || 1) } this.invalidate("items"); this.trigger("added", { content: q, position: e }) }; c.prototype.remove = function (e) { e = this.normalize(e, true); if (e === g) { return } this.trigger("remove", { content: this._items[e], position: e }); this._items[e].remove(); this._items.splice(e, 1); this._mergers.splice(e, 1); this.invalidate("items"); this.trigger("removed", { content: null, position: e }) }; c.prototype.addTriggerableEvents = function () { var e = i.proxy(function (r, q) { return i.proxy(function (s) { if (s.relatedTarget !== this) { this.suppress([q]); r.apply(this, [].slice.call(arguments, 1)); this.release([q]) } }, this) }, this); i.each({ next: this.next, prev: this.prev, to: this.to, destroy: this.destroy, refresh: this.refresh, replace: this.replace, add: this.add, remove: this.remove }, i.proxy(function (q, r) { this.$element.on(q + ".owl.carousel", e(r, q + ".owl.carousel")) }, this)) }; c.prototype.watchVisibility = function () { if (!q(this.$element.get(0))) { this.$element.addClass("owl-hidden"); l.clearInterval(this.e._checkVisibile); this.e._checkVisibile = l.setInterval(i.proxy(e, this), 500) } function q(r) { return r.offsetWidth > 0 && r.offsetHeight > 0 } function e() { if (q(this.$element.get(0))) { this.$element.removeClass("owl-hidden"); this.refresh(); l.clearInterval(this.e._checkVisibile) } } }; c.prototype.preloadAutoWidthImages = function (t) { var q, s, r, e; q = 0; s = this; t.each(function (u, v) { r = i(v); e = new Image(); e.onload = function () { q++; r.attr("src", e.src); r.css("opacity", 1); if (q >= t.length) { s.state.imagesLoaded = true; s.initialize() } }; e.src = r.attr("src") || r.attr("data-src") || r.attr("data-src-retina") }) }; c.prototype.destroy = function () { if (this.$element.hasClass(this.settings.themeClass)) { this.$element.removeClass(this.settings.themeClass) } if (this.settings.responsive !== false) { i(l).off("resize.owl.carousel") } if (this.transitionEndVendor) { this.off(this.$stage.get(0), this.transitionEndVendor, this.e._transitionEnd) } for (var e in this._plugins) { this._plugins[e].destroy() } if (this.settings.mouseDrag || this.settings.touchDrag) { this.$stage.off("mousedown touchstart touchcancel"); i(n).off(".owl.dragEvents"); this.$stage.get(0).onselectstart = function () { }; this.$stage.off("dragstart", function () { return false }) } this.$element.off(".owl"); this.$stage.children(".cloned").remove(); this.e = null; this.$element.removeData("owlCarousel"); this.$stage.children().contents().unwrap(); this.$stage.children().unwrap(); this.$stage.unwrap() }; c.prototype.op = function (q, s, e) { var r = this.settings.rtl; switch (s) { case "<": return r ? q > e : q < e; case ">": return r ? q < e : q > e; case ">=": return r ? q <= e : q >= e; case "<=": return r ? q >= e : q <= e; default: break } }; c.prototype.on = function (q, r, s, e) { if (q.addEventListener) { q.addEventListener(r, s, e) } else { if (q.attachEvent) { q.attachEvent("on" + r, s) } } }; c.prototype.off = function (q, r, s, e) { if (q.removeEventListener) { q.removeEventListener(r, s, e) } else { if (q.detachEvent) { q.detachEvent("on" + r, s) } } }; c.prototype.trigger = function (q, u, s) { var e = { item: { count: this._items.length, index: this.current() } }, r = i.camelCase(i.grep(["on", q, s], function (w) { return w }).join("-").toLowerCase()), t = i.Event([q, "owl", s || "carousel"].join(".").toLowerCase(), i.extend({ relatedTarget: this }, e, u)); if (!this._supress[q]) { i.each(this._plugins, function (v, w) { if (w.onTrigger) { w.onTrigger(t) } }); this.$element.trigger(t); if (this.settings && typeof this.settings[r] === "function") { this.settings[r].apply(this, t) } } return t }; c.prototype.suppress = function (e) { i.each(e, i.proxy(function (q, r) { this._supress[r] = true }, this)) }; c.prototype.release = function (e) { i.each(e, i.proxy(function (q, r) { delete this._supress[r] }, this)) }; c.prototype.browserSupport = function () { this.support3d = o(); if (this.support3d) { this.transformVendor = f(); var e = ["transitionend", "webkitTransitionEnd", "transitionend", "oTransitionEnd"]; this.transitionEndVendor = e[h()]; this.vendorName = this.transformVendor.replace(/Transform/i, ""); this.vendorName = this.vendorName !== "" ? "-" + this.vendorName.toLowerCase() + "-" : "" } this.state.orientation = l.orientation }; function d(e) { if (e.touches !== g) { return { x: e.touches[0].pageX, y: e.touches[0].pageY } } if (e.touches === g) { if (e.pageX !== g) { return { x: e.pageX, y: e.pageY } } if (e.pageX === g) { return { x: e.clientX, y: e.clientY } } } } function a(u) { var t, q, e = n.createElement("div"), r = u; for (t in r) { q = r[t]; if (typeof e.style[q] !== "undefined") { e = null; return [q, t] } } return [false] } function h() { return a(["transition", "WebkitTransition", "MozTransition", "OTransition"])[1] } function f() { return a(["transform", "WebkitTransform", "MozTransform", "OTransform", "msTransform"])[0] } function o() { return a(["perspective", "webkitPerspective", "MozPerspective", "OPerspective", "MsPerspective"])[0] } function m() { return "ontouchstart" in l || !!(navigator.msMaxTouchPoints) } function p() { return l.navigator.msPointerEnabled } i.fn.owlCarousel = function (e) { return this.each(function () { if (!i(this).data("owlCarousel")) { i(this).data("owlCarousel", new c(this, e)) } }) }; i.fn.owlCarousel.Constructor = c })(window.Zepto || window.jQuery, window, document); (function (d, c, a, e) { var b = function (f) { this._core = f; this._loaded = []; this._handlers = { "initialized.owl.carousel change.owl.carousel": d.proxy(function (m) { if (!m.namespace) { return } if (!this._core.settings || !this._core.settings.lazyLoad) { return } if ((m.property && m.property.name == "position") || m.type == "initialized") { var j = this._core.settings, o = (j.center && Math.ceil(j.items / 2) || j.items), h = ((j.center && o * -1) || 0), g = ((m.property && m.property.value) || this._core.current()) + h, l = this._core.clones().length, k = d.proxy(function (p, n) { this.load(n) }, this); while (h++ < o) { this.load(l / 2 + this._core.relative(g)); l && d.each(this._core.clones(this._core.relative(g++)), k) } } }, this) }; this._core.options = d.extend({}, b.Defaults, this._core.options); this._core.$element.on(this._handlers) }; b.Defaults = { lazyLoad: false }; b.prototype.load = function (f) { var g = this._core.$stage.children().eq(f), h = g && g.find(".owl-lazy"); if (!h || d.inArray(g.get(0), this._loaded) > -1) { return } h.each(d.proxy(function (k, l) { var i = d(l), m, j = (c.devicePixelRatio > 1 && i.attr("data-src-retina")) || i.attr("data-src"); this._core.trigger("load", { element: i, url: j }, "lazy"); if (i.is("img")) { i.one("load.owl.lazy", d.proxy(function () { i.css("opacity", 1); this._core.trigger("loaded", { element: i, url: j }, "lazy") }, this)).attr("src", j) } else { m = new Image(); m.onload = d.proxy(function () { i.css({ "background-image": "url(" + j + ")", opacity: "1" }); this._core.trigger("loaded", { element: i, url: j }, "lazy") }, this); m.src = j } }, this)); this._loaded.push(g.get(0)) }; b.prototype.destroy = function () { var f, g; for (f in this.handlers) { this._core.$element.off(f, this.handlers[f]) } for (g in Object.getOwnPropertyNames(this)) { typeof this[g] != "function" && (this[g] = null) } }; d.fn.owlCarousel.Constructor.Plugins.Lazy = b })(window.Zepto || window.jQuery, window, document); (function (c, b, a, d) { var e = function (f) { this._core = f; this._handlers = { "initialized.owl.carousel": c.proxy(function () { if (this._core.settings.autoHeight) { this.update() } }, this), "changed.owl.carousel": c.proxy(function (g) { if (this._core.settings.autoHeight && g.property.name == "position") { this.update() } }, this), "loaded.owl.lazy": c.proxy(function (g) { if (this._core.settings.autoHeight && g.element.closest("." + this._core.settings.itemClass) === this._core.$stage.children().eq(this._core.current())) { this.update() } }, this) }; this._core.options = c.extend({}, e.Defaults, this._core.options); this._core.$element.on(this._handlers) }; e.Defaults = { autoHeight: false, autoHeightClass: "owl-height" }; e.prototype.update = function () { this._core.$stage.parent().height(this._core.$stage.children().eq(this._core.current()).height()).addClass(this._core.settings.autoHeightClass) }; e.prototype.destroy = function () { var f, g; for (f in this._handlers) { this._core.$element.off(f, this._handlers[f]) } for (g in Object.getOwnPropertyNames(this)) { typeof this[g] != "function" && (this[g] = null) } }; c.fn.owlCarousel.Constructor.Plugins.AutoHeight = e })(window.Zepto || window.jQuery, window, document); (function (d, c, a, e) { var b = function (f) { this._core = f; this._videos = {}; this._playing = null; this._fullscreen = false; this._handlers = { "resize.owl.carousel": d.proxy(function (g) { if (this._core.settings.video && !this.isInFullScreen()) { g.preventDefault() } }, this), "refresh.owl.carousel changed.owl.carousel": d.proxy(function (g) { if (this._playing) { this.stop() } }, this), "prepared.owl.carousel": d.proxy(function (h) { var g = d(h.content).find(".owl-video"); if (g.length) { g.css("display", "none"); this.fetch(g, d(h.content)) } }, this) }; this._core.options = d.extend({}, b.Defaults, this._core.options); this._core.$element.on(this._handlers); this._core.$element.on("click.owl.video", ".owl-video-play-icon", d.proxy(function (g) { this.play(g) }, this)) }; b.Defaults = { video: false, videoHeight: false, videoWidth: false }; b.prototype.fetch = function (k, j) { var i = k.attr("data-vimeo-id") ? "vimeo" : "youtube", l = k.attr("data-vimeo-id") || k.attr("data-youtube-id"), h = k.attr("data-width") || this._core.settings.videoWidth, f = k.attr("data-height") || this._core.settings.videoHeight, g = k.attr("href"); if (g) { l = g.match(/(http:|https:|)\/\/(player.|www.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com))\/(video\/|embed\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/); if (l[3].indexOf("youtu") > -1) { i = "youtube" } else { if (l[3].indexOf("vimeo") > -1) { i = "vimeo" } else { throw new Error("Video URL not supported.") } } l = l[6] } else { throw new Error("Missing video URL.") } this._videos[g] = { type: i, id: l, width: h, height: f }; j.attr("data-video", g); this.thumbnail(k, this._videos[g]) }; b.prototype.thumbnail = function (l, h) { var g, n, p, f = h.width && h.height ? 'style="width:' + h.width + "px;height:" + h.height + 'px;"' : "", m = l.find("img"), o = "src", k = "", i = this._core.settings, j = function (q) { n = '<div class="owl-video-play-icon"></div>'; if (i.lazyLoad) { g = '<div class="owl-video-tn ' + k + '" ' + o + '="' + q + '"></div>' } else { g = '<div class="owl-video-tn" style="opacity:1;background-image:url(' + q + ')"></div>' } l.after(g); l.after(n) }; l.wrap('<div class="owl-video-wrapper"' + f + "></div>"); if (this._core.settings.lazyLoad) { o = "data-src"; k = "owl-lazy" } if (m.length) { j(m.attr(o)); m.remove(); return false } if (h.type === "youtube") { p = "http://img.youtube.com/vi/" + h.id + "/hqdefault.jpg"; j(p) } else { if (h.type === "vimeo") { d.ajax({ type: "GET", url: "http://vimeo.com/api/v2/video/" + h.id + ".json", jsonp: "callback", dataType: "jsonp", success: function (q) { p = q[0].thumbnail_large; j(p) } }) } } }; b.prototype.stop = function () { this._core.trigger("stop", null, "video"); this._playing.find(".owl-video-frame").remove(); this._playing.removeClass("owl-video-playing"); this._playing = null }; b.prototype.play = function (l) { this._core.trigger("play", null, "video"); if (this._playing) { this.stop() } var m = d(l.target || l.srcElement), k = m.closest("." + this._core.settings.itemClass), j = this._videos[k.attr("data-video")], i = j.width || "100%", f = j.height || this._core.$stage.height(), g, h; if (j.type === "youtube") { g = '<iframe width="' + i + '" height="' + f + '" src="http://www.youtube.com/embed/' + j.id + "?autoplay=1&v=" + j.id + '" frameborder="0" allowfullscreen></iframe>' } else { if (j.type === "vimeo") { g = '<iframe src="http://player.vimeo.com/video/' + j.id + '?autoplay=1" width="' + i + '" height="' + f + '" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>' } } k.addClass("owl-video-playing"); this._playing = k; h = d('<div style="height:' + f + "px; width:" + i + 'px" class="owl-video-frame">' + g + "</div>"); m.after(h) }; b.prototype.isInFullScreen = function () { var f = a.fullscreenElement || a.mozFullScreenElement || a.webkitFullscreenElement; if (f && d(f).parent().hasClass("owl-video-frame")) { this._core.speed(0); this._fullscreen = true } if (f && this._fullscreen && this._playing) { return false } if (this._fullscreen) { this._fullscreen = false; return false } if (this._playing) { if (this._core.state.orientation !== c.orientation) { this._core.state.orientation = c.orientation; return false } } return true }; b.prototype.destroy = function () { var f, g; this._core.$element.off("click.owl.video"); for (f in this._handlers) { this._core.$element.off(f, this._handlers[f]) } for (g in Object.getOwnPropertyNames(this)) { typeof this[g] != "function" && (this[g] = null) } }; d.fn.owlCarousel.Constructor.Plugins.Video = b })(window.Zepto || window.jQuery, window, document); (function (d, c, b, e) { var a = function (f) { this.core = f; this.core.options = d.extend({}, a.Defaults, this.core.options); this.swapping = true; this.previous = e; this.next = e; this.handlers = { "change.owl.carousel": d.proxy(function (g) { if (g.property.name == "position") { this.previous = this.core.current(); this.next = g.property.value } }, this), "drag.owl.carousel dragged.owl.carousel translated.owl.carousel": d.proxy(function (g) { this.swapping = g.type == "translated" }, this), "translate.owl.carousel": d.proxy(function (g) { if (this.swapping && (this.core.options.animateOut || this.core.options.animateIn)) { this.swap() } }, this) }; this.core.$element.on(this.handlers) }; a.Defaults = { animateOut: false, animateIn: false }; a.prototype.swap = function () { if (this.core.settings.items !== 1 || !this.core.support3d) { return } this.core.speed(0); var k, f = d.proxy(this.clear, this), j = this.core.$stage.children().eq(this.previous), i = this.core.$stage.children().eq(this.next), g = this.core.settings.animateIn, h = this.core.settings.animateOut; if (this.core.current() === this.previous) { return } if (h) { k = this.core.coordinates(this.previous) - this.core.coordinates(this.next); j.css({ left: k + "px" }).addClass("animated owl-animated-out").addClass(h).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", f) } if (g) { i.addClass("animated owl-animated-in").addClass(g).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", f) } }; a.prototype.clear = function (f) { d(f.target).css({ left: "" }).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut); this.core.transitionEnd() }; a.prototype.destroy = function () { var f, g; for (f in this.handlers) { this.core.$element.off(f, this.handlers[f]) } for (g in Object.getOwnPropertyNames(this)) { typeof this[g] != "function" && (this[g] = null) } }; d.fn.owlCarousel.Constructor.Plugins.Animate = a })(window.Zepto || window.jQuery, window, document); (function (c, b, a, e) { var d = function (f) { this.core = f; this.core.options = c.extend({}, d.Defaults, this.core.options); this.handlers = { "translated.owl.carousel refreshed.owl.carousel": c.proxy(function () { this.autoplay() }, this), "play.owl.autoplay": c.proxy(function (i, g, h) { this.play(g, h) }, this), "stop.owl.autoplay": c.proxy(function () { this.stop() }, this), "mouseover.owl.autoplay": c.proxy(function () { if (this.core.settings.autoplayHoverPause) { this.pause() } }, this), "mouseleave.owl.autoplay": c.proxy(function () { if (this.core.settings.autoplayHoverPause) { this.autoplay() } }, this) }; this.core.$element.on(this.handlers) }; d.Defaults = { autoplay: false, autoplayTimeout: 5000, autoplayHoverPause: false, autoplaySpeed: false }; d.prototype.autoplay = function () { if (this.core.settings.autoplay && !this.core.state.videoPlay) { b.clearInterval(this.interval); this.interval = b.setInterval(c.proxy(function () { this.play() }, this), this.core.settings.autoplayTimeout) } else { b.clearInterval(this.interval) } }; d.prototype.play = function (g, f) { if (a.hidden === true) { return } if (this.core.state.isTouch || this.core.state.isScrolling || this.core.state.isSwiping || this.core.state.inMotion) { return } if (this.core.settings.autoplay === false) { b.clearInterval(this.interval); return } this.core.next(this.core.settings.autoplaySpeed) }; d.prototype.stop = function () { b.clearInterval(this.interval) }; d.prototype.pause = function () { b.clearInterval(this.interval) }; d.prototype.destroy = function () { var f, g; b.clearInterval(this.interval); for (f in this.handlers) { this.core.$element.off(f, this.handlers[f]) } for (g in Object.getOwnPropertyNames(this)) { typeof this[g] != "function" && (this[g] = null) } }; c.fn.owlCarousel.Constructor.Plugins.autoplay = d })(window.Zepto || window.jQuery, window, document); (function (d, b, a, e) { var c = function (f) { this._core = f; this._initialized = false; this._pages = []; this._controls = {}; this._templates = []; this.$element = this._core.$element; this._overrides = { next: this._core.next, prev: this._core.prev, to: this._core.to }; this._handlers = { "prepared.owl.carousel": d.proxy(function (g) { if (this._core.settings.dotsData) { this._templates.push(d(g.content).find("[data-dot]").andSelf("[data-dot]").attr("data-dot")) } }, this), "add.owl.carousel": d.proxy(function (g) { if (this._core.settings.dotsData) { this._templates.splice(g.position, 0, d(g.content).find("[data-dot]").andSelf("[data-dot]").attr("data-dot")) } }, this), "remove.owl.carousel prepared.owl.carousel": d.proxy(function (g) { if (this._core.settings.dotsData) { this._templates.splice(g.position, 1) } }, this), "change.owl.carousel": d.proxy(function (i) { if (i.property.name == "position") { if (!this._core.state.revert && !this._core.settings.loop && this._core.settings.navRewind) { var h = this._core.current(), j = this._core.maximum(), g = this._core.minimum(); i.data = i.property.value > j ? h >= j ? g : j : i.property.value < g ? j : i.property.value } } }, this), "changed.owl.carousel": d.proxy(function (g) { if (g.property.name == "position") { this.draw() } }, this), "refreshed.owl.carousel": d.proxy(function () { if (!this._initialized) { this.initialize(); this._initialized = true } this._core.trigger("refresh", null, "navigation"); this.update(); this.draw(); this._core.trigger("refreshed", null, "navigation") }, this) }; this._core.options = d.extend({}, c.Defaults, this._core.options); this.$element.on(this._handlers) }; c.Defaults = { nav: false, navRewind: true, navText: ["prev", "next"], navSpeed: false, navElement: "div", navContainer: false, navContainerClass: "owl-nav", navClass: ["owl-prev", "owl-next"], slideBy: 1, dotClass: "owl-dot", dotsClass: "owl-dots", dots: true, dotsEach: false, dotData: false, dotsSpeed: false, dotsContainer: false, controlsClass: "owl-controls" }; c.prototype.initialize = function () { var h, g, f = this._core.settings; if (!f.dotsData) { this._templates = [d("<div>").addClass(f.dotClass).append(d("<span>")).prop("outerHTML")] } if (!f.navContainer || !f.dotsContainer) { this._controls.$container = d("<div>").addClass(f.controlsClass).appendTo(this.$element) } this._controls.$indicators = f.dotsContainer ? d(f.dotsContainer) : d("<div>").hide().addClass(f.dotsClass).appendTo(this._controls.$container); this._controls.$indicators.on("click", "div", d.proxy(function (j) { var i = d(j.target).parent().is(this._controls.$indicators) ? d(j.target).index() : d(j.target).parent().index(); j.preventDefault(); this.to(i, f.dotsSpeed) }, this)); h = f.navContainer ? d(f.navContainer) : d("<div>").addClass(f.navContainerClass).prependTo(this._controls.$container); this._controls.$next = d("<" + f.navElement + ">"); this._controls.$previous = this._controls.$next.clone(); this._controls.$previous.addClass(f.navClass[0]).html(f.navText[0]).hide().prependTo(h).on("click", d.proxy(function (i) { this.prev(f.navSpeed) }, this)); this._controls.$next.addClass(f.navClass[1]).html(f.navText[1]).hide().appendTo(h).on("click", d.proxy(function (i) { this.next(f.navSpeed) }, this)); for (g in this._overrides) { this._core[g] = d.proxy(this[g], this) } }; c.prototype.destroy = function () { var g, i, h, f; for (g in this._handlers) { this.$element.off(g, this._handlers[g]) } for (i in this._controls) { this._controls[i].remove() } for (f in this.overides) { this._core[f] = this._overrides[f] } for (h in Object.getOwnPropertyNames(this)) { typeof this[h] != "function" && (this[h] = null) } }; c.prototype.update = function () { var n, l, f, h = this._core.settings, g = this._core.clones().length / 2, o = g + this._core.items().length, m = h.center || h.autoWidth || h.dotData ? 1 : h.dotsEach || h.items; if (h.slideBy !== "page") { h.slideBy = Math.min(h.slideBy, h.items) } if (h.dots || h.slideBy == "page") { this._pages = []; for (n = g, l = 0, f = 0; n < o; n++) { if (l >= m || l === 0) { this._pages.push({ start: n - g, end: n - g + m - 1 }); l = 0, ++f } l += this._core.mergers(this._core.relative(n)) } } }; c.prototype.draw = function () { var l, j, h = "", g = this._core.settings, k = this._core.$stage.children(), f = this._core.relative(this._core.current()); if (g.nav && !g.loop && !g.navRewind) { this._controls.$previous.toggleClass("disabled", f <= 0); this._controls.$next.toggleClass("disabled", f >= this._core.maximum()) } this._controls.$previous.toggle(g.nav); this._controls.$next.toggle(g.nav); if (g.dots) { l = this._pages.length - this._controls.$indicators.children().length; if (g.dotData && l !== 0) { for (j = 0; j < this._controls.$indicators.children().length; j++) { h += this._templates[this._core.relative(j)] } this._controls.$indicators.html(h) } else { if (l > 0) { h = new Array(l + 1).join(this._templates[0]); this._controls.$indicators.append(h) } else { if (l < 0) { this._controls.$indicators.children().slice(l).remove() } } } this._controls.$indicators.find(".active").removeClass("active"); this._controls.$indicators.children().eq(d.inArray(this.current(), this._pages)).addClass("active") } this._controls.$indicators.toggle(g.dots) }; c.prototype.onTrigger = function (g) { var f = this._core.settings; g.page = { index: d.inArray(this.current(), this._pages), count: this._pages.length, size: f && (f.center || f.autoWidth || f.dotData ? 1 : f.dotsEach || f.items) } }; c.prototype.current = function () { var f = this._core.relative(this._core.current()); return d.grep(this._pages, function (g) { return g.start <= f && g.end >= f }).pop() }; c.prototype.getPosition = function (g) { var f, i, h = this._core.settings; if (h.slideBy == "page") { f = d.inArray(this.current(), this._pages); i = this._pages.length; g ? ++f : --f; f = this._pages[((f % i) + i) % i].start } else { f = this._core.relative(this._core.current()); i = this._core.items().length; g ? f += h.slideBy : f -= h.slideBy } return f }; c.prototype.next = function (f) { d.proxy(this._overrides.to, this._core)(this.getPosition(true), f) }; c.prototype.prev = function (f) { d.proxy(this._overrides.to, this._core)(this.getPosition(false), f) }; c.prototype.to = function (f, i, g) { var h; if (!g) { h = this._pages.length; d.proxy(this._overrides.to, this._core)(this._pages[((f % h) + h) % h].start, i) } else { d.proxy(this._overrides.to, this._core)(f, i) } }; d.fn.owlCarousel.Constructor.Plugins.Navigation = c })(window.Zepto || window.jQuery, window, document); (function (d, c, a, e) { var b = function (f) { this._core = f; this._hashes = {}; this.$element = this._core.$element; this._handlers = { "initialized.owl.carousel": d.proxy(function () { if (this._core.settings.startPosition == "URLHash") { d(c).trigger("hashchange.owl.navigation") } }, this), "prepared.owl.carousel": d.proxy(function (h) { var g = d(h.content).find("[data-hash]").andSelf("[data-hash]").attr("data-hash"); this._hashes[g] = h.content }, this) }; this._core.options = d.extend({}, b.Defaults, this._core.options); this.$element.on(this._handlers); d(c).on("hashchange.owl.navigation", d.proxy(function () { var i = c.location.hash.substring(1), h = this._core.$stage.children(), g = this._hashes[i] && h.index(this._hashes[i]) || 0; if (!i) { return false } this._core.to(g, false, true) }, this)) }; b.Defaults = { URLhashListener: false }; b.prototype.destroy = function () { var f, g; d(c).off("hashchange.owl.navigation"); for (f in this._handlers) { this._core.$element.off(f, this._handlers[f]) } for (g in Object.getOwnPropertyNames(this)) { typeof this[g] != "function" && (this[g] = null) } }; d.fn.owlCarousel.Constructor.Plugins.Hash = b })(window.Zepto || window.jQuery, window, document);
/*! Magnific Popup - v0.9.9 - 2013-12-27
* http://dimsemenov.com/plugins/magnific-popup/
* Copyright (c) 2013 Dmitry Semenov; */
(function (C) { var y = "Close", H = "BeforeClose", v = "AfterClose", N = "BeforeAppend", f = "MarkupParse", k = "Open", h = "Change", D = "mfp", d = "." + D, I = "mfp-ready", K = "mfp-removing", e = "mfp-prevent-close"; var S, z = function () { }, J = !!(window.jQuery), B, a = C(window), x, A, F, b, L; var i = function (W, X) { S.ev.on(D + W + d, X) }, n = function (aa, X, Y, W) { var Z = document.createElement("div"); Z.className = "mfp-" + aa; if (Y) { Z.innerHTML = Y } if (!W) { Z = C(Z); if (X) { Z.appendTo(X) } } else { if (X) { X.appendChild(Z) } } return Z }, P = function (X, W) { S.ev.triggerHandler(D + X, W); if (S.st.callbacks) { X = X.charAt(0).toLowerCase() + X.slice(1); if (S.st.callbacks[X]) { S.st.callbacks[X].apply(S, C.isArray(W) ? W : [W]) } } }, E = function (W) { if (W !== L || !S.currTemplate.closeBtn) { S.currTemplate.closeBtn = C(S.st.closeMarkup.replace("%title%", S.st.tClose)); L = W } return S.currTemplate.closeBtn }, s = function () { if (!C.magnificPopup.instance) { S = new z(); S.init(); C.magnificPopup.instance = S } }, V = function () { var X = document.createElement("p").style, W = ["ms", "O", "Moz", "Webkit"]; if (X.transition !== undefined) { return true } while (W.length) { if (W.pop() + "Transition" in X) { return true } } return false }; z.prototype = { constructor: z, init: function () { var W = navigator.appVersion; S.isIE7 = W.indexOf("MSIE 7.") !== -1; S.isIE8 = W.indexOf("MSIE 8.") !== -1; S.isLowIE = S.isIE7 || S.isIE8; S.isAndroid = (/android/gi).test(W); S.isIOS = (/iphone|ipad|ipod/gi).test(W); S.supportsTransition = V(); S.probablyMobile = (S.isAndroid || S.isIOS || /(Opera Mini)|Kindle|webOS|BlackBerry|(Opera Mobi)|(Windows Phone)|IEMobile/i.test(navigator.userAgent)); A = C(document); S.popupsCache = {} }, open: function (ab) { if (!x) { x = C(document.body) } var ac; if (ab.isObj === false) { S.items = ab.items.toArray(); S.index = 0; var ad = ab.items, ae; for (ac = 0; ac < ad.length; ac++) { ae = ad[ac]; if (ae.parsed) { ae = ae.el[0] } if (ae === ab.el[0]) { S.index = ac; break } } } else { S.items = C.isArray(ab.items) ? ab.items : [ab.items]; S.index = ab.index || 0 } if (S.isOpen) { S.updateItemHTML(); return } S.types = []; b = ""; if (ab.mainEl && ab.mainEl.length) { S.ev = ab.mainEl.eq(0) } else { S.ev = A } if (ab.key) { if (!S.popupsCache[ab.key]) { S.popupsCache[ab.key] = {} } S.currTemplate = S.popupsCache[ab.key] } else { S.currTemplate = {} } S.st = C.extend(true, {}, C.magnificPopup.defaults, ab); S.fixedContentPos = S.st.fixedContentPos === "auto" ? !S.probablyMobile : S.st.fixedContentPos; if (S.st.modal) { S.st.closeOnContentClick = false; S.st.closeOnBgClick = false; S.st.showCloseBtn = false; S.st.enableEscapeKey = false } if (!S.bgOverlay) { S.bgOverlay = n("bg").on("click" + d, function () { S.close() }); S.wrap = n("wrap").attr("tabindex", -1).on("click" + d, function (ag) { if (S._checkIfClose(ag.target)) { S.close() } }); S.container = n("container", S.wrap) } S.contentContainer = n("content"); if (S.st.preloader) { S.preloader = n("preloader", S.container, S.st.tLoading) } var aa = C.magnificPopup.modules; for (ac = 0; ac < aa.length; ac++) { var Z = aa[ac]; Z = Z.charAt(0).toUpperCase() + Z.slice(1); S["init" + Z].call(S) } P("BeforeOpen"); if (S.st.showCloseBtn) { if (!S.st.closeBtnInside) { S.wrap.append(E()) } else { i(f, function (aj, ah, ag, ai) { ag.close_replaceWith = E(ai.type) }); b += " mfp-close-btn-in" } } if (S.st.alignTop) { b += " mfp-align-top" } if (S.fixedContentPos) { S.wrap.css({ overflow: S.st.overflowY, overflowX: "hidden", overflowY: S.st.overflowY }) } else { S.wrap.css({ top: a.scrollTop(), position: "absolute" }) } if (S.st.fixedBgPos === false || (S.st.fixedBgPos === "auto" && !S.fixedContentPos)) { S.bgOverlay.css({ height: A.height(), position: "absolute" }) } if (S.st.enableEscapeKey) { A.on("keyup" + d, function (ag) { if (ag.keyCode === 27) { S.close() } }) } a.on("resize" + d, function () { S.updateSize() }); if (!S.st.closeOnContentClick) { b += " mfp-auto-cursor" } if (b) { S.wrap.addClass(b) } var W = S.wH = a.height(); var Y = {}; if (S.fixedContentPos) { if (S._hasScrollBar(W)) { var af = S._getScrollbarSize(); if (af) { Y.marginRight = af } } } if (S.fixedContentPos) { if (!S.isIE7) { Y.overflow = "hidden" } else { C("body, html").css("overflow", "hidden") } } var X = S.st.mainClass; if (S.isIE7) { X += " mfp-ie7" } if (X) { S._addClassToMFP(X) } S.updateItemHTML(); P("BuildControls"); C("html").css(Y); S.bgOverlay.add(S.wrap).prependTo(S.st.prependTo || x); S._lastFocusedEl = document.activeElement; setTimeout(function () { if (S.content) { S._addClassToMFP(I); S._setFocus() } else { S.bgOverlay.addClass(I) } A.on("focusin" + d, S._onFocusIn) }, 16); S.isOpen = true; S.updateSize(W); P(k); return ab }, close: function () { if (!S.isOpen) { return } P(H); S.isOpen = false; if (S.st.removalDelay && !S.isLowIE && S.supportsTransition) { S._addClassToMFP(K); setTimeout(function () { S._close() }, S.st.removalDelay) } else { S._close() } }, _close: function () { P(y); var W = K + " " + I + " "; S.bgOverlay.detach(); S.wrap.detach(); S.container.empty(); if (S.st.mainClass) { W += S.st.mainClass + " " } S._removeClassFromMFP(W); if (S.fixedContentPos) { var X = { marginRight: "" }; if (S.isIE7) { C("body, html").css("overflow", "") } else { X.overflow = "" } C("html").css(X) } A.off("keyup" + d + " focusin" + d); S.ev.off(d); S.wrap.attr("class", "mfp-wrap").removeAttr("style"); S.bgOverlay.attr("class", "mfp-bg"); S.container.attr("class", "mfp-container"); if (S.st.showCloseBtn && (!S.st.closeBtnInside || S.currTemplate[S.currItem.type] === true)) { if (S.currTemplate.closeBtn) { S.currTemplate.closeBtn.detach() } } if (S._lastFocusedEl) { C(S._lastFocusedEl).focus() } S.currItem = null; S.content = null; S.currTemplate = null; S.prevHeight = 0; P(v) }, updateSize: function (X) { if (S.isIOS) { var Y = document.documentElement.clientWidth / window.innerWidth; var W = window.innerHeight * Y; S.wrap.css("height", W); S.wH = W } else { S.wH = X || a.height() } if (!S.fixedContentPos) { S.wrap.css("height", S.wH) } P("Resize") }, updateItemHTML: function () { var Z = S.items[S.index]; S.contentContainer.detach(); if (S.content) { S.content.detach() } if (!Z.parsed) { Z = S.parseEl(S.index) } var Y = Z.type; P("BeforeChange", [S.currItem ? S.currItem.type : "", Y]); S.currItem = Z; if (!S.currTemplate[Y]) { var X = S.st[Y] ? S.st[Y].markup : false; P("FirstMarkupParse", X); if (X) { S.currTemplate[Y] = C(X) } else { S.currTemplate[Y] = true } } if (F && F !== Z.type) { S.container.removeClass("mfp-" + F + "-holder") } var W = S["get" + Y.charAt(0).toUpperCase() + Y.slice(1)](Z, S.currTemplate[Y]); S.appendContent(W, Y); Z.preloaded = true; P(h, Z); F = Z.type; S.container.prepend(S.contentContainer); P("AfterChange") }, appendContent: function (W, X) { S.content = W; if (W) { if (S.st.showCloseBtn && S.st.closeBtnInside && S.currTemplate[X] === true) { if (!S.content.find(".mfp-close").length) { S.content.append(E()) } } else { S.content = W } } else { S.content = "" } P(N); S.container.addClass("mfp-" + X + "-holder"); S.contentContainer.append(S.content) }, parseEl: function (W) { var aa = S.items[W], Z; if (aa.tagName) { aa = { el: C(aa) } } else { Z = aa.type; aa = { data: aa, src: aa.src } } if (aa.el) { var Y = S.types; for (var X = 0; X < Y.length; X++) { if (aa.el.hasClass("mfp-" + Y[X])) { Z = Y[X]; break } } aa.src = aa.el.attr("data-mfp-src"); if (!aa.src) { aa.src = aa.el.attr("href") } } aa.type = Z || S.st.type || "inline"; aa.index = W; aa.parsed = true; S.items[W] = aa; P("ElementParse", aa); return S.items[W] }, addGroup: function (Y, X) { var Z = function (aa) { aa.mfpEl = this; S._openClick(aa, Y, X) }; if (!X) { X = {} } var W = "click.magnificPopup"; X.mainEl = Y; if (X.items) { X.isObj = true; Y.off(W).on(W, Z) } else { X.isObj = false; if (X.delegate) { Y.off(W).on(W, X.delegate, Z) } else { X.items = Y; Y.off(W).on(W, Z) } } }, _openClick: function (aa, Y, W) { var X = W.midClick !== undefined ? W.midClick : C.magnificPopup.defaults.midClick; if (!X && (aa.which === 2 || aa.ctrlKey || aa.metaKey)) { return } var Z = W.disableOn !== undefined ? W.disableOn : C.magnificPopup.defaults.disableOn; if (Z) { if (C.isFunction(Z)) { if (!Z.call(S)) { return true } } else { if (a.width() < Z) { return true } } } if (aa.type) { aa.preventDefault(); if (S.isOpen) { aa.stopPropagation() } } W.el = C(aa.mfpEl); if (W.delegate) { W.items = Y.find(W.delegate) } S.open(W) }, updateStatus: function (W, Y) { if (S.preloader) { if (B !== W) { S.container.removeClass("mfp-s-" + B) } if (!Y && W === "loading") { Y = S.st.tLoading } var X = { status: W, text: Y }; P("UpdateStatus", X); W = X.status; Y = X.text; S.preloader.html(Y); S.preloader.find("a").on("click", function (Z) { Z.stopImmediatePropagation() }); S.container.addClass("mfp-s-" + W); B = W } }, _checkIfClose: function (Y) { if (C(Y).hasClass(e)) { return } var W = S.st.closeOnContentClick; var X = S.st.closeOnBgClick; if (W && X) { return true } else { if (!S.content || C(Y).hasClass("mfp-close") || (S.preloader && Y === S.preloader[0])) { return true } if ((Y !== S.content[0] && !C.contains(S.content[0], Y))) { if (X) { if (C.contains(document, Y)) { return true } } } else { if (W) { return true } } } return false }, _addClassToMFP: function (W) { S.bgOverlay.addClass(W); S.wrap.addClass(W) }, _removeClassFromMFP: function (W) { this.bgOverlay.removeClass(W); S.wrap.removeClass(W) }, _hasScrollBar: function (W) { return ((S.isIE7 ? A.height() : document.body.scrollHeight) > (W || a.height())) }, _setFocus: function () { (S.st.focus ? S.content.find(S.st.focus).eq(0) : S.wrap).focus() }, _onFocusIn: function (W) { if (W.target !== S.wrap[0] && !C.contains(S.wrap[0], W.target)) { S._setFocus(); return false } }, _parseMarkup: function (Y, X, Z) { var W; if (Z.data) { X = C.extend(Z.data, X) } P(f, [Y, X, Z]); C.each(X, function (ab, ad) { if (ad === undefined || ad === false) { return true } W = ab.split("_"); if (W.length > 1) { var ac = Y.find(d + "-" + W[0]); if (ac.length > 0) { var aa = W[1]; if (aa === "replaceWith") { if (ac[0] !== ad[0]) { ac.replaceWith(ad) } } else { if (aa === "img") { if (ac.is("img")) { ac.attr("src", ad) } else { ac.replaceWith('<img src="' + ad + '" class="' + ac.attr("class") + '" />') } } else { ac.attr(W[1], ad) } } } } else { Y.find(d + "-" + ab).html(ad) } }) }, _getScrollbarSize: function () { if (S.scrollbarSize === undefined) { var W = document.createElement("div"); W.id = "mfp-sbm"; W.style.cssText = "width: 99px; height: 99px; overflow: scroll; position: absolute; top: -9999px;"; document.body.appendChild(W); S.scrollbarSize = W.offsetWidth - W.clientWidth; document.body.removeChild(W) } return S.scrollbarSize } }; C.magnificPopup = { instance: null, proto: z.prototype, modules: [], open: function (X, W) { s(); if (!X) { X = {} } else { X = C.extend(true, {}, X) } X.isObj = true; X.index = W || 0; return this.instance.open(X) }, close: function () { return C.magnificPopup.instance && C.magnificPopup.instance.close() }, registerModule: function (W, X) { if (X.options) { C.magnificPopup.defaults[W] = X.options } C.extend(this.proto, X.proto); this.modules.push(W) }, defaults: { disableOn: 0, key: null, midClick: false, mainClass: "", preloader: true, focus: "", closeOnContentClick: false, closeOnBgClick: true, closeBtnInside: true, showCloseBtn: true, enableEscapeKey: true, modal: false, alignTop: false, removalDelay: 0, prependTo: null, fixedContentPos: "auto", fixedBgPos: "auto", overflowY: "auto", closeMarkup: '<button title="%title%" type="button" class="mfp-close">&times;</button>', tClose: "Close (Esc)", tLoading: "Loading..." } }; C.fn.magnificPopup = function (Y) { s(); var Z = C(this); if (typeof Y === "string") { if (Y === "open") { var W, aa = J ? Z.data("magnificPopup") : Z[0].magnificPopup, X = parseInt(arguments[1], 10) || 0; if (aa.items) { W = aa.items[X] } else { W = Z; if (aa.delegate) { W = W.find(aa.delegate) } W = W.eq(X) } S._openClick({ mfpEl: W }, Z, aa) } else { if (S.isOpen) { S[Y].apply(S, Array.prototype.slice.call(arguments, 1)) } } } else { Y = C.extend(true, {}, Y); if (J) { Z.data("magnificPopup", Y) } else { Z[0].magnificPopup = Y } S.addGroup(Z, Y) } return Z }; var G = "inline", R, O, r, l = function () { if (r) { O.after(r.addClass(R)).detach(); r = null } }; C.magnificPopup.registerModule(G, { options: { hiddenClass: "hide", markup: "", tNotFound: "Content not found" }, proto: { initInline: function () { S.types.push(G); i(y + "." + G, function () { l() }) }, getInline: function (aa, Z) { l(); if (aa.src) { var W = S.st.inline, Y = C(aa.src); if (Y.length) { var X = Y[0].parentNode; if (X && X.tagName) { if (!O) { R = W.hiddenClass; O = n(R); R = "mfp-" + R } r = Y.after(O).detach().removeClass(R) } S.updateStatus("ready") } else { S.updateStatus("error", W.tNotFound); Y = C("<div>") } aa.inlineElement = Y; return Y } S.updateStatus("ready"); S._parseMarkup(Z, {}, aa); return Z } } }); var t = "ajax", U, u = function () { if (U) { x.removeClass(U) } }, T = function () { u(); if (S.req) { S.req.abort() } }; C.magnificPopup.registerModule(t, { options: { settings: null, cursor: "mfp-ajax-cur", tError: '<a href="%url%">The content</a> could not be loaded.' }, proto: { initAjax: function () { S.types.push(t); U = S.st.ajax.cursor; i(y + "." + t, T); i("BeforeChange." + t, T) }, getAjax: function (X) { if (U) { x.addClass(U) } S.updateStatus("loading"); var W = C.extend({ url: X.src, success: function (aa, ab, Z) { var Y = { data: aa, xhr: Z }; P("ParseAjax", Y); S.appendContent(C(Y.data), t); X.finished = true; u(); S._setFocus(); setTimeout(function () { S.wrap.addClass(I) }, 16); S.updateStatus("ready"); P("AjaxContentAdded") }, error: function () { u(); X.finished = X.loadError = true; S.updateStatus("error", S.st.ajax.tError.replace("%url%", X.src)) } }, S.st.ajax.settings); S.req = C.ajax(W); return "" } } }); var g, c = function (W) { if (W.data && W.data.title !== undefined) { return W.data.title } var X = S.st.image.titleSrc; if (X) { if (C.isFunction(X)) { return X.call(S, W) } else { if (W.el) { return W.el.attr(X) || "" } } } return "" }; C.magnificPopup.registerModule("image", { options: { markup: '<div class="mfp-figure"><div class="mfp-close"></div><figure><div class="mfp-img"></div><figcaption><div class="mfp-bottom-bar"><div class="mfp-title"></div><div class="mfp-counter"></div></div></figcaption></figure></div>', cursor: "mfp-zoom-out-cur", titleSrc: "title", verticalFit: true, tError: '<a href="%url%">The image</a> could not be loaded.' }, proto: { initImage: function () { var X = S.st.image, W = ".image"; S.types.push("image"); i(k + W, function () { if (S.currItem.type === "image" && X.cursor) { x.addClass(X.cursor) } }); i(y + W, function () { if (X.cursor) { x.removeClass(X.cursor) } a.off("resize" + d) }); i("Resize" + W, S.resizeImage); if (S.isLowIE) { i("AfterChange", S.resizeImage) } }, resizeImage: function () { var X = S.currItem; if (!X || !X.img) { return } if (S.st.image.verticalFit) { var W = 0; if (S.isLowIE) { W = parseInt(X.img.css("padding-top"), 10) + parseInt(X.img.css("padding-bottom"), 10) } X.img.css("max-height", S.wH - W) } }, _onImageHasSize: function (W) { if (W.img) { W.hasSize = true; if (g) { clearInterval(g) } W.isCheckingImgSize = false; P("ImageHasSize", W); if (W.imgHidden) { if (S.content) { S.content.removeClass("mfp-loading") } W.imgHidden = false } } }, findImageSize: function (Z) { var W = 0, X = Z.img[0], Y = function (aa) { if (g) { clearInterval(g) } g = setInterval(function () { if (X.naturalWidth > 0) { S._onImageHasSize(Z); return } if (W > 200) { clearInterval(g) } W++; if (W === 3) { Y(10) } else { if (W === 40) { Y(50) } else { if (W === 100) { Y(500) } } } }, aa) }; Y(1) }, getImage: function (ac, Z) { var ab = 0, ad = function () { if (ac) { if (ac.img[0].complete) { ac.img.off(".mfploader"); if (ac === S.currItem) { S._onImageHasSize(ac); S.updateStatus("ready") } ac.hasSize = true; ac.loaded = true; P("ImageLoadComplete") } else { ab++; if (ab < 200) { setTimeout(ad, 100) } else { W() } } } }, W = function () { if (ac) { ac.img.off(".mfploader"); if (ac === S.currItem) { S._onImageHasSize(ac); S.updateStatus("error", aa.tError.replace("%url%", ac.src)) } ac.hasSize = true; ac.loaded = true; ac.loadError = true } }, aa = S.st.image; var Y = Z.find(".mfp-img"); if (Y.length) { var X = document.createElement("img"); X.className = "mfp-img"; ac.img = C(X).on("load.mfploader", ad).on("error.mfploader", W); X.src = ac.src; if (Y.is("img")) { ac.img = ac.img.clone() } X = ac.img[0]; if (X.naturalWidth > 0) { ac.hasSize = true } else { if (!X.width) { ac.hasSize = false } } } S._parseMarkup(Z, { title: c(ac), img_replaceWith: ac.img }, ac); S.resizeImage(); if (ac.hasSize) { if (g) { clearInterval(g) } if (ac.loadError) { Z.addClass("mfp-loading"); S.updateStatus("error", aa.tError.replace("%url%", ac.src)) } else { Z.removeClass("mfp-loading"); S.updateStatus("ready") } return Z } S.updateStatus("loading"); ac.loading = true; if (!ac.hasSize) { ac.imgHidden = true; Z.addClass("mfp-loading"); S.findImageSize(ac) } return Z } } }); var j, M = function () { if (j === undefined) { j = document.createElement("p").style.MozTransform !== undefined } return j }; C.magnificPopup.registerModule("zoom", { options: { enabled: false, easing: "ease-in-out", duration: 300, opener: function (W) { return W.is("img") ? W : W.find("img") } }, proto: { initZoom: function () { var X = S.st.zoom, aa = ".zoom", ad; if (!X.enabled || !S.supportsTransition) { return } var ac = X.duration, ab = function (ag) { var af = ag.clone().removeAttr("style").removeAttr("class").addClass("mfp-animated-image"), ah = "all " + (X.duration / 1000) + "s " + X.easing, ai = { position: "fixed", zIndex: 9999, left: 0, top: 0, "-webkit-backface-visibility": "hidden" }, ae = "transition"; ai["-webkit-" + ae] = ai["-moz-" + ae] = ai["-o-" + ae] = ai[ae] = ah; af.css(ai); return af }, W = function () { S.content.css("visibility", "visible") }, Y, Z; i("BuildControls" + aa, function () { if (S._allowZoom()) { clearTimeout(Y); S.content.css("visibility", "hidden"); ad = S._getItemToZoom(); if (!ad) { W(); return } Z = ab(ad); Z.css(S._getOffset()); S.wrap.append(Z); Y = setTimeout(function () { Z.css(S._getOffset(true)); Y = setTimeout(function () { W(); setTimeout(function () { Z.remove(); ad = Z = null; P("ZoomAnimationEnded") }, 16) }, ac) }, 16) } }); i(H + aa, function () { if (S._allowZoom()) { clearTimeout(Y); S.st.removalDelay = ac; if (!ad) { ad = S._getItemToZoom(); if (!ad) { return } Z = ab(ad) } Z.css(S._getOffset(true)); S.wrap.append(Z); S.content.css("visibility", "hidden"); setTimeout(function () { Z.css(S._getOffset()) }, 16) } }); i(y + aa, function () { if (S._allowZoom()) { W(); if (Z) { Z.remove() } ad = null } }) }, _allowZoom: function () { return S.currItem.type === "image" }, _getItemToZoom: function () { if (S.currItem.hasSize) { return S.currItem.img } else { return false } }, _getOffset: function (Y) { var W; if (Y) { W = S.currItem.img } else { W = S.st.zoom.opener(S.currItem.el || S.currItem) } var ab = W.offset(); var X = parseInt(W.css("padding-top"), 10); var aa = parseInt(W.css("padding-bottom"), 10); ab.top -= (C(window).scrollTop() - X); var Z = { width: W.width(), height: (J ? W.innerHeight() : W[0].offsetHeight) - aa - X }; if (M()) { Z["-moz-transform"] = Z.transform = "translate(" + ab.left + "px," + ab.top + "px)" } else { Z.left = ab.left; Z.top = ab.top } return Z } } }); var q = "iframe", p = "//about:blank", Q = function (W) { if (S.currTemplate[q]) { var X = S.currTemplate[q].find("iframe"); if (X.length) { if (!W) { X[0].src = p } if (S.isIE8) { X.css("display", W ? "block" : "none") } } } }; C.magnificPopup.registerModule(q, { options: { markup: '<div class="mfp-iframe-scaler"><div class="mfp-close"></div><iframe class="mfp-iframe" src="//about:blank" frameborder="0" allowfullscreen></iframe></div>', srcAction: "iframe_src", patterns: { youtube: { index: "youtube.com", id: "v=", src: "//www.youtube.com/embed/%id%?autoplay=1" }, vimeo: { index: "vimeo.com/", id: "/", src: "//player.vimeo.com/video/%id%?autoplay=1" }, gmaps: { index: "//maps.google.", src: "%id%&output=embed" } } }, proto: { initIframe: function () { S.types.push(q); i("BeforeChange", function (Y, W, X) { if (W !== X) { if (W === q) { Q() } else { if (X === q) { Q(true) } } } }); i(y + "." + q, function () { Q() }) }, getIframe: function (aa, Z) { var W = aa.src; var Y = S.st.iframe; C.each(Y.patterns, function () { if (W.indexOf(this.index) > -1) { if (this.id) { if (typeof this.id === "string") { W = W.substr(W.lastIndexOf(this.id) + this.id.length, W.length) } else { W = this.id.call(this, W) } } W = this.src.replace("%id%", W); return false } }); var X = {}; if (Y.srcAction) { X[Y.srcAction] = W } S._parseMarkup(Z, X, aa); S.updateStatus("ready"); return Z } } }); var w = function (W) { var X = S.items.length; if (W > X - 1) { return W - X } else { if (W < 0) { return X + W } } return W }, o = function (Y, X, W) { return Y.replace(/%curr%/gi, X + 1).replace(/%total%/gi, W) }; C.magnificPopup.registerModule("gallery", { options: { enabled: false, arrowMarkup: '<button title="%title%" type="button" class="mfp-arrow mfp-arrow-%dir%"></button>', preload: [0, 2], navigateByImgClick: true, arrows: true, tPrev: "Previous (Left arrow key)", tNext: "Next (Right arrow key)", tCounter: "%curr% of %total%" }, proto: { initGallery: function () { var W = S.st.gallery, Y = ".mfp-gallery", X = Boolean(C.fn.mfpFastClick); S.direction = true; if (!W || !W.enabled) { return false } b += " mfp-gallery"; i(k + Y, function () { if (W.navigateByImgClick) { S.wrap.on("click" + Y, ".mfp-img", function () { if (S.items.length > 1) { S.next(); return false } }) } A.on("keydown" + Y, function (Z) { if (Z.keyCode === 37) { S.prev() } else { if (Z.keyCode === 39) { S.next() } } }) }); i("UpdateStatus" + Y, function (aa, Z) { if (Z.text) { Z.text = o(Z.text, S.currItem.index, S.items.length) } }); i(f + Y, function (ad, ab, aa, ac) { var Z = S.items.length; aa.counter = Z > 1 ? o(W.tCounter, ac.index, Z) : "" }); i("BuildControls" + Y, function () { if (S.items.length > 1 && W.arrows && !S.arrowLeft) { var ab = W.arrowMarkup, ac = S.arrowLeft = C(ab.replace(/%title%/gi, W.tPrev).replace(/%dir%/gi, "left")).addClass(e), aa = S.arrowRight = C(ab.replace(/%title%/gi, W.tNext).replace(/%dir%/gi, "right")).addClass(e); var Z = X ? "mfpFastClick" : "click"; ac[Z](function () { S.prev() }); aa[Z](function () { S.next() }); if (S.isIE7) { n("b", ac[0], false, true); n("a", ac[0], false, true); n("b", aa[0], false, true); n("a", aa[0], false, true) } S.container.append(ac.add(aa)) } }); i(h + Y, function () { if (S._preloadTimeout) { clearTimeout(S._preloadTimeout) } S._preloadTimeout = setTimeout(function () { S.preloadNearbyImages(); S._preloadTimeout = null }, 16) }); i(y + Y, function () { A.off(Y); S.wrap.off("click" + Y); if (S.arrowLeft && X) { S.arrowLeft.add(S.arrowRight).destroyMfpFastClick() } S.arrowRight = S.arrowLeft = null }) }, next: function () { S.direction = true; S.index = w(S.index + 1); S.updateItemHTML() }, prev: function () { S.direction = false; S.index = w(S.index - 1); S.updateItemHTML() }, goTo: function (W) { S.direction = (W >= S.index); S.index = W; S.updateItemHTML() }, preloadNearbyImages: function () { var Z = S.st.gallery.preload, X = Math.min(Z[0], S.items.length), Y = Math.min(Z[1], S.items.length), W; for (W = 1; W <= (S.direction ? Y : X); W++) { S._preloadItem(S.index + W) } for (W = 1; W <= (S.direction ? X : Y); W++) { S._preloadItem(S.index - W) } }, _preloadItem: function (W) { W = w(W); if (S.items[W].preloaded) { return } var X = S.items[W]; if (!X.parsed) { X = S.parseEl(W) } P("LazyLoad", X); if (X.type === "image") { X.img = C('<img class="mfp-img" />').on("load.mfploader", function () { X.hasSize = true }).on("error.mfploader", function () { X.hasSize = true; X.loadError = true; P("LazyLoadError", X) }).attr("src", X.src) } X.preloaded = true } } }); var m = "retina"; C.magnificPopup.registerModule(m, { options: { replaceSrc: function (W) { return W.src.replace(/\.\w+$/, function (X) { return "@2x" + X }) }, ratio: 1 }, proto: { initRetina: function () { if (window.devicePixelRatio > 1) { var W = S.st.retina, X = W.ratio; X = !isNaN(X) ? X : X(); if (X > 1) { i("ImageHasSize." + m, function (Z, Y) { Y.img.css({ "max-width": Y.img[0].naturalWidth / X, width: "100%" }) }); i("ElementParse." + m, function (Z, Y) { Y.src = W.replaceSrc(Y, X) }) } } } } }); (function () { var X = 1000, Z = "ontouchstart" in window, aa = function () { a.off("touchmove" + Y + " touchend" + Y) }, W = "mfpFastClick", Y = "." + W; C.fn.mfpFastClick = function (ab) { return C(this).each(function () { var ai = C(this), ah; if (Z) { var aj, ae, ad, ag, ac, af; ai.on("touchstart" + Y, function (ak) { ag = false; af = 1; ac = ak.originalEvent ? ak.originalEvent.touches[0] : ak.touches[0]; ae = ac.clientX; ad = ac.clientY; a.on("touchmove" + Y, function (al) { ac = al.originalEvent ? al.originalEvent.touches : al.touches; af = ac.length; ac = ac[0]; if (Math.abs(ac.clientX - ae) > 10 || Math.abs(ac.clientY - ad) > 10) { ag = true; aa() } }).on("touchend" + Y, function (al) { aa(); if (ag || af > 1) { return } ah = true; al.preventDefault(); clearTimeout(aj); aj = setTimeout(function () { ah = false }, X); ab() }) }) } ai.on("click" + Y, function () { if (!ah) { ab() } }) }) }; C.fn.destroyMfpFastClick = function () { C(this).off("touchstart" + Y + " click" + Y); if (Z) { a.off("touchmove" + Y + " touchend" + Y) } } })(); s() })(window.jQuery || window.Zepto);
(function (b, a) { typeof exports === "object" && typeof module !== "undefined" ? module.exports = a() : typeof define === "function" && define.amd ? define(a) : b.moment = a() }(this, function () { var bH; function bt() { return bH.apply(null, arguments) } function aw(el) { bH = el } function J(el) { return Object.prototype.toString.call(el) === "[object Array]" } function dM(el) { return el instanceof Date || Object.prototype.toString.call(el) === "[object Date]" } function a3(el, eo) { var en = [], em; for (em = 0; em < el.length; ++em) { en.push(eo(el[em], em)) } return en } function cN(em, el) { return Object.prototype.hasOwnProperty.call(em, el) } function ef(em, el) { for (var en in el) { if (cN(el, en)) { em[en] = el[en] } } if (cN(el, "toString")) { em.toString = el.toString } if (cN(el, "valueOf")) { em.valueOf = el.valueOf } return em } function dC(en, eo, el, em) { return Q(en, eo, el, em, true).utc() } function bX() { return { empty: false, unusedTokens: [], unusedInput: [], overflow: -2, charsLeftOver: 0, nullInput: false, invalidMonth: null, invalidFormat: false, userInvalidated: false, iso: false } } function aQ(el) { if (el._pf == null) { el._pf = bX() } return el._pf } function ag(el) { if (el._isValid == null) { var em = aQ(el); el._isValid = !isNaN(el._d.getTime()) && em.overflow < 0 && !em.empty && !em.invalidMonth && !em.invalidWeekday && !em.nullInput && !em.invalidFormat && !em.userInvalidated; if (el._strict) { el._isValid = el._isValid && em.charsLeftOver === 0 && em.unusedTokens.length === 0 && em.bigHour === undefined } } return el._isValid } function cc(em) { var el = dC(NaN); if (em != null) { ef(aQ(el), em) } else { aQ(el).userInvalidated = true } return el } function y(el) { return el === void 0 } var cm = bt.momentProperties = []; function o(ep, eo) { var el, en, em; if (!y(eo._isAMomentObject)) { ep._isAMomentObject = eo._isAMomentObject } if (!y(eo._i)) { ep._i = eo._i } if (!y(eo._f)) { ep._f = eo._f } if (!y(eo._l)) { ep._l = eo._l } if (!y(eo._strict)) { ep._strict = eo._strict } if (!y(eo._tzm)) { ep._tzm = eo._tzm } if (!y(eo._isUTC)) { ep._isUTC = eo._isUTC } if (!y(eo._offset)) { ep._offset = eo._offset } if (!y(eo._pf)) { ep._pf = aQ(eo) } if (!y(eo._locale)) { ep._locale = eo._locale } if (cm.length > 0) { for (el in cm) { en = cm[el]; em = eo[en]; if (!y(em)) { ep[en] = em } } } return ep } var cI = false; function dJ(el) { o(this, el); this._d = new Date(el._d != null ? el._d.getTime() : NaN); if (cI === false) { cI = true; bt.updateOffset(this); cI = false } } function bI(el) { return el instanceof dJ || (el != null && el._isAMomentObject != null) } function cK(el) { if (el < 0) { return Math.ceil(el) } else { return Math.floor(el) } } function ck(el) { var en = +el, em = 0; if (en !== 0 && isFinite(en)) { em = cK(en) } return em } function by(eq, ep, em) { var el = Math.min(eq.length, ep.length), en = Math.abs(eq.length - ep.length), er = 0, eo; for (eo = 0; eo < el; eo++) { if ((em && eq[eo] !== ep[eo]) || (!em && ck(eq[eo]) !== ck(ep[eo]))) { er++ } } return er + en } function b7() { } var bd = {}; var cs; function cP(el) { return el ? el.toLowerCase().replace("_", "-") : el } function cr(eq) { var eo = 0, em, ep, el, en; while (eo < eq.length) { en = cP(eq[eo]).split("-"); em = en.length; ep = cP(eq[eo + 1]); ep = ep ? ep.split("-") : null; while (em > 0) { el = ak(en.slice(0, em).join("-")); if (el) { return el } if (ep && ep.length >= em && by(en, ep, true) >= em - 1) { break } em-- } eo++ } return null } function ak(el) { var en = null; if (!bd[el] && (typeof module !== "undefined") && module && module.exports) { try { en = cs._abbr; require("./locale/" + el); ce(en) } catch (em) { } } return bd[el] } function ce(em, el) { var en; if (em) { if (y(el)) { en = q(em) } else { en = b6(em, el) } if (en) { cs = en } } return cs._abbr } function b6(em, el) { if (el !== null) { el.abbr = em; bd[em] = bd[em] || new b7(); bd[em].set(el); ce(em); return bd[em] } else { delete bd[em]; return null } } function q(em) { var el; if (em && em._locale && em._locale._abbr) { em = em._locale._abbr } if (!em) { return cs } if (!J(em)) { el = ak(em); if (el) { return el } em = [em] } return cr(em) } var ch = {}; function bL(en, el) { var em = en.toLowerCase(); ch[em] = ch[em + "s"] = ch[el] = en } function cj(el) { return typeof el === "string" ? ch[el] || ch[el.toLowerCase()] : undefined } function c8(en) { var em = {}, el, eo; for (eo in en) { if (cN(en, eo)) { el = cj(eo); if (el) { em[el] = en[eo] } } } return em } function aJ(el) { return el instanceof Function || Object.prototype.toString.call(el) === "[object Function]" } function du(el, em) { return function (en) { if (en != null) { dN(this, el, en); bt.updateOffset(this, em); return this } else { return d2(this, el) } } } function d2(em, el) { return em.isValid() ? em._d["get" + (em._isUTC ? "UTC" : "") + el]() : NaN } function dN(em, el, en) { if (em.isValid()) { em._d["set" + (em._isUTC ? "UTC" : "") + el](en) } } function dS(el, en) { var em; if (typeof el === "object") { for (em in el) { this.set(em, el[em]) } } else { el = cj(el); if (aJ(this[el])) { return this[el](en) } } return this } function bU(eq, ep, em) { var eo = "" + Math.abs(eq), en = ep - eo.length, el = eq >= 0; return (el ? (em ? "+" : "") : "-") + Math.pow(10, Math.max(0, en)).toString().substr(1) + eo } var br = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g; var bq = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g; var bp = {}; var aO = {}; function b2(em, en, el, ep) { var eo = ep; if (typeof ep === "string") { eo = function () { return this[ep]() } } if (em) { aO[em] = eo } if (en) { aO[en[0]] = function () { return bU(eo.apply(this, arguments), en[1], en[2]) } } if (el) { aO[el] = function () { return this.localeData().ordinal(eo.apply(this, arguments), em) } } } function ah(el) { if (el.match(/\[[\s\S]/)) { return el.replace(/^\[|\]$/g, "") } return el.replace(/\\/g, "") } function bc(en) { var eo = en.match(br), el, em; for (el = 0, em = eo.length; el < em; el++) { if (aO[eo[el]]) { eo[el] = aO[eo[el]] } else { eo[el] = ah(eo[el]) } } return function (eq) { var ep = ""; for (el = 0; el < em; el++) { ep += eo[el] instanceof Function ? eo[el].call(eq, en) : eo[el] } return ep } } function T(el, em) { if (!el.isValid()) { return el.localeData().invalidDate() } em = bh(em, el.localeData()); bp[em] = bp[em] || bc(em); return bp[em](el) } function bh(eo, el) { var em = 5; function en(ep) { return el.longDateFormat(ep) || ep } bq.lastIndex = 0; while (em >= 0 && bq.test(eo)) { eo = eo.replace(bq, en); bq.lastIndex = 0; em -= 1 } return eo } var ar = /\d/; var aq = /\d\d/; var ap = /\d{3}/; var ao = /\d{4}/; var an = /[+-]?\d{6}/; var af = /\d\d?/; var bR = /\d\d\d\d?/; var dw = /\d\d\d\d\d\d?/; var ae = /\d{1,3}/; var ad = /\d{1,4}/; var ac = /[+-]?\d{1,6}/; var p = /\d+/; var v = /[+-]?\d+/; var bj = /Z|[+-]\d\d:?\d\d/gi; var b9 = /Z|[+-]\d\d(?::?\d\d)?/gi; var eb = /[+-]?\d+(\.\d{1,3})?/; var aL = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i; var aF = {}; function aS(el, em, en) { aF[el] = aJ(em) ? em : function (ep, eo) { return (ep && en) ? en : em } } function bg(em, el) { if (!cN(aF, em)) { return new RegExp(cL(em)) } return aF[em](el._strict, el._locale) } function cL(el) { return bM(el.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (em, eq, ep, eo, en) { return eq || ep || eo || en })) } function bM(el) { return el.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&") } var h = {}; function bu(em, eo) { var el, en = eo; if (typeof em === "string") { em = [em] } if (typeof eo === "number") { en = function (ep, eq) { eq[eo] = ck(ep) } } for (el = 0; el < em.length; el++) { h[em[el]] = en } } function M(el, em) { bu(el, function (en, eq, eo, ep) { eo._w = eo._w || {}; em(en, eo._w, eo, ep) }) } function s(en, el, em) { if (el != null && cN(h, en)) { h[en](el, em._a, em, en) } } var ec = 0; var j = 1; var dL = 2; var dZ = 3; var c6 = 4; var W = 5; var bk = 6; var bN = 7; var i = 8; function bi(el, em) { return new Date(Date.UTC(el, em + 1, 0)).getUTCDate() } b2("M", ["MM", 2], "Mo", function () { return this.month() + 1 }); b2("MMM", 0, 0, function (el) { return this.localeData().monthsShort(this, el) }); b2("MMMM", 0, 0, function (el) { return this.localeData().months(this, el) }); bL("month", "M"); aS("M", af); aS("MM", af, aq); aS("MMM", function (em, el) { return el.monthsShortRegex(em) }); aS("MMMM", function (em, el) { return el.monthsRegex(em) }); bu(["M", "MM"], function (el, em) { em[j] = ck(el) - 1 }); bu(["MMM", "MMMM"], function (el, ep, em, en) { var eo = em._locale.monthsParse(el, en, em._strict); if (eo != null) { ep[j] = eo } else { aQ(em).invalidMonth = el } }); var bB = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/; var F = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"); function aD(el, em) { return J(this._months) ? this._months[el.month()] : this._months[bB.test(em) ? "format" : "standalone"][el.month()] } var dk = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"); function aP(el, em) { return J(this._monthsShort) ? this._monthsShort[el.month()] : this._monthsShort[bB.test(em) ? "format" : "standalone"][el.month()] } function cE(em, eq, el) { var en, ep, eo; if (!this._monthsParse) { this._monthsParse = []; this._longMonthsParse = []; this._shortMonthsParse = [] } for (en = 0; en < 12; en++) { ep = dC([2000, en]); if (el && !this._longMonthsParse[en]) { this._longMonthsParse[en] = new RegExp("^" + this.months(ep, "").replace(".", "") + "$", "i"); this._shortMonthsParse[en] = new RegExp("^" + this.monthsShort(ep, "").replace(".", "") + "$", "i") } if (!el && !this._monthsParse[en]) { eo = "^" + this.months(ep, "") + "|^" + this.monthsShort(ep, ""); this._monthsParse[en] = new RegExp(eo.replace(".", ""), "i") } if (el && eq === "MMMM" && this._longMonthsParse[en].test(em)) { return en } else { if (el && eq === "MMM" && this._shortMonthsParse[en].test(em)) { return en } else { if (!el && this._monthsParse[en].test(em)) { return en } } } } } function az(el, em) { var en; if (!el.isValid()) { return el } if (typeof em === "string") { em = el.localeData().monthsParse(em); if (typeof em !== "number") { return el } } en = Math.min(el.date(), bi(el.year(), em)); el._d["set" + (el._isUTC ? "UTC" : "") + "Month"](em, en); return el } function dY(el) { if (el != null) { az(this, el); bt.updateOffset(this, true); return this } else { return d2(this, "Month") } } function bn() { return bi(this.year(), this.month()) } var cJ = aL; function cM(el) { if (this._monthsParseExact) { if (!cN(this, "_monthsRegex")) { cO.call(this) } if (el) { return this._monthsShortStrictRegex } else { return this._monthsShortRegex } } else { return this._monthsShortStrictRegex && el ? this._monthsShortStrictRegex : this._monthsShortRegex } } var dP = aL; function ct(el) { if (this._monthsParseExact) { if (!cN(this, "_monthsRegex")) { cO.call(this) } if (el) { return this._monthsStrictRegex } else { return this._monthsRegex } } else { return this._monthsStrictRegex && el ? this._monthsStrictRegex : this._monthsRegex } } function cO() { function eq(es, er) { return er.length - es.length } var ep = [], el = [], eo = [], em, en; for (em = 0; em < 12; em++) { en = dC([2000, em]); ep.push(this.monthsShort(en, "")); el.push(this.months(en, "")); eo.push(this.months(en, "")); eo.push(this.monthsShort(en, "")) } ep.sort(eq); el.sort(eq); eo.sort(eq); for (em = 0; em < 12; em++) { ep[em] = bM(ep[em]); el[em] = bM(el[em]); eo[em] = bM(eo[em]) } this._monthsRegex = new RegExp("^(" + eo.join("|") + ")", "i"); this._monthsShortRegex = this._monthsRegex; this._monthsStrictRegex = new RegExp("^(" + el.join("|") + ")$", "i"); this._monthsShortStrictRegex = new RegExp("^(" + ep.join("|") + ")$", "i") } function ci(el) { var en; var em = el._a; if (em && aQ(el).overflow === -2) { en = em[j] < 0 || em[j] > 11 ? j : em[dL] < 1 || em[dL] > bi(em[ec], em[j]) ? dL : em[dZ] < 0 || em[dZ] > 24 || (em[dZ] === 24 && (em[c6] !== 0 || em[W] !== 0 || em[bk] !== 0)) ? dZ : em[c6] < 0 || em[c6] > 59 ? c6 : em[W] < 0 || em[W] > 59 ? W : em[bk] < 0 || em[bk] > 999 ? bk : -1; if (aQ(el)._overflowDayOfYear && (en < ec || en > dL)) { en = dL } if (aQ(el)._overflowWeeks && en === -1) { en = bN } if (aQ(el)._overflowWeekday && en === -1) { en = i } aQ(el).overflow = en } return el } function cF(el) { if (bt.suppressDeprecationWarnings === false && (typeof console !== "undefined") && console.warn) { console.warn("Deprecation warning: " + el) } } function dz(em, el) { var en = true; return ef(function () { if (en) { cF(em + "\nArguments: " + Array.prototype.slice.call(arguments).join(", ") + "\n" + (new Error()).stack); en = false } return el.apply(this, arguments) }, el) } var O = {}; function ea(el, em) { if (!O[el]) { cF(em); O[el] = true } } bt.suppressDeprecationWarnings = false; var k = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/; var ax = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?/; var ca = /Z|[+-]\d\d(?::?\d\d)?/; var cl = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, false], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, false], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, false], ["YYYYDDD", /\d{7}/]]; var bW = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]]; var bv = /^\/?Date\((\-?\d+)/i; function w(em) { var eq, eo, es = em._i, er = k.exec(es) || ax.exec(es), et, el, ep, en; if (er) { aQ(em).iso = true; for (eq = 0, eo = cl.length; eq < eo; eq++) { if (cl[eq][1].exec(er[1])) { el = cl[eq][0]; et = cl[eq][2] !== false; break } } if (el == null) { em._isValid = false; return } if (er[3]) { for (eq = 0, eo = bW.length; eq < eo; eq++) { if (bW[eq][1].exec(er[3])) { ep = (er[2] || " ") + bW[eq][0]; break } } if (ep == null) { em._isValid = false; return } } if (!et && ep != null) { em._isValid = false; return } if (er[4]) { if (ca.exec(er[4])) { en = "Z" } else { em._isValid = false; return } } em._f = el + (ep || "") + (en || ""); bw(em) } else { em._isValid = false } } function aR(em) { var el = bv.exec(em._i); if (el !== null) { em._d = new Date(+el[1]); return } w(em); if (em._isValid === false) { delete em._isValid; bt.createFromInputFallback(em) } } bt.createFromInputFallback = dz("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.", function (el) { el._d = new Date(el._i + (el._useUTC ? " UTC" : "")) }); function dr(es, el, eq, ep, er, eo, en) { var em = new Date(es, el, eq, ep, er, eo, en); if (es < 100 && es >= 0 && isFinite(em.getFullYear())) { em.setFullYear(es) } return em } function cT(em) { var el = new Date(Date.UTC.apply(null, arguments)); if (em < 100 && em >= 0 && isFinite(el.getUTCFullYear())) { el.setUTCFullYear(em) } return el } b2("Y", 0, 0, function () { var el = this.year(); return el <= 9999 ? "" + el : "+" + el }); b2(0, ["YY", 2], 0, function () { return this.year() % 100 }); b2(0, ["YYYY", 4], 0, "year"); b2(0, ["YYYYY", 5], 0, "year"); b2(0, ["YYYYYY", 6, true], 0, "year"); bL("year", "y"); aS("Y", v); aS("YY", af, aq); aS("YYYY", ad, ao); aS("YYYYY", ac, an); aS("YYYYYY", ac, an); bu(["YYYYY", "YYYYYY"], ec); bu("YYYY", function (el, em) { em[ec] = el.length === 2 ? bt.parseTwoDigitYear(el) : ck(el) }); bu("YY", function (el, em) { em[ec] = bt.parseTwoDigitYear(el) }); bu("Y", function (el, em) { em[ec] = parseInt(el, 10) }); function c4(el) { return dj(el) ? 366 : 365 } function dj(el) { return (el % 4 === 0 && el % 100 !== 0) || el % 400 === 0 } bt.parseTwoDigitYear = function (el) { return ck(el) + (ck(el) > 68 ? 1900 : 2000) }; var cb = du("FullYear", false); function cn() { return dj(this.year()) } function aX(em, ep, eo) { var el = 7 + ep - eo, en = (7 + cT(em, 0, el).getUTCDay() - ep) % 7; return -en + el - 1 } function bf(eo, em, en, eu, es) { var et = (7 + en - eu) % 7, el = aX(eo, eu, es), eq = 1 + 7 * (em - 1) + et + el, er, ep; if (eq <= 0) { er = eo - 1; ep = c4(er) + eq } else { if (eq > c4(eo)) { er = eo + 1; ep = eq - c4(eo) } else { er = eo; ep = eq } } return { year: er, dayOfYear: ep } } function dK(ep, er, eq) { var en = aX(ep.year(), er, eq), eo = Math.floor((ep.dayOfYear() - en - 1) / 7) + 1, el, em; if (eo < 1) { em = ep.year() - 1; el = eo + x(em, er, eq) } else { if (eo > x(ep.year(), er, eq)) { el = eo - x(ep.year(), er, eq); em = ep.year() + 1 } else { em = ep.year(); el = eo } } return { week: el, year: em } } function x(em, ep, en) { var el = aX(em, ep, en), eo = aX(em + 1, ep, en); return (c4(em) - el + eo) / 7 } function ds(em, el, en) { if (em != null) { return em } if (el != null) { return el } return en } function aE(em) { var el = new Date(bt.now()); if (em._useUTC) { return [el.getUTCFullYear(), el.getUTCMonth(), el.getUTCDate()] } return [el.getFullYear(), el.getMonth(), el.getDate()] } function f(ep) { var eq, eo, en = [], em, el; if (ep._d) { return } em = aE(ep); if (ep._w && ep._a[dL] == null && ep._a[j] == null) { cw(ep) } if (ep._dayOfYear) { el = ds(ep._a[ec], em[ec]); if (ep._dayOfYear > c4(el)) { aQ(ep)._overflowDayOfYear = true } eo = cT(el, 0, ep._dayOfYear); ep._a[j] = eo.getUTCMonth(); ep._a[dL] = eo.getUTCDate() } for (eq = 0; eq < 3 && ep._a[eq] == null; ++eq) { ep._a[eq] = en[eq] = em[eq] } for (; eq < 7; eq++) { ep._a[eq] = en[eq] = (ep._a[eq] == null) ? (eq === 2 ? 1 : 0) : ep._a[eq] } if (ep._a[dZ] === 24 && ep._a[c6] === 0 && ep._a[W] === 0 && ep._a[bk] === 0) { ep._nextDay = true; ep._a[dZ] = 0 } ep._d = (ep._useUTC ? cT : dr).apply(null, en); if (ep._tzm != null) { ep._d.setUTCMinutes(ep._d.getUTCMinutes() - ep._tzm) } if (ep._nextDay) { ep._a[dZ] = 24 } } function cw(en) { var eq, el, em, eo, et, er, es, ep; eq = en._w; if (eq.GG != null || eq.W != null || eq.E != null) { et = 1; er = 4; el = ds(eq.GG, en._a[ec], dK(dp(), 1, 4).year); em = ds(eq.W, 1); eo = ds(eq.E, 1); if (eo < 1 || eo > 7) { ep = true } } else { et = en._locale._week.dow; er = en._locale._week.doy; el = ds(eq.gg, en._a[ec], dK(dp(), et, er).year); em = ds(eq.w, 1); if (eq.d != null) { eo = eq.d; if (eo < 0 || eo > 6) { ep = true } } else { if (eq.e != null) { eo = eq.e + et; if (eq.e < 0 || eq.e > 6) { ep = true } } else { eo = et } } } if (em < 1 || em > x(el, et, er)) { aQ(en)._overflowWeeks = true } else { if (ep != null) { aQ(en)._overflowWeekday = true } else { es = bf(el, em, eo, et, er); en._a[ec] = es.year; en._dayOfYear = es.dayOfYear } } } bt.ISO_8601 = function () { }; function bw(en) { if (en._f === bt.ISO_8601) { w(en); return } en._a = []; aQ(en).empty = true; var eq = "" + en._i, ep, em, et, eo, es, el = eq.length, er = 0; et = bh(en._f, en._locale).match(br) || []; for (ep = 0; ep < et.length; ep++) { eo = et[ep]; em = (eq.match(bg(eo, en)) || [])[0]; if (em) { es = eq.substr(0, eq.indexOf(em)); if (es.length > 0) { aQ(en).unusedInput.push(es) } eq = eq.slice(eq.indexOf(em) + em.length); er += em.length } if (aO[eo]) { if (em) { aQ(en).empty = false } else { aQ(en).unusedTokens.push(eo) } s(eo, em, en) } else { if (en._strict && !em) { aQ(en).unusedTokens.push(eo) } } } aQ(en).charsLeftOver = el - er; if (eq.length > 0) { aQ(en).unusedInput.push(eq) } if (aQ(en).bigHour === true && en._a[dZ] <= 12 && en._a[dZ] > 0) { aQ(en).bigHour = undefined } en._a[dZ] = dA(en._locale, en._a[dZ], en._meridiem); f(en); ci(en) } function dA(el, en, eo) { var em; if (eo == null) { return en } if (el.meridiemHour != null) { return el.meridiemHour(en, eo) } else { if (el.isPM != null) { em = el.isPM(eo); if (em && en < 12) { en += 12 } if (!em && en === 12) { en = 0 } return en } else { return en } } } function c2(el) { var ep, en, eo, em, eq; if (el._f.length === 0) { aQ(el).invalidFormat = true; el._d = new Date(NaN); return } for (em = 0; em < el._f.length; em++) { eq = 0; ep = o({}, el); if (el._useUTC != null) { ep._useUTC = el._useUTC } ep._f = el._f[em]; bw(ep); if (!ag(ep)) { continue } eq += aQ(ep).charsLeftOver; eq += aQ(ep).unusedTokens.length * 10; aQ(ep).score = eq; if (eo == null || eq < eo) { eo = eq; en = ep } } ef(el, en || ep) } function aG(el) { if (el._d) { return } var em = c8(el._i); el._a = a3([em.year, em.month, em.day || em.date, em.hour, em.minute, em.second, em.millisecond], function (en) { return en && parseInt(en, 10) }); f(el) } function aa(el) { var em = new dJ(ci(a7(el))); if (em._nextDay) { em.add(1, "d"); em._nextDay = undefined } return em } function a7(em) { var el = em._i, en = em._f; em._locale = em._locale || q(em._l); if (el === null || (en === undefined && el === "")) { return cc({ nullInput: true }) } if (typeof el === "string") { em._i = el = em._locale.preparse(el) } if (bI(el)) { return new dJ(ci(el)) } else { if (J(en)) { c2(em) } else { if (en) { bw(em) } else { if (dM(el)) { em._d = el } else { b0(em) } } } } if (!ag(em)) { em._d = null } return em } function b0(em) { var el = em._i; if (el === undefined) { em._d = new Date(bt.now()) } else { if (dM(el)) { em._d = new Date(+el) } else { if (typeof el === "string") { aR(em) } else { if (J(el)) { em._a = a3(el.slice(0), function (en) { return parseInt(en, 10) }); f(em) } else { if (typeof (el) === "object") { aG(em) } else { if (typeof (el) === "number") { em._d = new Date(el) } else { bt.createFromInputFallback(em) } } } } } } } function Q(eo, ep, el, en, em) { var eq = {}; if (typeof (el) === "boolean") { en = el; el = undefined } eq._isAMomentObject = true; eq._useUTC = eq._isUTC = em; eq._l = el; eq._i = eo; eq._f = ep; eq._strict = en; return aa(eq) } function dp(en, eo, el, em) { return Q(en, eo, el, em, false) } var cf = dz("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548", function () { var el = dp.apply(null, arguments); if (this.isValid() && el.isValid()) { return el < this ? this : el } else { return cc() } }); var dG = dz("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548", function () { var el = dp.apply(null, arguments); if (this.isValid() && el.isValid()) { return el > this ? this : el } else { return cc() } }); function eg(en, eo) { var em, el; if (eo.length === 1 && J(eo[0])) { eo = eo[0] } if (!eo.length) { return dp() } em = eo[0]; for (el = 1; el < eo.length; ++el) { if (!eo[el].isValid() || eo[el][en](em)) { em = eo[el] } } return em } function n() { var el = [].slice.call(arguments, 0); return eg("isBefore", el) } function a1() { var el = [].slice.call(arguments, 0); return eg("isAfter", el) } var b3 = function () { return Date.now ? Date.now() : +(new Date()) }; function db(eq) { var es = c8(eq), er = es.year || 0, em = es.quarter || 0, en = es.month || 0, el = es.week || 0, ev = es.day || 0, et = es.hour || 0, ep = es.minute || 0, eu = es.second || 0, eo = es.millisecond || 0; this._milliseconds = +eo + eu * 1000 + ep * 60000 + et * 3600000; this._days = +ev + el * 7; this._months = +en + em * 3 + er * 12; this._data = {}; this._locale = q(); this._bubble() } function S(el) { return el instanceof db } function ba(el, em) { b2(el, 0, 0, function () { var eo = this.utcOffset(); var en = "+"; if (eo < 0) { eo = -eo; en = "-" } return en + bU(~~(eo / 60), 2) + em + bU(~~(eo) % 60, 2) }) } ba("Z", ":"); ba("ZZ", ""); aS("Z", b9); aS("ZZ", b9); bu(["Z", "ZZ"], function (el, en, em) { em._useUTC = true; em._tzm = m(b9, el) }); var dV = /([\+\-]|\d\d)/gi; function m(eq, em) { var eo = ((em || "").match(eq) || []); var el = eo[eo.length - 1] || []; var ep = (el + "").match(dV) || ["-", 0, 0]; var en = +(ep[1] * 60) + ck(ep[2]); return ep[0] === "+" ? en : -en } function al(el, em) { var en, eo; if (em._isUTC) { en = em.clone(); eo = (bI(el) || dM(el) ? +el : +dp(el)) - (+en); en._d.setTime(+en._d + eo); bt.updateOffset(en, false); return en } else { return dp(el).local() } } function au(el) { return -Math.round(el._d.getTimezoneOffset() / 15) * 15 } bt.updateOffset = function () { }; function cV(el, eo) { var en = this._offset || 0, em; if (!this.isValid()) { return el != null ? this : NaN } if (el != null) { if (typeof el === "string") { el = m(b9, el) } else { if (Math.abs(el) < 16) { el = el * 60 } } if (!this._isUTC && eo) { em = au(this) } this._offset = el; this._isUTC = true; if (em != null) { this.add(em, "m") } if (en !== el) { if (!eo || this._changeInProgress) { b(this, dy(el - en, "m"), 1, false) } else { if (!this._changeInProgress) { this._changeInProgress = true; bt.updateOffset(this, true); this._changeInProgress = null } } } return this } else { return this._isUTC ? en : au(this) } } function cQ(el, em) { if (el != null) { if (typeof el !== "string") { el = -el } this.utcOffset(el, em); return this } else { return -this.utcOffset() } } function aC(el) { return this.utcOffset(0, el) } function cS(el) { if (this._isUTC) { this.utcOffset(0, el); this._isUTC = false; if (el) { this.subtract(au(this), "m") } } return this } function bF() { if (this._tzm) { this.utcOffset(this._tzm) } else { if (typeof this._i === "string") { this.utcOffset(m(bj, this._i)) } } return this } function aj(el) { if (!this.isValid()) { return false } el = el ? dp(el).utcOffset() : 0; return (this.utcOffset() - el) % 60 === 0 } function at() { return (this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset()) } function d() { if (!y(this._isDSTShifted)) { return this._isDSTShifted } var em = {}; o(em, this); em = a7(em); if (em._a) { var el = em._isUTC ? dC(em._a) : dp(em._a); this._isDSTShifted = this.isValid() && by(em._a, el.toArray()) > 0 } else { this._isDSTShifted = false } return this._isDSTShifted } function cW() { return this.isValid() ? !this._isUTC : false } function bs() { return this.isValid() ? this._isUTC : false } function c1() { return this.isValid() ? this._isUTC && this._offset === 0 : false } var N = /(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/; var b1 = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/; function dy(en, eq) { var er = en, ep = null, em, eo, el; if (S(en)) { er = { ms: en._milliseconds, d: en._days, M: en._months } } else { if (typeof en === "number") { er = {}; if (eq) { er[eq] = en } else { er.milliseconds = en } } else { if (!!(ep = N.exec(en))) { em = (ep[1] === "-") ? -1 : 1; er = { y: 0, d: ck(ep[dL]) * em, h: ck(ep[dZ]) * em, m: ck(ep[c6]) * em, s: ck(ep[W]) * em, ms: ck(ep[bk]) * em } } else { if (!!(ep = b1.exec(en))) { em = (ep[1] === "-") ? -1 : 1; er = { y: ee(ep[2], em), M: ee(ep[3], em), d: ee(ep[4], em), h: ee(ep[5], em), m: ee(ep[6], em), s: ee(ep[7], em), w: ee(ep[8], em) } } else { if (er == null) { er = {} } else { if (typeof er === "object" && ("from" in er || "to" in er)) { el = bo(dp(er.from), dp(er.to)); er = {}; er.ms = el.milliseconds; er.M = el.months } } } } } } eo = new db(er); if (S(en) && cN(en, "_locale")) { eo._locale = en._locale } return eo } dy.fn = db.prototype; function ee(en, el) { var em = en && parseFloat(en.replace(",", ".")); return (isNaN(em) ? 0 : em) * el } function cZ(en, el) { var em = { milliseconds: 0, months: 0 }; em.months = el.month() - en.month() + (el.year() - en.year()) * 12; if (en.clone().add(em.months, "M").isAfter(el)) { --em.months } em.milliseconds = +el - +(en.clone().add(em.months, "M")); return em } function bo(en, el) { var em; if (!(en.isValid() && el.isValid())) { return { milliseconds: 0, months: 0 } } el = al(el, en); if (en.isBefore(el)) { em = cZ(en, el) } else { em = cZ(el, en); em.milliseconds = -em.milliseconds; em.months = -em.months } return em } function aH(em, el) { return function (eq, ep) { var eo, en; if (ep !== null && !isNaN(+ep)) { ea(el, "moment()." + el + "(period, number) is deprecated. Please use moment()." + el + "(number, period)."); en = eq; eq = ep; ep = en } eq = typeof eq === "string" ? +eq : eq; eo = dy(eq, ep); b(this, eo, em); return this } } function b(en, eq, ep, eo) { var em = eq._milliseconds, er = eq._days, el = eq._months; if (!en.isValid()) { return } eo = eo == null ? true : eo; if (em) { en._d.setTime(+en._d + em * ep) } if (er) { dN(en, "Date", d2(en, "Date") + er * ep) } if (el) { az(en, d2(en, "Month") + el * ep) } if (eo) { bt.updateOffset(en, er || el) } } var bO = aH(1, "add"); var aB = aH(-1, "subtract"); function bK(er, el) { var eo = er || dp(), en = al(eo, this).startOf("day"), eq = this.diff(en, "days", true), ep = eq < -6 ? "sameElse" : eq < -1 ? "lastWeek" : eq < 0 ? "lastDay" : eq < 1 ? "sameDay" : eq < 2 ? "nextDay" : eq < 7 ? "nextWeek" : "sameElse"; var em = el && (aJ(el[ep]) ? el[ep]() : el[ep]); return this.format(em || this.localeData().calendar(ep, this, dp(eo))) } function cR() { return new dJ(this) } function b8(em, el) { var en = bI(em) ? em : dp(em); if (!(this.isValid() && en.isValid())) { return false } el = cj(!y(el) ? el : "millisecond"); if (el === "millisecond") { return +this > +en } else { return +en < +this.clone().startOf(el) } } function d8(em, el) { var en = bI(em) ? em : dp(em); if (!(this.isValid() && en.isValid())) { return false } el = cj(!y(el) ? el : "millisecond"); if (el === "millisecond") { return +this < +en } else { return +this.clone().endOf(el) < +en } } function dI(en, em, el) { return this.isAfter(en, el) && this.isBefore(em, el) } function cd(em, el) { var eo = bI(em) ? em : dp(em), en; if (!(this.isValid() && eo.isValid())) { return false } el = cj(el || "millisecond"); if (el === "millisecond") { return +this === +eo } else { en = +eo; return +(this.clone().startOf(el)) <= en && en <= +(this.clone().endOf(el)) } } function d1(em, el) { return this.isSame(em, el) || this.isAfter(em, el) } function d6(em, el) { return this.isSame(em, el) || this.isBefore(em, el) } function B(eo, en, el) { var eq, ep, er, em; if (!this.isValid()) { return NaN } eq = al(eo, this); if (!eq.isValid()) { return NaN } ep = (eq.utcOffset() - this.utcOffset()) * 60000; en = cj(en); if (en === "year" || en === "month" || en === "quarter") { em = dE(this, eq); if (en === "quarter") { em = em / 3 } else { if (en === "year") { em = em / 12 } } } else { er = this - eq; em = en === "second" ? er / 1000 : en === "minute" ? er / 60000 : en === "hour" ? er / 3600000 : en === "day" ? (er - ep) / 86400000 : en === "week" ? (er - ep) / 604800000 : er } return el ? em : cK(em) } function dE(em, el) { var eq = ((el.year() - em.year()) * 12) + (el.month() - em.month()), en = em.clone().add(eq, "months"), eo, ep; if (el - en < 0) { eo = em.clone().add(eq - 1, "months"); ep = (el - en) / (en - eo) } else { eo = em.clone().add(eq + 1, "months"); ep = (el - en) / (eo - en) } return -(eq + ep) } bt.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ"; function dl() { return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ") } function b4() { var el = this.clone().utc(); if (0 < el.year() && el.year() <= 9999) { if (aJ(Date.prototype.toISOString)) { return this.toDate().toISOString() } else { return T(el, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]") } } else { return T(el, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]") } } function cA(em) { var el = T(this, em || bt.defaultFormat); return this.localeData().postformat(el) } function dd(em, el) { if (this.isValid() && ((bI(em) && em.isValid()) || dp(em).isValid())) { return dy({ to: this, from: em }).locale(this.locale()).humanize(!el) } else { return this.localeData().invalidDate() } } function c9(el) { return this.from(dp(), el) } function V(em, el) { if (this.isValid() && ((bI(em) && em.isValid()) || dp(em).isValid())) { return dy({ from: this, to: em }).locale(this.locale()).humanize(!el) } else { return this.localeData().invalidDate() } } function av(el) { return this.to(dp(), el) } function ej(em) { var el; if (em === undefined) { return this._locale._abbr } else { el = q(em); if (el != null) { this._locale = el } return this } } var u = dz("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function (el) { if (el === undefined) { return this.localeData() } else { return this.locale(el) } }); function de() { return this._locale } function bE(el) { el = cj(el); switch (el) { case "year": this.month(0); case "quarter": case "month": this.date(1); case "week": case "isoWeek": case "day": this.hours(0); case "hour": this.minutes(0); case "minute": this.seconds(0); case "second": this.milliseconds(0) }if (el === "week") { this.weekday(0) } if (el === "isoWeek") { this.isoWeekday(1) } if (el === "quarter") { this.month(Math.floor(this.month() / 3) * 3) } return this } function dO(el) { el = cj(el); if (el === undefined || el === "millisecond") { return this } return this.startOf(el).add(1, (el === "isoWeek" ? "week" : el)).subtract(1, "ms") } function X() { return +this._d - ((this._offset || 0) * 60000) } function be() { return Math.floor(+this / 1000) } function cv() { return this._offset ? new Date(+this) : this._d } function c7() { var el = this; return [el.year(), el.month(), el.date(), el.hour(), el.minute(), el.second(), el.millisecond()] } function df() { var el = this; return { years: el.year(), months: el.month(), date: el.date(), hours: el.hours(), minutes: el.minutes(), seconds: el.seconds(), milliseconds: el.milliseconds() } } function cB() { return this.isValid() ? this.toISOString() : "null" } function dQ() { return ag(this) } function c3() { return ef({}, aQ(this)) } function b5() { return aQ(this).overflow } function d9() { return { input: this._i, format: this._f, locale: this._locale, isUTC: this._isUTC, strict: this._strict } } b2(0, ["gg", 2], 0, function () { return this.weekYear() % 100 }); b2(0, ["GG", 2], 0, function () { return this.isoWeekYear() % 100 }); function L(em, el) { b2(0, [em, em.length], 0, el) } L("gggg", "weekYear"); L("ggggg", "weekYear"); L("GGGG", "isoWeekYear"); L("GGGGG", "isoWeekYear"); bL("weekYear", "gg"); bL("isoWeekYear", "GG"); aS("G", v); aS("g", v); aS("GG", af, aq); aS("gg", af, aq); aS("GGGG", ad, ao); aS("gggg", ad, ao); aS("GGGGG", ac, an); aS("ggggg", ac, an); M(["gggg", "ggggg", "GGGG", "GGGGG"], function (el, eo, em, en) { eo[en.substr(0, 2)] = ck(el) }); M(["gg", "GG"], function (el, eo, em, en) { eo[en] = bt.parseTwoDigitYear(el) }); function a5(el) { return bY.call(this, el, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy) } function di(el) { return bY.call(this, el, this.isoWeek(), this.isoWeekday(), 1, 4) } function cD() { return x(this.year(), 1, 4) } function z() { var el = this.localeData()._week; return x(this.year(), el.dow, el.doy) } function bY(el, em, eo, eq, ep) { var en; if (el == null) { return dK(this, eq, ep).year } else { en = x(el, eq, ep); if (em > en) { em = en } return aK.call(this, el, em, eo, eq, ep) } } function aK(en, em, ep, er, eq) { var eo = bf(en, em, ep, er, eq), el = cT(eo.year, 0, eo.dayOfYear); this.year(el.getUTCFullYear()); this.month(el.getUTCMonth()); this.date(el.getUTCDate()); return this } b2("Q", 0, "Qo", "quarter"); bL("quarter", "Q"); aS("Q", ar); bu("Q", function (el, em) { em[j] = (ck(el) - 1) * 3 }); function bz(el) { return el == null ? Math.ceil((this.month() + 1) / 3) : this.month((el - 1) * 3 + this.month() % 3) } b2("w", ["ww", 2], "wo", "week"); b2("W", ["WW", 2], "Wo", "isoWeek"); bL("week", "w"); bL("isoWeek", "W"); aS("w", af); aS("ww", af, aq); aS("W", af); aS("WW", af, aq); M(["w", "ww", "W", "WW"], function (el, eo, em, en) { eo[en.substr(0, 1)] = ck(el) }); function a4(el) { return dK(el, this._week.dow, this._week.doy).week } var bA = { dow: 0, doy: 6 }; function U() { return this._week.dow } function cC() { return this._week.doy } function A(el) { var em = this.localeData().week(this); return el == null ? em : this.add((el - em) * 7, "d") } function t(el) { var em = dK(this, 1, 4).week; return el == null ? em : this.add((el - em) * 7, "d") } b2("D", ["DD", 2], "Do", "date"); bL("date", "D"); aS("D", af); aS("DD", af, aq); aS("Do", function (em, el) { return em ? el._ordinalParse : el._ordinalParseLenient }); bu(["D", "DD"], dL); bu("Do", function (el, em) { em[dL] = ck(el.match(af)[0], 10) }); var bT = du("Date", true); b2("d", 0, "do", "day"); b2("dd", 0, 0, function (el) { return this.localeData().weekdaysMin(this, el) }); b2("ddd", 0, 0, function (el) { return this.localeData().weekdaysShort(this, el) }); b2("dddd", 0, 0, function (el) { return this.localeData().weekdays(this, el) }); b2("e", 0, 0, "weekday"); b2("E", 0, 0, "isoWeekday"); bL("day", "d"); bL("weekday", "e"); bL("isoWeekday", "E"); aS("d", af); aS("e", af); aS("E", af); aS("dd", aL); aS("ddd", aL); aS("dddd", aL); M(["dd", "ddd", "dddd"], function (el, eo, em, en) { var ep = em._locale.weekdaysParse(el, en, em._strict); if (ep != null) { eo.d = ep } else { aQ(em).invalidWeekday = el } }); M(["d", "e", "E"], function (el, eo, em, en) { eo[en] = ck(el) }); function aW(em, el) { if (typeof em !== "string") { return em } if (!isNaN(em)) { return parseInt(em, 10) } em = el.weekdaysParse(em); if (typeof em === "number") { return em } return null } var H = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"); function ai(el, em) { return J(this._weekdays) ? this._weekdays[el.day()] : this._weekdays[this._weekdays.isFormat.test(em) ? "format" : "standalone"][el.day()] } var l = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"); function E(el) { return this._weekdaysShort[el.day()] } var a8 = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"); function dW(el) { return this._weekdaysMin[el.day()] } function bm(ep, eq, el) { var em, eo, en; if (!this._weekdaysParse) { this._weekdaysParse = []; this._minWeekdaysParse = []; this._shortWeekdaysParse = []; this._fullWeekdaysParse = [] } for (em = 0; em < 7; em++) { eo = dp([2000, 1]).day(em); if (el && !this._fullWeekdaysParse[em]) { this._fullWeekdaysParse[em] = new RegExp("^" + this.weekdays(eo, "").replace(".", ".?") + "$", "i"); this._shortWeekdaysParse[em] = new RegExp("^" + this.weekdaysShort(eo, "").replace(".", ".?") + "$", "i"); this._minWeekdaysParse[em] = new RegExp("^" + this.weekdaysMin(eo, "").replace(".", ".?") + "$", "i") } if (!this._weekdaysParse[em]) { en = "^" + this.weekdays(eo, "") + "|^" + this.weekdaysShort(eo, "") + "|^" + this.weekdaysMin(eo, ""); this._weekdaysParse[em] = new RegExp(en.replace(".", ""), "i") } if (el && eq === "dddd" && this._fullWeekdaysParse[em].test(ep)) { return em } else { if (el && eq === "ddd" && this._shortWeekdaysParse[em].test(ep)) { return em } else { if (el && eq === "dd" && this._minWeekdaysParse[em].test(ep)) { return em } else { if (!el && this._weekdaysParse[em].test(ep)) { return em } } } } } } function dD(em) { if (!this.isValid()) { return em != null ? this : NaN } var el = this._isUTC ? this._d.getUTCDay() : this._d.getDay(); if (em != null) { em = aW(em, this.localeData()); return this.add(em - el, "d") } else { return el } } function R(el) { if (!this.isValid()) { return el != null ? this : NaN } var em = (this.day() + 7 - this.localeData()._week.dow) % 7; return el == null ? em : this.add(el - em, "d") } function bZ(el) { if (!this.isValid()) { return el != null ? this : NaN } return el == null ? this.day() || 7 : this.day(this.day() % 7 ? el : el - 7) } b2("DDD", ["DDDD", 3], "DDDo", "dayOfYear"); bL("dayOfYear", "DDD"); aS("DDD", ae); aS("DDDD", ap); bu(["DDD", "DDDD"], function (el, en, em) { em._dayOfYear = ck(el) }); function aU(el) { var em = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 86400000) + 1; return el == null ? em : this.add((el - em), "d") } function cY() { return this.hours() % 12 || 12 } b2("H", ["HH", 2], 0, "hour"); b2("h", ["hh", 2], 0, cY); b2("hmm", 0, 0, function () { return "" + cY.apply(this) + bU(this.minutes(), 2) }); b2("hmmss", 0, 0, function () { return "" + cY.apply(this) + bU(this.minutes(), 2) + bU(this.seconds(), 2) }); b2("Hmm", 0, 0, function () { return "" + this.hours() + bU(this.minutes(), 2) }); b2("Hmmss", 0, 0, function () { return "" + this.hours() + bU(this.minutes(), 2) + bU(this.seconds(), 2) }); function dF(el, em) { b2(el, 0, 0, function () { return this.localeData().meridiem(this.hours(), this.minutes(), em) }) } dF("a", true); dF("A", false); bL("hour", "h"); function G(em, el) { return el._meridiemParse } aS("a", G); aS("A", G); aS("H", af); aS("h", af); aS("HH", af, aq); aS("hh", af, aq); aS("hmm", bR); aS("hmmss", dw); aS("Hmm", bR); aS("Hmmss", dw); bu(["H", "HH"], dZ); bu(["a", "A"], function (el, en, em) { em._isPm = em._locale.isPM(el); em._meridiem = el }); bu(["h", "hh"], function (el, en, em) { en[dZ] = ck(el); aQ(em).bigHour = true }); bu("hmm", function (el, eo, em) { var en = el.length - 2; eo[dZ] = ck(el.substr(0, en)); eo[c6] = ck(el.substr(en)); aQ(em).bigHour = true }); bu("hmmss", function (el, ep, em) { var eo = el.length - 4; var en = el.length - 2; ep[dZ] = ck(el.substr(0, eo)); ep[c6] = ck(el.substr(eo, 2)); ep[W] = ck(el.substr(en)); aQ(em).bigHour = true }); bu("Hmm", function (el, eo, em) { var en = el.length - 2; eo[dZ] = ck(el.substr(0, en)); eo[c6] = ck(el.substr(en)) }); bu("Hmmss", function (el, ep, em) { var eo = el.length - 4; var en = el.length - 2; ep[dZ] = ck(el.substr(0, eo)); ep[c6] = ck(el.substr(eo, 2)); ep[W] = ck(el.substr(en)) }); function bJ(el) { return ((el + "").toLowerCase().charAt(0) === "p") } var bC = /[ap]\.?m?\.?/i; function ay(el, em, en) { if (el > 11) { return en ? "pm" : "PM" } else { return en ? "am" : "AM" } } var bV = du("Hours", true); b2("m", ["mm", 2], 0, "minute"); bL("minute", "m"); aS("m", af); aS("mm", af, aq); bu(["m", "mm"], c6); var d7 = du("Minutes", false); b2("s", ["ss", 2], 0, "second"); bL("second", "s"); aS("s", af); aS("ss", af, aq); bu(["s", "ss"], W); var bb = du("Seconds", false); b2("S", 0, 0, function () { return ~~(this.millisecond() / 100) }); b2(0, ["SS", 2], 0, function () { return ~~(this.millisecond() / 10) }); b2(0, ["SSS", 3], 0, "millisecond"); b2(0, ["SSSS", 4], 0, function () { return this.millisecond() * 10 }); b2(0, ["SSSSS", 5], 0, function () { return this.millisecond() * 100 }); b2(0, ["SSSSSS", 6], 0, function () { return this.millisecond() * 1000 }); b2(0, ["SSSSSSS", 7], 0, function () { return this.millisecond() * 10000 }); b2(0, ["SSSSSSSS", 8], 0, function () { return this.millisecond() * 100000 }); b2(0, ["SSSSSSSSS", 9], 0, function () { return this.millisecond() * 1000000 }); bL("millisecond", "ms"); aS("S", ae, ar); aS("SS", ae, aq); aS("SSS", ae, ap); var aZ; for (aZ = "SSSS"; aZ.length <= 9; aZ += "S") { aS(aZ, p) } function cy(el, em) { em[bk] = ck(("0." + el) * 1000) } for (aZ = "S"; aZ.length <= 9; aZ += "S") { bu(aZ, cy) } var bx = du("Milliseconds", false); b2("z", 0, 0, "zoneAbbr"); b2("zz", 0, 0, "zoneName"); function d3() { return this._isUTC ? "UTC" : "" } function dB() { return this._isUTC ? "Coordinated Universal Time" : "" } var cH = dJ.prototype; cH.add = bO; cH.calendar = bK; cH.clone = cR; cH.diff = B; cH.endOf = dO; cH.format = cA; cH.from = dd; cH.fromNow = c9; cH.to = V; cH.toNow = av; cH.get = dS; cH.invalidAt = b5; cH.isAfter = b8; cH.isBefore = d8; cH.isBetween = dI; cH.isSame = cd; cH.isSameOrAfter = d1; cH.isSameOrBefore = d6; cH.isValid = dQ; cH.lang = u; cH.locale = ej; cH.localeData = de; cH.max = dG; cH.min = cf; cH.parsingFlags = c3; cH.set = dS; cH.startOf = bE; cH.subtract = aB; cH.toArray = c7; cH.toObject = df; cH.toDate = cv; cH.toISOString = b4; cH.toJSON = cB; cH.toString = dl; cH.unix = be; cH.valueOf = X; cH.creationData = d9; cH.year = cb; cH.isLeapYear = cn; cH.weekYear = a5; cH.isoWeekYear = di; cH.quarter = cH.quarters = bz; cH.month = dY; cH.daysInMonth = bn; cH.week = cH.weeks = A; cH.isoWeek = cH.isoWeeks = t; cH.weeksInYear = z; cH.isoWeeksInYear = cD; cH.date = bT; cH.day = cH.days = dD; cH.weekday = R; cH.isoWeekday = bZ; cH.dayOfYear = aU; cH.hour = cH.hours = bV; cH.minute = cH.minutes = d7; cH.second = cH.seconds = bb; cH.millisecond = cH.milliseconds = bx; cH.utcOffset = cV; cH.utc = aC; cH.local = cS; cH.parseZone = bF; cH.hasAlignedHourOffset = aj; cH.isDST = at; cH.isDSTShifted = d; cH.isLocal = cW; cH.isUtcOffset = bs; cH.isUtc = c1; cH.isUTC = c1; cH.zoneAbbr = d3; cH.zoneName = dB; cH.dates = dz("dates accessor is deprecated. Use date instead.", bT); cH.months = dz("months accessor is deprecated. Use month instead", dY); cH.years = dz("years accessor is deprecated. Use year instead", cb); cH.zone = dz("moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779", cQ); var a = cH; function P(el) { return dp(el * 1000) } function cp() { return dp.apply(null, arguments).parseZone() } var bQ = { sameDay: "[Today at] LT", nextDay: "[Tomorrow at] LT", nextWeek: "dddd [at] LT", lastDay: "[Yesterday at] LT", lastWeek: "[Last] dddd [at] LT", sameElse: "L" }; function K(en, eo, em) { var el = this._calendar[en]; return aJ(el) ? el.call(eo, em) : el } var dg = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" }; function cg(el) { var em = this._longDateFormat[el], en = this._longDateFormat[el.toUpperCase()]; if (em || !en) { return em } this._longDateFormat[el] = en.replace(/MMMM|MM|DD|dddd/g, function (eo) { return eo.slice(1) }); return this._longDateFormat[el] } var ab = "Invalid date"; function dH() { return this._invalidDate } var bD = "%d"; var a9 = /\d{1,2}/; function dU(el) { return this._ordinal.replace("%d", el) } function cX(el) { return el } var dT = { future: "in %s", past: "%s ago", s: "a few seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", M: "a month", MM: "%d months", y: "a year", yy: "%d years" }; function bS(eo, en, em, ep) { var el = this._relativeTime[em]; return (aJ(el)) ? el(eo, en, em, ep) : el.replace(/%d/i, eo) } function dh(en, el) { var em = this._relativeTime[en > 0 ? "future" : "past"]; return aJ(em) ? em(el) : em.replace(/%s/i, el) } function da(el) { var en, em; for (em in el) { en = el[em]; if (aJ(en)) { this[em] = en } else { this["_" + em] = en } } this._ordinalParseLenient = new RegExp(this._ordinalParse.source + "|" + (/\d{1,2}/).source) } var cz = b7.prototype; cz._calendar = bQ; cz.calendar = K; cz._longDateFormat = dg; cz.longDateFormat = cg; cz._invalidDate = ab; cz.invalidDate = dH; cz._ordinal = bD; cz.ordinal = dU; cz._ordinalParse = a9; cz.preparse = cX; cz.postformat = cX; cz._relativeTime = dT; cz.relativeTime = bS; cz.pastFuture = dh; cz.set = da; cz.months = aD; cz._months = F; cz.monthsShort = aP; cz._monthsShort = dk; cz.monthsParse = cE; cz._monthsRegex = dP; cz.monthsRegex = ct; cz._monthsShortRegex = cJ; cz.monthsShortRegex = cM; cz.week = a4; cz._week = bA; cz.firstDayOfYear = cC; cz.firstDayOfWeek = U; cz.weekdays = ai; cz._weekdays = H; cz.weekdaysMin = dW; cz._weekdaysMin = a8; cz.weekdaysShort = E; cz._weekdaysShort = l; cz.weekdaysParse = bm; cz.isPM = bJ; cz._meridiemParse = bC; cz.meridiem = ay; function aN(ep, em, eo, eq) { var el = q(); var en = dC().set(eq, em); return el[eo](en, ep) } function dx(eq, em, ep, eo, er) { if (typeof eq === "number") { em = eq; eq = undefined } eq = eq || ""; if (em != null) { return aN(eq, em, ep, er) } var en; var el = []; for (en = 0; en < eo; en++) { el[en] = aN(eq, en, ep, er) } return el } function ek(em, el) { return dx(em, el, "months", 12, "month") } function bP(em, el) { return dx(em, el, "monthsShort", 12, "month") } function aI(em, el) { return dx(em, el, "weekdays", 7, "day") } function ed(em, el) { return dx(em, el, "weekdaysShort", 7, "day") } function D(em, el) { return dx(em, el, "weekdaysMin", 7, "day") } ce("en", { ordinalParse: /\d{1,2}(th|st|nd|rd)/, ordinal: function (en) { var el = en % 10, em = (ck(en % 100 / 10) === 1) ? "th" : (el === 1) ? "st" : (el === 2) ? "nd" : (el === 3) ? "rd" : "th"; return en + em } }); bt.lang = dz("moment.lang is deprecated. Use moment.locale instead.", ce); bt.langData = dz("moment.langData is deprecated. Use moment.localeData instead.", q); var dR = Math.abs; function Y() { var el = this._data; this._milliseconds = dR(this._milliseconds); this._days = dR(this._days); this._months = dR(this._months); el.milliseconds = dR(el.milliseconds); el.seconds = dR(el.seconds); el.minutes = dR(el.minutes); el.hours = dR(el.hours); el.months = dR(el.months); el.years = dR(el.years); return this } function a2(ep, em, en, eo) { var el = dy(em, en); ep._milliseconds += eo * el._milliseconds; ep._days += eo * el._days; ep._months += eo * el._months; return ep._bubble() } function a6(el, em) { return a2(this, el, em, 1) } function c0(el, em) { return a2(this, el, em, -1) } function dX(el) { if (el < 0) { return Math.floor(el) } else { return Math.ceil(el) } } function co() { var en = this._milliseconds; var et = this._days; var el = this._months; var ep = this._data; var es, eo, er, eq, em; if (!((en >= 0 && et >= 0 && el >= 0) || (en <= 0 && et <= 0 && el <= 0))) { en += dX(eh(el) + et) * 86400000; et = 0; el = 0 } ep.milliseconds = en % 1000; es = cK(en / 1000); ep.seconds = es % 60; eo = cK(es / 60); ep.minutes = eo % 60; er = cK(eo / 60); ep.hours = er % 24; et += cK(er / 24); em = cK(g(et)); el += em; et -= dX(eh(em)); eq = cK(el / 12); el %= 12; ep.days = et; ep.months = el; ep.years = eq; return this } function g(el) { return el * 4800 / 146097 } function eh(el) { return el * 146097 / 4800 } function d0(em) { var eo; var el; var en = this._milliseconds; em = cj(em); if (em === "month" || em === "year") { eo = this._days + en / 86400000; el = this._months + g(eo); return em === "month" ? el : el / 12 } else { eo = this._days + Math.round(eh(this._months)); switch (em) { case "week": return eo / 7 + en / 604800000; case "day": return eo + en / 86400000; case "hour": return eo * 24 + en / 3600000; case "minute": return eo * 1440 + en / 60000; case "second": return eo * 86400 + en / 1000; case "millisecond": return Math.floor(eo * 86400000) + en; default: throw new Error("Unknown unit " + em) } } } function cq() { return (this._milliseconds + this._days * 86400000 + (this._months % 12) * 2592000000 + ck(this._months / 12) * 31536000000) } function dq(el) { return function () { return this.as(el) } } var ei = dq("ms"); var C = dq("s"); var cU = dq("m"); var r = dq("h"); var dt = dq("d"); var dc = dq("w"); var dn = dq("M"); var aY = dq("y"); function a0(el) { el = cj(el); return this[el + "s"]() } function bG(el) { return function () { return this._data[el] } } var e = bG("milliseconds"); var aV = bG("seconds"); var am = bG("minutes"); var I = bG("hours"); var aT = bG("days"); var d5 = bG("months"); var bl = bG("years"); function dv() { return cK(this.days() / 7) } var cu = Math.round; var c5 = { s: 45, m: 45, h: 22, d: 26, M: 11 }; function Z(em, eo, en, ep, el) { return el.relativeTime(eo || 1, !!en, em, ep) } function cG(ep, em, et) { var en = dy(ep).abs(); var eu = cu(en.as("s")); var eo = cu(en.as("m")); var es = cu(en.as("h")); var ev = cu(en.as("d")); var el = cu(en.as("M")); var eq = cu(en.as("y")); var er = eu < c5.s && ["s", eu] || eo <= 1 && ["m"] || eo < c5.m && ["mm", eo] || es <= 1 && ["h"] || es < c5.h && ["hh", es] || ev <= 1 && ["d"] || ev < c5.d && ["dd", ev] || el <= 1 && ["M"] || el < c5.M && ["MM", el] || eq <= 1 && ["y"] || ["yy", eq]; er[2] = em; er[3] = +ep > 0; er[4] = et; return Z.apply(null, er) } function aM(el, em) { if (c5[el] === undefined) { return false } if (em === undefined) { return c5[el] } c5[el] = em; return true } function c(en) { var el = this.localeData(); var em = cG(this, !en, el); if (en) { em = el.pastFuture(+this, em) } return el.postformat(em) } var aA = Math.abs; function d4() { var ev = aA(this._milliseconds) / 1000; var ew = aA(this._days); var en = aA(this._months); var ep, eu, er; ep = cK(ev / 60); eu = cK(ep / 60); ev %= 60; ep %= 60; er = cK(en / 12); en %= 12; var em = er; var es = en; var el = ew; var eq = eu; var eo = ep; var ex = ev; var et = this.asSeconds(); if (!et) { return "P0D" } return (et < 0 ? "-" : "") + "P" + (em ? em + "Y" : "") + (es ? es + "M" : "") + (el ? el + "D" : "") + ((eq || eo || ex) ? "T" : "") + (eq ? eq + "H" : "") + (eo ? eo + "M" : "") + (ex ? ex + "S" : "") } var dm = db.prototype; dm.abs = Y; dm.add = a6; dm.subtract = c0; dm.as = d0; dm.asMilliseconds = ei; dm.asSeconds = C; dm.asMinutes = cU; dm.asHours = r; dm.asDays = dt; dm.asWeeks = dc; dm.asMonths = dn; dm.asYears = aY; dm.valueOf = cq; dm._bubble = co; dm.get = a0; dm.milliseconds = e; dm.seconds = aV; dm.minutes = am; dm.hours = I; dm.days = aT; dm.weeks = dv; dm.months = d5; dm.years = bl; dm.humanize = c; dm.toISOString = d4; dm.toString = d4; dm.toJSON = d4; dm.locale = ej; dm.localeData = de; dm.toIsoString = dz("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", d4); dm.lang = u; b2("X", 0, 0, "unix"); b2("x", 0, 0, "valueOf"); aS("x", v); aS("X", eb); bu("X", function (el, en, em) { em._d = new Date(parseFloat(el, 10) * 1000) }); bu("x", function (el, en, em) { em._d = new Date(ck(el)) }); bt.version = "2.11.1"; aw(dp); bt.fn = a; bt.min = n; bt.max = a1; bt.now = b3; bt.utc = dC; bt.unix = P; bt.months = ek; bt.isDate = dM; bt.locale = ce; bt.invalid = cc; bt.duration = dy; bt.isMoment = bI; bt.weekdays = aI; bt.parseZone = cp; bt.localeData = q; bt.isDuration = S; bt.monthsShort = bP; bt.weekdaysMin = D; bt.defineLocale = b6; bt.weekdaysShort = ed; bt.normalizeUnits = cj; bt.relativeTimeThreshold = aM; bt.prototype = a; var cx = bt; return cx }));
(function (a) { var b = { i18n: { ar: { months: ["كانون الثاني", "شباط", "آذار", "نيسان", "مايو", "حزيران", "تموز", "آب", "أيلول", "تشرين الأول", "تشرين الثاني", "كانون الأول"], dayOfWeek: ["ن", "ث", "ع", "خ", "ج", "س", "ح"] }, ro: { months: ["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], dayOfWeek: ["l", "ma", "mi", "j", "v", "s", "d"] }, id: { months: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], dayOfWeek: ["Sen", "Sel", "Rab", "Kam", "Jum", "Sab", "Min"] }, bg: { months: ["Януари", "Февруари", "Март", "Април", "Май", "Юни", "Юли", "Август", "Септември", "Октомври", "Ноември", "Декември"], dayOfWeek: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"] }, fa: { months: ["فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر", "دی", "بهمن", "اسفند"], dayOfWeek: ["یکشنبه", "دوشنبه", "سه شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"] }, ru: { months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"], dayOfWeek: ["Вск", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"] }, uk: { months: ["Січень", "Лютий", "Березень", "Квітень", "Травень", "Червень", "Липень", "Серпень", "Вересень", "Жовтень", "Листопад", "Грудень"], dayOfWeek: ["Ндл", "Пнд", "Втр", "Срд", "Чтв", "Птн", "Сбт"] }, en: { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dayOfWeek: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"] }, el: { months: ["Ιανουάριος", "Φεβρουάριος", "Μάρτιος", "Απρίλιος", "Μάιος", "Ιούνιος", "Ιούλιος", "Αύγουστος", "Σεπτέμβριος", "Οκτώβριος", "Νοέμβριος", "Δεκέμβριος"], dayOfWeek: ["Κυρ", "Δευ", "Τρι", "Τετ", "Πεμ", "Παρ", "Σαβ"] }, de: { months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], dayOfWeek: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"] }, nl: { months: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], dayOfWeek: ["zo", "ma", "di", "wo", "do", "vr", "za"] }, tr: { months: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"], dayOfWeek: ["Paz", "Pts", "Sal", "Çar", "Per", "Cum", "Cts"] }, fr: { months: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"], dayOfWeek: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"] }, es: { months: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"], dayOfWeek: ["Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sáb"] }, th: { months: ["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"], dayOfWeek: ["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."] }, pl: { months: ["styczeń", "luty", "marzec", "kwiecień", "maj", "czerwiec", "lipiec", "sierpień", "wrzesień", "październik", "listopad", "grudzień"], dayOfWeek: ["nd", "pn", "wt", "śr", "cz", "pt", "sb"] }, pt: { months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], dayOfWeek: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"] }, ch: { months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], dayOfWeek: ["日", "一", "二", "三", "四", "五", "六"] }, se: { months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"], dayOfWeek: ["Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"] }, kr: { months: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], dayOfWeek: ["일", "월", "화", "수", "목", "금", "토"] }, it: { months: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"], dayOfWeek: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"] }, da: { months: ["January", "Februar", "Marts", "April", "Maj", "Juni", "July", "August", "September", "Oktober", "November", "December"], dayOfWeek: ["Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"] }, no: { months: ["Januar", "Februar", "Mars", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Desember"], dayOfWeek: ["Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"] }, ja: { months: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], dayOfWeek: ["日", "月", "火", "水", "木", "金", "土"] }, vi: { months: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"], dayOfWeek: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"] }, sl: { months: ["Januar", "Februar", "Marec", "April", "Maj", "Junij", "Julij", "Avgust", "September", "Oktober", "November", "December"], dayOfWeek: ["Ned", "Pon", "Tor", "Sre", "Čet", "Pet", "Sob"] }, cs: { months: ["Leden", "Únor", "Březen", "Duben", "Květen", "Červen", "Červenec", "Srpen", "Září", "Říjen", "Listopad", "Prosinec"], dayOfWeek: ["Ne", "Po", "Út", "St", "Čt", "Pá", "So"] }, hu: { months: ["Január", "Február", "Március", "Április", "Május", "Június", "Július", "Augusztus", "Szeptember", "Október", "November", "December"], dayOfWeek: ["Va", "Hé", "Ke", "Sze", "Cs", "Pé", "Szo"] }, az: { months: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], dayOfWeek: ["B", "Be", "Ça", "Ç", "Ca", "C", "Ş"] }, bs: { months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"], dayOfWeek: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"] }, ca: { months: ["Gener", "Febrer", "Març", "Abril", "Maig", "Juny", "Juliol", "Agost", "Setembre", "Octubre", "Novembre", "Desembre"], dayOfWeek: ["Dg", "Dl", "Dt", "Dc", "Dj", "Dv", "Ds"] }, "en-GB": { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dayOfWeek: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"] }, et: { months: ["Jaanuar", "Veebruar", "Märts", "Aprill", "Mai", "Juuni", "Juuli", "August", "September", "Oktoober", "November", "Detsember"], dayOfWeek: ["P", "E", "T", "K", "N", "R", "L"] }, eu: { months: ["Urtarrila", "Otsaila", "Martxoa", "Apirila", "Maiatza", "Ekaina", "Uztaila", "Abuztua", "Iraila", "Urria", "Azaroa", "Abendua"], dayOfWeek: ["Ig.", "Al.", "Ar.", "Az.", "Og.", "Or.", "La."] }, fi: { months: ["Tammikuu", "Helmikuu", "Maaliskuu", "Huhtikuu", "Toukokuu", "Kesäkuu", "Heinäkuu", "Elokuu", "Syyskuu", "Lokakuu", "Marraskuu", "Joulukuu"], dayOfWeek: ["Su", "Ma", "Ti", "Ke", "To", "Pe", "La"] }, gl: { months: ["Xan", "Feb", "Maz", "Abr", "Mai", "Xun", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], dayOfWeek: ["Dom", "Lun", "Mar", "Mer", "Xov", "Ven", "Sab"] }, hr: { months: ["Siječanj", "Veljača", "Ožujak", "Travanj", "Svibanj", "Lipanj", "Srpanj", "Kolovoz", "Rujan", "Listopad", "Studeni", "Prosinac"], dayOfWeek: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"] }, ko: { months: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], dayOfWeek: ["일", "월", "화", "수", "목", "금", "토"] }, lt: { months: ["Sausio", "Vasario", "Kovo", "Balandžio", "Gegužės", "Birželio", "Liepos", "Rugpjūčio", "Rugsėjo", "Spalio", "Lapkričio", "Gruodžio"], dayOfWeek: ["Sek", "Pir", "Ant", "Tre", "Ket", "Pen", "Šeš"] }, lv: { months: ["Janvāris", "Februāris", "Marts", "Aprīlis ", "Maijs", "Jūnijs", "Jūlijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"], dayOfWeek: ["Sv", "Pr", "Ot", "Tr", "Ct", "Pk", "St"] }, mk: { months: ["јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", "ноември", "декември"], dayOfWeek: ["нед", "пон", "вто", "сре", "чет", "пет", "саб"] }, mn: { months: ["1-р сар", "2-р сар", "3-р сар", "4-р сар", "5-р сар", "6-р сар", "7-р сар", "8-р сар", "9-р сар", "10-р сар", "11-р сар", "12-р сар"], dayOfWeek: ["Дав", "Мяг", "Лха", "Пүр", "Бсн", "Бям", "Ням"] }, "pt-BR": { months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"], dayOfWeek: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"] }, sk: { months: ["Január", "Február", "Marec", "Apríl", "Máj", "Jún", "Júl", "August", "September", "Október", "November", "December"], dayOfWeek: ["Ne", "Po", "Ut", "St", "Št", "Pi", "So"] }, sq: { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], dayOfWeek: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"] }, "sr-YU": { months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"], dayOfWeek: ["Ned", "Pon", "Uto", "Sre", "čet", "Pet", "Sub"] }, sr: { months: ["јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар"], dayOfWeek: ["нед", "пон", "уто", "сре", "чет", "пет", "суб"] }, sv: { months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"], dayOfWeek: ["Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"] }, "zh-TW": { months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], dayOfWeek: ["日", "一", "二", "三", "四", "五", "六"] }, zh: { months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"], dayOfWeek: ["日", "一", "二", "三", "四", "五", "六"] }, he: { months: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"], dayOfWeek: ["א'", "ב'", "ג'", "ד'", "ה'", "ו'", "שבת"] }, hy: { months: ["Հունվար", "Փետրվար", "Մարտ", "Ապրիլ", "Մայիս", "Հունիս", "Հուլիս", "Օգոստոս", "Սեպտեմբեր", "Հոկտեմբեր", "Նոյեմբեր", "Դեկտեմբեր"], dayOfWeek: ["Կի", "Երկ", "Երք", "Չոր", "Հնգ", "Ուրբ", "Շբթ"] } }, value: "", lang: "en", format: "Y/m/d H:i", formatTime: "H:i", formatDate: "Y/m/d", startDate: false, step: 60, monthChangeSpinner: true, closeOnDateSelect: false, closeOnTimeSelect: false, closeOnWithoutClick: true, closeOnInputClick: true, timepicker: true, datepicker: true, weeks: false, defaultTime: false, defaultDate: false, minDate: false, maxDate: false, minTime: false, maxTime: false, allowTimes: [], opened: false, initTime: true, inline: false, theme: "", onSelectDate: function () { }, onSelectTime: function () { }, onChangeMonth: function () { }, onChangeYear: function () { }, onChangeDateTime: function () { }, onShow: function () { }, onClose: function () { }, onGenerate: function () { }, withoutCopyright: true, inverseButton: false, hours12: false, next: "xdsoft_next", prev: "xdsoft_prev", dayOfWeekStart: 0, parentID: "body", timeHeightInTimePicker: 25, timepickerScrollbar: true, todayButton: true, prevButton: true, nextButton: true, defaultSelect: true, scrollMonth: true, scrollTime: true, scrollInput: true, lazyInit: false, mask: false, validateOnBlur: true, allowBlank: true, yearStart: 1950, yearEnd: 2050, monthStart: 0, monthEnd: 11, style: "", id: "", fixed: false, roundTime: "round", className: "", weekends: [], disabledDates: [], yearOffset: 0, beforeShowDay: null, enterLikeTab: true, showApplyButton: false }; if (!Array.prototype.indexOf) { Array.prototype.indexOf = function (e, f) { var d, c; for (d = (f || 0), c = this.length; d < c; d += 1) { if (this[d] === e) { return d } } return -1 } } Date.prototype.countDaysInMonth = function () { return new Date(this.getFullYear(), this.getMonth() + 1, 0).getDate() }; a.fn.xdsoftScroller = function (c) { return this.each(function () { var m = a(this), n = function (u) { var t = { x: 0, y: 0 }, v; if (u.type === "touchstart" || u.type === "touchmove" || u.type === "touchend" || u.type === "touchcancel") { v = u.originalEvent.touches[0] || u.originalEvent.changedTouches[0]; t.x = v.clientX; t.y = v.clientY } else { if (u.type === "mousedown" || u.type === "mouseup" || u.type === "mousemove" || u.type === "mouseover" || u.type === "mouseout" || u.type === "mouseenter" || u.type === "mouseleave") { t.x = u.clientX; t.y = u.clientY } } return t }, g = 0, q, k, r, s, j, p = 100, e = false, i = 0, l = 0, o = 0, f = false, d = 0, h = function () { }; if (c === "hide") { m.find(".xdsoft_scrollbar").hide(); return } if (!a(this).hasClass("xdsoft_scroller_box")) { q = m.children().eq(0); k = m[0].clientHeight; r = q[0].offsetHeight; s = a('<div class="xdsoft_scrollbar"></div>'); j = a('<div class="xdsoft_scroller"></div>'); s.append(j); m.addClass("xdsoft_scroller_box").append(s); h = function h(t) { var u = n(t).y - i + d; if (u < 0) { u = 0 } if (u + j[0].offsetHeight > o) { u = o - j[0].offsetHeight } m.trigger("scroll_element.xdsoft_scroller", [p ? u / p : 0]) }; j.on("touchstart.xdsoft_scroller mousedown.xdsoft_scroller", function (u) { if (!k) { m.trigger("resize_scroll.xdsoft_scroller", [c]) } i = n(u).y; d = parseInt(j.css("margin-top"), 10); o = s[0].offsetHeight; if (u.type === "mousedown") { if (document) { a(document.body).addClass("xdsoft_noselect") } a([document.body, window]).on("mouseup.xdsoft_scroller", function t() { a([document.body, window]).off("mouseup.xdsoft_scroller", t).off("mousemove.xdsoft_scroller", h).removeClass("xdsoft_noselect") }); a(document.body).on("mousemove.xdsoft_scroller", h) } else { f = true; u.stopPropagation(); u.preventDefault() } }).on("touchmove", function (t) { if (f) { t.preventDefault(); h(t) } }).on("touchend touchcancel", function (t) { f = false; d = 0 }); m.on("scroll_element.xdsoft_scroller", function (u, t) { if (!k) { m.trigger("resize_scroll.xdsoft_scroller", [t, true]) } t = t > 1 ? 1 : (t < 0 || isNaN(t)) ? 0 : t; j.css("margin-top", p * t); setTimeout(function () { q.css("marginTop", -parseInt((q[0].offsetHeight - k) * t, 10)) }, 10) }).on("resize_scroll.xdsoft_scroller", function (x, u, t) { var w, v; k = m[0].clientHeight; r = q[0].offsetHeight; w = k / r; v = w * s[0].offsetHeight; if (w > 1) { j.hide() } else { j.show(); j.css("height", parseInt(v > 10 ? v : 10, 10)); p = s[0].offsetHeight - j[0].offsetHeight; if (t !== true) { m.trigger("scroll_element.xdsoft_scroller", [u || Math.abs(parseInt(q.css("marginTop"), 10)) / (r - k)]) } } }); m.on("mousewheel", function (t) { var u = Math.abs(parseInt(q.css("marginTop"), 10)); u = u - (t.deltaY * 20); if (u < 0) { u = 0 } m.trigger("scroll_element.xdsoft_scroller", [u / (r - k)]); t.stopPropagation(); return false }); m.on("touchstart", function (t) { e = n(t); l = Math.abs(parseInt(q.css("marginTop"), 10)) }); m.on("touchmove", function (t) { if (e) { t.preventDefault(); var u = n(t); m.trigger("scroll_element.xdsoft_scroller", [(l - (u.y - e.y)) / (r - k)]) } }); m.on("touchend touchcancel", function (t) { e = false; l = 0 }) } m.trigger("resize_scroll.xdsoft_scroller", [c]) }) }; a.fn.datetimepicker = function (e) { var t = 48, o = 57, i = 96, c = 105, l = 17, q = 46, m = 13, C = 27, y = 8, u = 37, r = 38, A = 39, B = 40, h = 9, v = 116, w = 65, d = 67, z = 86, p = 90, k = 89, x = false, g = (a.isPlainObject(e) || !e) ? a.extend(true, {}, b, e) : a.extend(true, {}, b), n = 0, f, s, j = function (E) { E.on("open.xdsoft focusin.xdsoft mousedown.xdsoft", function D(F) { if (E.is(":disabled") || E.data("xdsoft_datetimepicker")) { return } clearTimeout(n); n = setTimeout(function () { if (!E.data("xdsoft_datetimepicker")) { f(E) } E.off("open.xdsoft focusin.xdsoft mousedown.xdsoft", D).trigger("open.xdsoft") }, 100) }) }; f = function (M) { var O = a("<div " + (g.id ? 'id="' + g.id + '"' : "") + " " + (g.style ? 'style="' + g.style + '"' : "") + ' class="xdsoft_datetimepicker xdsoft_' + g.theme + " xdsoft_noselect " + (g.weeks ? " xdsoft_showweeks" : "") + g.className + '"></div>'), S = a('<div class="xdsoft_copyright"><a target="_blank" href="http://xdsoft.net/jqplugins/datetimepicker/">xdsoft.net</a></div>'), K = a('<div class="xdsoft_datepicker active"></div>'), T = a('<div class="xdsoft_mounthpicker"><button type="button" class="xdsoft_prev"></button><button type="button" class="xdsoft_today_button"></button><div class="xdsoft_label xdsoft_month"><span></span><i></i></div><div class="xdsoft_label xdsoft_year"><span></span><i></i></div><button type="button" class="xdsoft_next"></button></div>'), Q = a('<div class="xdsoft_calendar"></div>'), V = a('<div class="xdsoft_timepicker active"><button type="button" class="xdsoft_prev"></button><div class="xdsoft_time_box"></div><button type="button" class="xdsoft_next"></button></div>'), G = V.find(".xdsoft_time_box").eq(0), F = a('<div class="xdsoft_time_variant"></div>'), P = a('<button class="xdsoft_save_selected blue-gradient-button">Save Selected</button>'), E = a('<div class="xdsoft_select xdsoft_monthselect"><div></div></div>'), U = a('<div class="xdsoft_select xdsoft_yearselect"><div></div></div>'), R = false, W, H, D, Y, I, L = 0, X = 0, N; T.find(".xdsoft_month span").after(E); T.find(".xdsoft_year span").after(U); T.find(".xdsoft_month,.xdsoft_year").on("mousedown.xdsoft", function (ac) { var Z = a(this).find(".xdsoft_select").eq(0), af = 0, ad = 0, ae = Z.is(":visible"), aa, ab; T.find(".xdsoft_select").hide(); if (N.currentTime) { af = N.currentTime[a(this).hasClass("xdsoft_month") ? "getMonth" : "getFullYear"]() } Z[ae ? "hide" : "show"](); for (aa = Z.find("div.xdsoft_option"), ab = 0; ab < aa.length; ab += 1) { if (aa.eq(ab).data("value") === af) { break } else { ad += aa[0].offsetHeight } } Z.xdsoftScroller(ad / (Z.children()[0].offsetHeight - (Z[0].clientHeight))); ac.stopPropagation(); return false }); T.find(".xdsoft_select").xdsoftScroller().on("mousedown.xdsoft", function (Z) { Z.stopPropagation(); Z.preventDefault() }).on("mousedown.xdsoft", ".xdsoft_option", function (aa) { if (N.currentTime === undefined || N.currentTime === null) { N.currentTime = N.now() } var Z = N.currentTime.getFullYear(); if (N && N.currentTime) { N.currentTime[a(this).parent().parent().hasClass("xdsoft_monthselect") ? "setMonth" : "setFullYear"](a(this).data("value")) } a(this).parent().parent().hide(); O.trigger("xchange.xdsoft"); if (g.onChangeMonth && a.isFunction(g.onChangeMonth)) { g.onChangeMonth.call(O, N.currentTime, O.data("input")) } if (Z !== N.currentTime.getFullYear() && a.isFunction(g.onChangeYear)) { g.onChangeYear.call(O, N.currentTime, O.data("input")) } }); O.setOptions = function (Z) { g = a.extend(true, {}, g, Z); if (Z.allowTimes && a.isArray(Z.allowTimes) && Z.allowTimes.length) { g.allowTimes = a.extend(true, [], Z.allowTimes) } if (Z.weekends && a.isArray(Z.weekends) && Z.weekends.length) { g.weekends = a.extend(true, [], Z.weekends) } if (Z.disabledDates && a.isArray(Z.disabledDates) && Z.disabledDates.length) { g.disabledDates = a.extend(true, [], Z.disabledDates) } if ((g.open || g.opened) && (!g.inline)) { M.trigger("open.xdsoft") } if (g.inline) { R = true; O.addClass("xdsoft_inline"); M.after(O).hide() } if (g.inverseButton) { g.next = "xdsoft_prev"; g.prev = "xdsoft_next" } if (g.datepicker) { K.addClass("active") } else { K.removeClass("active") } if (g.timepicker) { V.addClass("active") } else { V.removeClass("active") } if (g.value) { if (M && M.val) { M.val(g.value) } N.setCurrentTime(g.value) } if (isNaN(g.dayOfWeekStart)) { g.dayOfWeekStart = 0 } else { g.dayOfWeekStart = parseInt(g.dayOfWeekStart, 10) % 7 } if (!g.timepickerScrollbar) { G.xdsoftScroller("hide") } if (g.minDate && /^-(.*)$/.test(g.minDate)) { g.minDate = N.strToDateTime(g.minDate).dateFormat(g.formatDate) } if (g.maxDate && /^\+(.*)$/.test(g.maxDate)) { g.maxDate = N.strToDateTime(g.maxDate).dateFormat(g.formatDate) } P.toggle(g.showApplyButton); T.find(".xdsoft_today_button").css("visibility", !g.todayButton ? "hidden" : "visible"); T.find("." + g.prev).css("visibility", !g.prevButton ? "hidden" : "visible"); T.find("." + g.next).css("visibility", !g.nextButton ? "hidden" : "visible"); if (g.mask) { var ab, ac = function (af) { try { if (document.selection && document.selection.createRange) { var ae = document.selection.createRange(); return ae.getBookmark().charCodeAt(2) - 2 } if (af.setSelectionRange) { return af.selectionStart } } catch (ag) { return 0 } }, aa = function (af, ag) { af = (typeof af === "string" || af instanceof String) ? document.getElementById(af) : af; if (!af) { return false } if (af.createTextRange) { var ae = af.createTextRange(); ae.collapse(true); ae.moveEnd("character", ag); ae.moveStart("character", ag); ae.select(); return true } if (af.setSelectionRange) { af.setSelectionRange(ag, ag); return true } return false }, ad = function (ae, ag) { var af = ae.replace(/([\[\]\/\{\}\(\)\-\.\+]{1})/g, "\\$1").replace(/_/g, "{digit+}").replace(/([0-9]{1})/g, "{digit$1}").replace(/\{digit([0-9]{1})\}/g, "[0-$1_]{1}").replace(/\{digit[\+]\}/g, "[0-9_]{1}"); return (new RegExp(af)).test(ag) }; M.off("keydown.xdsoft"); if (g.mask === true) { g.mask = g.format.replace(/Y/g, "9999").replace(/F/g, "9999").replace(/m/g, "19").replace(/d/g, "39").replace(/H/g, "29").replace(/i/g, "59").replace(/s/g, "59") } if (a.type(g.mask) === "string") { if (!ad(g.mask, M.val())) { M.val(g.mask.replace(/[0-9]/g, "_")) } M.on("keydown.xdsoft", function (af) { var ag = this.value, ae = af.which, ai, ah; if (((ae >= t && ae <= o) || (ae >= i && ae <= c)) || (ae === y || ae === q)) { ai = ac(this); ah = (ae !== y && ae !== q) ? String.fromCharCode((i <= ae && ae <= c) ? ae - t : ae) : "_"; if ((ae === y || ae === q) && ai) { ai -= 1; ah = "_" } while (/[^0-9_]/.test(g.mask.substr(ai, 1)) && ai < g.mask.length && ai > 0) { ai += (ae === y || ae === q) ? -1 : 1 } ag = ag.substr(0, ai) + ah + ag.substr(ai + 1); if (a.trim(ag) === "") { ag = g.mask.replace(/[0-9]/g, "_") } else { if (ai === g.mask.length) { af.preventDefault(); return false } } ai += (ae === y || ae === q) ? 0 : 1; while (/[^0-9_]/.test(g.mask.substr(ai, 1)) && ai < g.mask.length && ai > 0) { ai += (ae === y || ae === q) ? -1 : 1 } if (ad(g.mask, ag)) { this.value = ag; aa(this, ai) } else { if (a.trim(ag) === "") { this.value = g.mask.replace(/[0-9]/g, "_") } else { M.trigger("error_input.xdsoft") } } } else { if (([w, d, z, p, k].indexOf(ae) !== -1 && x) || [C, r, B, u, A, v, l, h, m].indexOf(ae) !== -1) { return true } } af.preventDefault(); return false }) } } if (g.validateOnBlur) { M.off("blur.xdsoft").on("blur.xdsoft", function () { if (g.allowBlank && !a.trim(a(this).val()).length) { a(this).val(null); O.data("xdsoft_datetime").empty() } else { if (!Date.parseDate(a(this).val(), g.format)) { var af = +([a(this).val()[0], a(this).val()[1]].join("")), ae = +([a(this).val()[2], a(this).val()[3]].join("")); if (!g.datepicker && g.timepicker && af >= 0 && af < 24 && ae >= 0 && ae < 60) { a(this).val([af, ae].map(function (ag) { return ag > 9 ? ag : "0" + ag }).join(":")) } else { a(this).val((N.now()).dateFormat(g.format)) } O.data("xdsoft_datetime").setCurrentTime(a(this).val()) } else { O.data("xdsoft_datetime").setCurrentTime(a(this).val()) } } O.trigger("changedatetime.xdsoft") }) } g.dayOfWeekStartPrev = (g.dayOfWeekStart === 0) ? 6 : g.dayOfWeekStart - 1; O.trigger("xchange.xdsoft").trigger("afterOpen.xdsoft") }; O.data("options", g).on("mousedown.xdsoft", function (Z) { Z.stopPropagation(); Z.preventDefault(); U.hide(); E.hide(); return false }); G.append(F); G.xdsoftScroller(); O.on("afterOpen.xdsoft", function () { G.xdsoftScroller() }); O.append(K).append(V); if (g.withoutCopyright !== true) { O.append(S) } K.append(T).append(Q).append(P); a(g.parentID).append(O); W = function () { var Z = this; Z.now = function (ac) { var ad = new Date(), aa, ab; if (!ac && g.defaultDate) { aa = Z.strToDate(g.defaultDate); ad.setFullYear(aa.getFullYear()); ad.setMonth(aa.getMonth()); ad.setDate(aa.getDate()) } if (g.yearOffset) { ad.setFullYear(ad.getFullYear() + g.yearOffset) } if (!ac && g.defaultTime) { ab = Z.strtotime(g.defaultTime); ad.setHours(ab.getHours()); ad.setMinutes(ab.getMinutes()) } return ad }; Z.isValidDate = function (aa) { if (Object.prototype.toString.call(aa) !== "[object Date]") { return false } return !isNaN(aa.getTime()) }; Z.setCurrentTime = function (aa) { Z.currentTime = (typeof aa === "string") ? Z.strToDateTime(aa) : Z.isValidDate(aa) ? aa : Z.now(); O.trigger("xchange.xdsoft") }; Z.empty = function () { Z.currentTime = null }; Z.getCurrentTime = function (aa) { return Z.currentTime }; Z.nextMonth = function () { if (Z.currentTime === undefined || Z.currentTime === null) { Z.currentTime = Z.now() } var ab = Z.currentTime.getMonth() + 1, aa; if (ab === 12) { Z.currentTime.setFullYear(Z.currentTime.getFullYear() + 1); ab = 0 } aa = Z.currentTime.getFullYear(); Z.currentTime.setDate(Math.min(new Date(Z.currentTime.getFullYear(), ab + 1, 0).getDate(), Z.currentTime.getDate())); Z.currentTime.setMonth(ab); if (g.onChangeMonth && a.isFunction(g.onChangeMonth)) { g.onChangeMonth.call(O, N.currentTime, O.data("input")) } if (aa !== Z.currentTime.getFullYear() && a.isFunction(g.onChangeYear)) { g.onChangeYear.call(O, N.currentTime, O.data("input")) } O.trigger("xchange.xdsoft"); return ab }; Z.prevMonth = function () { if (Z.currentTime === undefined || Z.currentTime === null) { Z.currentTime = Z.now() } var aa = Z.currentTime.getMonth() - 1; if (aa === -1) { Z.currentTime.setFullYear(Z.currentTime.getFullYear() - 1); aa = 11 } Z.currentTime.setDate(Math.min(new Date(Z.currentTime.getFullYear(), aa + 1, 0).getDate(), Z.currentTime.getDate())); Z.currentTime.setMonth(aa); if (g.onChangeMonth && a.isFunction(g.onChangeMonth)) { g.onChangeMonth.call(O, N.currentTime, O.data("input")) } O.trigger("xchange.xdsoft"); return aa }; Z.getWeekOfYear = function (ab) { var aa = new Date(ab.getFullYear(), 0, 1); return Math.ceil((((ab - aa) / 86400000) + aa.getDay() + 1) / 7) }; Z.strToDateTime = function (ad) { var ab = [], aa, ac; if (ad && ad instanceof Date && Z.isValidDate(ad)) { return ad } ab = /^(\+|\-)(.*)$/.exec(ad); if (ab) { ab[2] = Date.parseDate(ab[2], g.formatDate) } if (ab && ab[2]) { aa = ab[2].getTime() - (ab[2].getTimezoneOffset()) * 60000; ac = new Date((N.now()).getTime() + parseInt(ab[1] + "1", 10) * aa) } else { ac = ad ? Date.parseDate(ad, g.format) : Z.now() } if (!Z.isValidDate(ac)) { ac = Z.now() } return ac }; Z.strToDate = function (ab) { if (ab && ab instanceof Date && Z.isValidDate(ab)) { return ab } var aa = ab ? Date.parseDate(ab, g.formatDate) : Z.now(true); if (!Z.isValidDate(aa)) { aa = Z.now(true) } return aa }; Z.strtotime = function (aa) { if (aa && aa instanceof Date && Z.isValidDate(aa)) { return aa } var ab = aa ? Date.parseDate(aa, g.formatTime) : Z.now(true); if (!Z.isValidDate(ab)) { ab = Z.now(true) } return ab }; Z.str = function () { return Z.currentTime.dateFormat(g.format) }; Z.currentTime = this.now() }; N = new W(); P.on("click", function (Z) { Z.preventDefault(); O.data("changed", true); N.setCurrentTime(J()); M.val(N.str()); O.trigger("close.xdsoft") }); T.find(".xdsoft_today_button").on("mousedown.xdsoft", function () { O.data("changed", true); N.setCurrentTime(0); O.trigger("afterOpen.xdsoft") }).on("dblclick.xdsoft", function () { M.val(N.str()); O.trigger("close.xdsoft") }); T.find(".xdsoft_prev,.xdsoft_next").on("mousedown.xdsoft", function () { var aa = a(this), ad = 0, Z = false; (function ac(ae) { if (aa.hasClass(g.next)) { N.nextMonth() } else { if (aa.hasClass(g.prev)) { N.prevMonth() } } if (g.monthChangeSpinner) { if (!Z) { ad = setTimeout(ac, ae || 100) } } }(500)); a([document.body, window]).on("mouseup.xdsoft", function ab() { clearTimeout(ad); Z = true; a([document.body, window]).off("mouseup.xdsoft", ab) }) }); V.find(".xdsoft_prev,.xdsoft_next").on("mousedown.xdsoft", function () { var ac = a(this), ae = 0, Z = false, ad = 110; (function ab(ag) { var ai = G[0].clientHeight, af = F[0].offsetHeight, ah = Math.abs(parseInt(F.css("marginTop"), 10)); if (ac.hasClass(g.next) && (af - ai) - g.timeHeightInTimePicker >= ah) { F.css("marginTop", "-" + (ah + g.timeHeightInTimePicker) + "px") } else { if (ac.hasClass(g.prev) && ah - g.timeHeightInTimePicker >= 0) { F.css("marginTop", "-" + (ah - g.timeHeightInTimePicker) + "px") } } G.trigger("scroll_element.xdsoft_scroller", [Math.abs(parseInt(F.css("marginTop"), 10) / (af - ai))]); ad = (ad > 10) ? 10 : ad - 10; if (!Z) { ae = setTimeout(ab, ag || ad) } }(500)); a([document.body, window]).on("mouseup.xdsoft", function aa() { clearTimeout(ae); Z = true; a([document.body, window]).off("mouseup.xdsoft", aa) }) }); H = 0; O.on("xchange.xdsoft", function (Z) { clearTimeout(H); H = setTimeout(function () { if (N.currentTime === undefined || N.currentTime === null) { N.currentTime = N.now() } var ap = "", ab = new Date(N.currentTime.getFullYear(), N.currentTime.getMonth(), 1, 12, 0, 0), ah = 0, ag, al = N.now(), aa = false, af = false, ak, am, ad, an, ae = [], aq, ao = true, ac = "", ai = "", aj; while (ab.getDay() !== g.dayOfWeekStart) { ab.setDate(ab.getDate() - 1) } ap += "<table><thead><tr>"; if (g.weeks) { ap += "<th></th>" } for (ag = 0; ag < 7; ag += 1) { ap += "<th>" + g.i18n[g.lang].dayOfWeek[(ag + g.dayOfWeekStart) % 7] + "</th>" } ap += "</tr></thead>"; ap += "<tbody>"; if (g.maxDate !== false) { aa = N.strToDate(g.maxDate); aa = new Date(aa.getFullYear(), aa.getMonth(), aa.getDate(), 23, 59, 59, 999) } if (g.minDate !== false) { af = N.strToDate(g.minDate); af = new Date(af.getFullYear(), af.getMonth(), af.getDate()) } while (ah < N.currentTime.countDaysInMonth() || ab.getDay() !== g.dayOfWeekStart || N.currentTime.getMonth() === ab.getMonth()) { ae = []; ah += 1; ak = ab.getDate(); am = ab.getFullYear(); ad = ab.getMonth(); an = N.getWeekOfYear(ab); ae.push("xdsoft_date"); if (g.beforeShowDay && a.isFunction(g.beforeShowDay.call)) { aq = g.beforeShowDay.call(O, ab) } else { aq = null } if ((aa !== false && ab > aa) || (af !== false && ab < af) || (aq && aq[0] === false)) { ae.push("xdsoft_disabled") } else { if (g.disabledDates.indexOf(ab.dateFormat(g.formatDate)) !== -1) { ae.push("xdsoft_disabled") } } if (aq && aq[1] !== "") { ae.push(aq[1]) } if (N.currentTime.getMonth() !== ad) { ae.push("xdsoft_other_month") } if ((g.defaultSelect || O.data("changed")) && N.currentTime.dateFormat(g.formatDate) === ab.dateFormat(g.formatDate)) { ae.push("xdsoft_current") } if (al.dateFormat(g.formatDate) === ab.dateFormat(g.formatDate)) { ae.push("xdsoft_today") } if (ab.getDay() === 0 || ab.getDay() === 6 || ~g.weekends.indexOf(ab.dateFormat(g.formatDate))) { ae.push("xdsoft_weekend") } if (g.beforeShowDay && a.isFunction(g.beforeShowDay)) { ae.push(g.beforeShowDay(ab)) } if (ao) { ap += "<tr>"; ao = false; if (g.weeks) { ap += "<th>" + an + "</th>" } } ap += '<td data-date="' + ak + '" data-month="' + ad + '" data-year="' + am + '" class="xdsoft_date xdsoft_day_of_week' + ab.getDay() + " " + ae.join(" ") + '"><div>' + ak + "</div></td>"; if (ab.getDay() === g.dayOfWeekStartPrev) { ap += "</tr>"; ao = true } ab.setDate(ak + 1) } ap += "</tbody></table>"; Q.html(ap); T.find(".xdsoft_label span").eq(0).text(g.i18n[g.lang].months[N.currentTime.getMonth()]); T.find(".xdsoft_label span").eq(1).text(N.currentTime.getFullYear()); ac = ""; ai = ""; ad = ""; aj = function aj(av, ar) { var au = N.now(); au.setHours(av); av = parseInt(au.getHours(), 10); au.setMinutes(ar); ar = parseInt(au.getMinutes(), 10); var at = new Date(N.currentTime); at.setHours(av); at.setMinutes(ar); ae = []; if ((g.minDateTime !== false && g.minDateTime > at) || (g.maxTime !== false && N.strtotime(g.maxTime).getTime() < au.getTime()) || (g.minTime !== false && N.strtotime(g.minTime).getTime() > au.getTime())) { ae.push("xdsoft_disabled") } var aw = new Date(N.currentTime); aw.setHours(parseInt(N.currentTime.getHours(), 10)); aw.setMinutes(Math[g.roundTime](N.currentTime.getMinutes() / g.step) * g.step); if ((g.initTime || g.defaultSelect || O.data("changed")) && aw.getHours() === parseInt(av, 10) && (g.step > 59 || aw.getMinutes() === parseInt(ar, 10))) { if (g.defaultSelect || O.data("changed")) { ae.push("xdsoft_current") } else { if (g.initTime) { ae.push("xdsoft_init_time") } } } if (parseInt(al.getHours(), 10) === parseInt(av, 10) && parseInt(al.getMinutes(), 10) === parseInt(ar, 10)) { ae.push("xdsoft_today") } ac += '<div class="xdsoft_time ' + ae.join(" ") + '" data-hour="' + av + '" data-minute="' + ar + '">' + au.dateFormat(g.formatTime) + "</div>" }; if (!g.allowTimes || !a.isArray(g.allowTimes) || !g.allowTimes.length) { for (ah = 0, ag = 0; ah < (g.hours12 ? 12 : 24); ah += 1) { for (ag = 0; ag < 60; ag += g.step) { ai = (ah < 10 ? "0" : "") + ah; ad = (ag < 10 ? "0" : "") + ag; aj(ai, ad) } } } else { for (ah = 0; ah < g.allowTimes.length; ah += 1) { ai = N.strtotime(g.allowTimes[ah]).getHours(); ad = N.strtotime(g.allowTimes[ah]).getMinutes(); aj(ai, ad) } } F.html(ac); e = ""; ah = 0; for (ah = parseInt(g.yearStart, 10) + g.yearOffset; ah <= parseInt(g.yearEnd, 10) + g.yearOffset; ah += 1) { e += '<div class="xdsoft_option ' + (N.currentTime.getFullYear() === ah ? "xdsoft_current" : "") + '" data-value="' + ah + '">' + ah + "</div>" } U.children().eq(0).html(e); for (ah = parseInt(g.monthStart), e = ""; ah <= parseInt(g.monthEnd); ah += 1) { e += '<div class="xdsoft_option ' + (N.currentTime.getMonth() === ah ? "xdsoft_current" : "") + '" data-value="' + ah + '">' + g.i18n[g.lang].months[ah] + "</div>" } E.children().eq(0).html(e); a(O).trigger("generate.xdsoft") }, 10); Z.stopPropagation() }).on("afterOpen.xdsoft", function () { if (g.timepicker) { var aa, ac, Z, ab; if (F.find(".xdsoft_current").length) { aa = ".xdsoft_current" } else { if (F.find(".xdsoft_init_time").length) { aa = ".xdsoft_init_time" } } if (aa) { ac = G[0].clientHeight; Z = F[0].offsetHeight; ab = F.find(aa).index() * g.timeHeightInTimePicker + 1; if ((Z - ac) < ab) { ab = Z - ac } G.trigger("scroll_element.xdsoft_scroller", [parseInt(ab, 10) / (Z - ac)]) } else { G.trigger("scroll_element.xdsoft_scroller", [0]) } } }); D = 0; Q.on("click.xdsoft", "td", function (Z) { Z.stopPropagation(); D += 1; var ab = a(this), aa = N.currentTime; if (aa === undefined || aa === null) { N.currentTime = N.now(); aa = N.currentTime } if (ab.hasClass("xdsoft_disabled")) { return false } aa.setDate(1); aa.setFullYear(ab.data("year")); aa.setMonth(ab.data("month")); aa.setDate(ab.data("date")); O.trigger("select.xdsoft", [aa]); M.val(N.str()); if ((D > 1 || (g.closeOnDateSelect === true || (g.closeOnDateSelect === 0 && !g.timepicker))) && !g.inline) { O.trigger("close.xdsoft") } if (g.onSelectDate && a.isFunction(g.onSelectDate)) { g.onSelectDate.call(O, N.currentTime, O.data("input"), Z) } O.data("changed", true); O.trigger("xchange.xdsoft"); O.trigger("changedatetime.xdsoft"); setTimeout(function () { D = 0 }, 200) }); F.on("click.xdsoft", "div", function (Z) { Z.stopPropagation(); var ab = a(this), aa = N.currentTime; if (aa === undefined || aa === null) { N.currentTime = N.now(); aa = N.currentTime } if (ab.hasClass("xdsoft_disabled")) { return false } aa.setHours(ab.data("hour")); aa.setMinutes(ab.data("minute")); O.trigger("select.xdsoft", [aa]); O.data("input").val(N.str()); if (g.inline !== true && g.closeOnTimeSelect === true) { O.trigger("close.xdsoft") } if (g.onSelectTime && a.isFunction(g.onSelectTime)) { g.onSelectTime.call(O, N.currentTime, O.data("input"), Z) } O.data("changed", true); O.trigger("xchange.xdsoft"); O.trigger("changedatetime.xdsoft") }); K.on("mousewheel.xdsoft", function (Z) { if (!g.scrollMonth) { return true } if (Z.deltaY < 0) { N.nextMonth() } else { N.prevMonth() } return false }); M.on("mousewheel.xdsoft", function (Z) { if (!g.scrollInput) { return true } if (!g.datepicker && g.timepicker) { Y = F.find(".xdsoft_current").length ? F.find(".xdsoft_current").eq(0).index() : 0; if (Y + Z.deltaY >= 0 && Y + Z.deltaY < F.children().length) { Y += Z.deltaY } if (F.children().eq(Y).length) { F.children().eq(Y).trigger("mousedown") } return false } if (g.datepicker && !g.timepicker) { K.trigger(Z, [Z.deltaY, Z.deltaX, Z.deltaY]); if (M.val) { M.val(N.str()) } O.trigger("changedatetime.xdsoft"); return false } }); O.on("changedatetime.xdsoft", function (Z) { if (g.onChangeDateTime && a.isFunction(g.onChangeDateTime)) { var aa = O.data("input"); g.onChangeDateTime.call(O, N.currentTime, aa, Z); delete g.value; aa.trigger("change") } }).on("generate.xdsoft", function () { if (g.onGenerate && a.isFunction(g.onGenerate)) { g.onGenerate.call(O, N.currentTime, O.data("input")) } if (R) { O.trigger("afterOpen.xdsoft"); R = false } }).on("click.xdsoft", function (Z) { Z.stopPropagation() }); Y = 0; I = function () { var ac = O.data("input").offset(), ab = ac.top + O.data("input")[0].offsetHeight - 1, aa = ac.left, Z = "absolute"; if (g.fixed) { ab -= a(window).scrollTop(); aa -= a(window).scrollLeft(); Z = "fixed" } else { if (ab + O[0].offsetHeight > a(window).height() + a(window).scrollTop()) { ab = ac.top - O[0].offsetHeight + 1 } if (ab < 0) { ab = 0 } if (aa + O[0].offsetWidth > a(window).width()) { aa = a(window).width() - O[0].offsetWidth } } O.css({ left: aa, top: ab, position: Z }) }; O.on("open.xdsoft", function (aa) { var ab = true; if (g.onShow && a.isFunction(g.onShow)) { ab = g.onShow.call(O, N.currentTime, O.data("input"), aa) } if (ab !== false) { O.show(); I(); a(window).off("resize.xdsoft", I).on("resize.xdsoft", I); if (g.closeOnWithoutClick) { a([document.body, window]).on("mousedown.xdsoft", function Z() { O.trigger("close.xdsoft"); a([document.body, window]).off("mousedown.xdsoft", Z) }) } } }).on("close.xdsoft", function (aa) { var Z = true; T.find(".xdsoft_month,.xdsoft_year").find(".xdsoft_select").hide(); if (g.onClose && a.isFunction(g.onClose)) { Z = g.onClose.call(O, N.currentTime, O.data("input"), aa) } if (Z !== false && !g.opened && !g.inline) { O.hide() } aa.stopPropagation() }).on("toggle.xdsoft", function (Z) { if (O.is(":visible")) { O.trigger("close.xdsoft") } else { O.trigger("open.xdsoft") } }).data("input", M); L = 0; X = 0; O.data("xdsoft_datetime", N); O.setOptions(g); function J() { var Z = false, aa; if (g.startDate) { Z = N.strToDate(g.startDate) } else { Z = g.value || ((M && M.val && M.val()) ? M.val() : ""); if (Z) { Z = N.strToDateTime(Z) } else { if (g.defaultDate) { Z = N.strToDate(g.defaultDate); if (g.defaultTime) { aa = N.strtotime(g.defaultTime); Z.setHours(aa.getHours()); Z.setMinutes(aa.getMinutes()) } } } } if (Z && N.isValidDate(Z)) { O.data("changed", true) } else { Z = "" } return Z || 0 } N.setCurrentTime(J()); M.data("xdsoft_datetimepicker", O).on("open.xdsoft focusin.xdsoft mousedown.xdsoft", function (Z) { if (M.is(":disabled") || (M.data("xdsoft_datetimepicker").is(":visible") && g.closeOnInputClick)) { return } clearTimeout(L); L = setTimeout(function () { if (M.is(":disabled")) { return } R = true; N.setCurrentTime(J()); O.trigger("open.xdsoft") }, 100) }).on("keydown.xdsoft", function (ab) { var ac = this.value, aa, Z = ab.which; if ([m].indexOf(Z) !== -1 && g.enterLikeTab) { aa = a("input:visible,textarea:visible"); O.trigger("close.xdsoft"); aa.eq(aa.index(this) + 1).focus(); return false } if ([h].indexOf(Z) !== -1) { O.trigger("close.xdsoft"); return true } }) }; s = function (D) { var E = D.data("xdsoft_datetimepicker"); if (E) { E.data("xdsoft_datetime", null); E.remove(); D.data("xdsoft_datetimepicker", null).off(".xdsoft"); a(window).off("resize.xdsoft"); a([window, document.body]).off("mousedown.xdsoft"); if (D.unmousewheel) { D.unmousewheel() } } }; a(document).off("keydown.xdsoftctrl keyup.xdsoftctrl").on("keydown.xdsoftctrl", function (D) { if (D.keyCode === l) { x = true } }).on("keyup.xdsoftctrl", function (D) { if (D.keyCode === l) { x = false } }); return this.each(function () { var D = a(this).data("xdsoft_datetimepicker"); if (D) { if (a.type(e) === "string") { switch (e) { case "show": a(this).select().focus(); D.trigger("open.xdsoft"); break; case "hide": D.trigger("close.xdsoft"); break; case "toggle": D.trigger("toggle.xdsoft"); break; case "destroy": s(a(this)); break; case "reset": this.value = this.defaultValue; if (!this.value || !D.data("xdsoft_datetime").isValidDate(Date.parseDate(this.value, g.format))) { D.data("changed", false) } D.data("xdsoft_datetime").setCurrentTime(this.value); break; case "validate": var E = D.data("input"); E.trigger("blur.xdsoft"); break } } else { D.setOptions(e) } return 0 } if (a.type(e) !== "string") { if (!g.lazyInit || g.open || g.inline) { f(a(this)) } else { j(a(this)) } } }) }; a.fn.datetimepicker.defaults = b }(jQuery)); (function () {
    /*! Copyright (c) 2013 Brandon Aaron (http://brandon.aaron.sh)
     * Licensed under the MIT License (LICENSE.txt).
     *
     * Version: 3.1.12
     *
     * Requires: jQuery 1.2.2+
     */
    !function (a) { "function" == typeof define && define.amd ? define(["jquery"], a) : "object" == typeof exports ? module.exports = a : a(jQuery) }(function (a) { function b(b) { var g = b || window.event, h = i.call(arguments, 1), j = 0, l = 0, m = 0, n = 0, o = 0, p = 0; if (b = a.event.fix(g), b.type = "mousewheel", "detail" in g && (m = -1 * g.detail), "wheelDelta" in g && (m = g.wheelDelta), "wheelDeltaY" in g && (m = g.wheelDeltaY), "wheelDeltaX" in g && (l = -1 * g.wheelDeltaX), "axis" in g && g.axis === g.HORIZONTAL_AXIS && (l = -1 * m, m = 0), j = 0 === m ? l : m, "deltaY" in g && (m = -1 * g.deltaY, j = m), "deltaX" in g && (l = g.deltaX, 0 === m && (j = -1 * l)), 0 !== m || 0 !== l) { if (1 === g.deltaMode) { var q = a.data(this, "mousewheel-line-height"); j *= q, m *= q, l *= q } else { if (2 === g.deltaMode) { var r = a.data(this, "mousewheel-page-height"); j *= r, m *= r, l *= r } } if (n = Math.max(Math.abs(m), Math.abs(l)), (!f || f > n) && (f = n, d(g, n) && (f /= 40)), d(g, n) && (j /= 40, l /= 40, m /= 40), j = Math[j >= 1 ? "floor" : "ceil"](j / f), l = Math[l >= 1 ? "floor" : "ceil"](l / f), m = Math[m >= 1 ? "floor" : "ceil"](m / f), k.settings.normalizeOffset && this.getBoundingClientRect) { var s = this.getBoundingClientRect(); o = b.clientX - s.left, p = b.clientY - s.top } return b.deltaX = l, b.deltaY = m, b.deltaFactor = f, b.offsetX = o, b.offsetY = p, b.deltaMode = 0, h.unshift(b, j, l, m), e && clearTimeout(e), e = setTimeout(c, 200), (a.event.dispatch || a.event.handle).apply(this, h) } } function c() { f = null } function d(a, b) { return k.settings.adjustOldDeltas && "mousewheel" === a.type && b % 120 === 0 } var e, f, g = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"], h = "onwheel" in document || document.documentMode >= 9 ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"], i = Array.prototype.slice; if (a.event.fixHooks) { for (var j = g.length; j;) { a.event.fixHooks[g[--j]] = a.event.mouseHooks } } var k = a.event.special.mousewheel = { version: "3.1.12", setup: function () { if (this.addEventListener) { for (var c = h.length; c;) { this.addEventListener(h[--c], b, !1) } } else { this.onmousewheel = b } a.data(this, "mousewheel-line-height", k.getLineHeight(this)), a.data(this, "mousewheel-page-height", k.getPageHeight(this)) }, teardown: function () { if (this.removeEventListener) { for (var c = h.length; c;) { this.removeEventListener(h[--c], b, !1) } } else { this.onmousewheel = null } a.removeData(this, "mousewheel-line-height"), a.removeData(this, "mousewheel-page-height") }, getLineHeight: function (b) { var c = a(b), d = c["offsetParent" in a.fn ? "offsetParent" : "parent"](); return d.length || (d = a("body")), parseInt(d.css("fontSize"), 10) || parseInt(c.css("fontSize"), 10) || 16 }, getPageHeight: function (b) { return a(b).height() }, settings: { adjustOldDeltas: !0, normalizeOffset: !0 } }; a.fn.extend({ mousewheel: function (a) { return a ? this.bind("mousewheel", a) : this.trigger("mousewheel") }, unmousewheel: function (a) { return this.unbind("mousewheel", a) } }) }); Date.parseFunctions = { count: 0 }; Date.parseRegexes = []; Date.formatFunctions = { count: 0 }; Date.prototype.dateFormat = function (b) { if (b == "unixtime") { return parseInt(this.getTime() / 1000) } if (Date.formatFunctions[b] == null) { Date.createNewFormat(b) } var a = Date.formatFunctions[b]; return this[a]() }; Date.createNewFormat = function (format) { var funcName = "format" + Date.formatFunctions.count++; Date.formatFunctions[format] = funcName; var codePrefix = "Date.prototype." + funcName + " = function() {return "; var code = ""; var special = false; var ch = ""; for (var i = 0; i < format.length; ++i) { ch = format.charAt(i); if (!special && ch == "\\") { special = true } else { if (special) { special = false; code += "'" + String.escape(ch) + "' + " } else { code += Date.getFormatCode(ch) } } } if (code.length == 0) { code = '""' } else { code = code.substring(0, code.length - 3) } eval(codePrefix + code + ";}") }; Date.getFormatCode = function (a) { switch (a) { case "d": return "String.leftPad(this.getDate(), 2, '0') + "; case "D": return "Date.dayNames[this.getDay()].substring(0, 3) + "; case "j": return "this.getDate() + "; case "l": return "Date.dayNames[this.getDay()] + "; case "S": return "this.getSuffix() + "; case "w": return "this.getDay() + "; case "z": return "this.getDayOfYear() + "; case "W": return "this.getWeekOfYear() + "; case "F": return "Date.monthNames[this.getMonth()] + "; case "m": return "String.leftPad(this.getMonth() + 1, 2, '0') + "; case "M": return "Date.monthNames[this.getMonth()].substring(0, 3) + "; case "n": return "(this.getMonth() + 1) + "; case "t": return "this.getDaysInMonth() + "; case "L": return "(this.isLeapYear() ? 1 : 0) + "; case "Y": return "this.getFullYear() + "; case "y": return "('' + this.getFullYear()).substring(2, 4) + "; case "a": return "(this.getHours() < 12 ? 'am' : 'pm') + "; case "A": return "(this.getHours() < 12 ? 'AM' : 'PM') + "; case "g": return "((this.getHours() %12) ? this.getHours() % 12 : 12) + "; case "G": return "this.getHours() + "; case "h": return "String.leftPad((this.getHours() %12) ? this.getHours() % 12 : 12, 2, '0') + "; case "H": return "String.leftPad(this.getHours(), 2, '0') + "; case "i": return "String.leftPad(this.getMinutes(), 2, '0') + "; case "s": return "String.leftPad(this.getSeconds(), 2, '0') + "; case "O": return "this.getGMTOffset() + "; case "T": return "this.getTimezone() + "; case "Z": return "(this.getTimezoneOffset() * -60) + "; default: return "'" + String.escape(a) + "' + " } }; Date.parseDate = function (a, c) { if (c == "unixtime") { return new Date(!isNaN(parseInt(a)) ? parseInt(a) * 1000 : 0) } if (Date.parseFunctions[c] == null) { Date.createParser(c) } var b = Date.parseFunctions[c]; return Date[b](a) }; Date.createParser = function (format) { var funcName = "parse" + Date.parseFunctions.count++; var regexNum = Date.parseRegexes.length; var currentGroup = 1; Date.parseFunctions[format] = funcName; var code = "Date." + funcName + " = function(input) {\nvar y = -1, m = -1, d = -1, h = -1, i = -1, s = -1, z = -1;\nvar d = new Date();\ny = d.getFullYear();\nm = d.getMonth();\nd = d.getDate();\nvar results = input.match(Date.parseRegexes[" + regexNum + "]);\nif (results && results.length > 0) {"; var regex = ""; var special = false; var ch = ""; for (var i = 0; i < format.length; ++i) { ch = format.charAt(i); if (!special && ch == "\\") { special = true } else { if (special) { special = false; regex += String.escape(ch) } else { obj = Date.formatCodeToRegex(ch, currentGroup); currentGroup += obj.g; regex += obj.s; if (obj.g && obj.c) { code += obj.c } } } } code += "if (y > 0 && z > 0){\nvar doyDate = new Date(y,0);\ndoyDate.setDate(z);\nm = doyDate.getMonth();\nd = doyDate.getDate();\n}"; code += "if (y > 0 && m >= 0 && d > 0 && h >= 0 && i >= 0 && s >= 0)\n{return new Date(y, m, d, h, i, s);}\nelse if (y > 0 && m >= 0 && d > 0 && h >= 0 && i >= 0)\n{return new Date(y, m, d, h, i);}\nelse if (y > 0 && m >= 0 && d > 0 && h >= 0)\n{return new Date(y, m, d, h);}\nelse if (y > 0 && m >= 0 && d > 0)\n{return new Date(y, m, d);}\nelse if (y > 0 && m >= 0)\n{return new Date(y, m);}\nelse if (y > 0)\n{return new Date(y);}\n}return null;}"; Date.parseRegexes[regexNum] = new RegExp("^" + regex + "$"); eval(code) }; Date.formatCodeToRegex = function (b, a) { switch (b) { case "D": return { g: 0, c: null, s: "(?:Sun|Mon|Tue|Wed|Thu|Fri|Sat)" }; case "j": case "d": return { g: 1, c: "d = parseInt(results[" + a + "], 10);\n", s: "(\\d{1,2})" }; case "l": return { g: 0, c: null, s: "(?:" + Date.dayNames.join("|") + ")" }; case "S": return { g: 0, c: null, s: "(?:st|nd|rd|th)" }; case "w": return { g: 0, c: null, s: "\\d" }; case "z": return { g: 1, c: "z = parseInt(results[" + a + "], 10);\n", s: "(\\d{1,3})" }; case "W": return { g: 0, c: null, s: "(?:\\d{2})" }; case "F": return { g: 1, c: "m = parseInt(Date.monthNumbers[results[" + a + "].substring(0, 3)], 10);\n", s: "(" + Date.monthNames.join("|") + ")" }; case "M": return { g: 1, c: "m = parseInt(Date.monthNumbers[results[" + a + "]], 10);\n", s: "(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)" }; case "n": case "m": return { g: 1, c: "m = parseInt(results[" + a + "], 10) - 1;\n", s: "(\\d{1,2})" }; case "t": return { g: 0, c: null, s: "\\d{1,2}" }; case "L": return { g: 0, c: null, s: "(?:1|0)" }; case "Y": return { g: 1, c: "y = parseInt(results[" + a + "], 10);\n", s: "(\\d{4})" }; case "y": return { g: 1, c: "var ty = parseInt(results[" + a + "], 10);\ny = ty > Date.y2kYear ? 1900 + ty : 2000 + ty;\n", s: "(\\d{1,2})" }; case "a": return { g: 1, c: "if (results[" + a + "] == 'am') {\nif (h == 12) { h = 0; }\n} else { if (h < 12) { h += 12; }}", s: "(am|pm)" }; case "A": return { g: 1, c: "if (results[" + a + "] == 'AM') {\nif (h == 12) { h = 0; }\n} else { if (h < 12) { h += 12; }}", s: "(AM|PM)" }; case "g": case "G": case "h": case "H": return { g: 1, c: "h = parseInt(results[" + a + "], 10);\n", s: "(\\d{1,2})" }; case "i": return { g: 1, c: "i = parseInt(results[" + a + "], 10);\n", s: "(\\d{2})" }; case "s": return { g: 1, c: "s = parseInt(results[" + a + "], 10);\n", s: "(\\d{2})" }; case "O": return { g: 0, c: null, s: "[+-]\\d{4}" }; case "T": return { g: 0, c: null, s: "[A-Z]{3}" }; case "Z": return { g: 0, c: null, s: "[+-]\\d{1,5}" }; default: return { g: 0, c: null, s: String.escape(b) } } }; Date.prototype.getTimezone = function () { return this.toString().replace(/^.*? ([A-Z]{3}) [0-9]{4}.*$/, "$1").replace(/^.*?\(([A-Z])[a-z]+ ([A-Z])[a-z]+ ([A-Z])[a-z]+\)$/, "$1$2$3") }; Date.prototype.getGMTOffset = function () { return (this.getTimezoneOffset() > 0 ? "-" : "+") + String.leftPad(Math.floor(Math.abs(this.getTimezoneOffset()) / 60), 2, "0") + String.leftPad(Math.abs(this.getTimezoneOffset()) % 60, 2, "0") }; Date.prototype.getDayOfYear = function () { var a = 0; Date.daysInMonth[1] = this.isLeapYear() ? 29 : 28; for (var b = 0; b < this.getMonth(); ++b) { a += Date.daysInMonth[b] } return a + this.getDate() }; Date.prototype.getWeekOfYear = function () { var b = this.getDayOfYear() + (4 - this.getDay()); var a = new Date(this.getFullYear(), 0, 1); var c = (7 - a.getDay() + 4); return String.leftPad(Math.ceil((b - c) / 7) + 1, 2, "0") }; Date.prototype.isLeapYear = function () { var a = this.getFullYear(); return ((a & 3) == 0 && (a % 100 || (a % 400 == 0 && a))) }; Date.prototype.getFirstDayOfMonth = function () { var a = (this.getDay() - (this.getDate() - 1)) % 7; return (a < 0) ? (a + 7) : a }; Date.prototype.getLastDayOfMonth = function () { var a = (this.getDay() + (Date.daysInMonth[this.getMonth()] - this.getDate())) % 7; return (a < 0) ? (a + 7) : a }; Date.prototype.getDaysInMonth = function () { Date.daysInMonth[1] = this.isLeapYear() ? 29 : 28; return Date.daysInMonth[this.getMonth()] }; Date.prototype.getSuffix = function () { switch (this.getDate()) { case 1: case 21: case 31: return "st"; case 2: case 22: return "nd"; case 3: case 23: return "rd"; default: return "th" } }; String.escape = function (a) { return a.replace(/('|\\)/g, "\\$1") }; String.leftPad = function (d, b, c) { var a = new String(d); if (c == null) { c = " " } while (a.length < b) { a = c + a } return a }; Date.daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; Date.monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]; Date.dayNames = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]; Date.y2kYear = 50; Date.monthNumbers = { Jan: 0, Feb: 1, Mar: 2, Apr: 3, May: 4, Jun: 5, Jul: 6, Aug: 7, Sep: 8, Oct: 9, Nov: 10, Dec: 11 }; Date.patterns = { ISO8601LongPattern: "Y-m-d H:i:s", ISO8601ShortPattern: "Y-m-d", ShortDatePattern: "n/j/Y", LongDatePattern: "l, F d, Y", FullDateTimePattern: "l, F d, Y g:i:s A", MonthDayPattern: "F d", ShortTimePattern: "g:i A", LongTimePattern: "g:i:s A", SortableDateTimePattern: "Y-m-d\\TH:i:s", UniversalSortableDateTimePattern: "Y-m-d H:i:sO", YearMonthPattern: "F, Y" }
}());
(function (a, b) { if (typeof define === "function" && define.amd) { define(["moment", "jquery", "exports"], function (h, g, f) { a.daterangepicker = b(a, f, h, g) }) } else { if (typeof exports !== "undefined") { var d = require("moment"); var e = (typeof window != "undefined") ? window.jQuery : undefined; if (!e) { try { e = require("jquery"); if (!e.fn) { e.fn = {} } } catch (c) { if (!e) { throw new Error("jQuery dependency not found") } } } b(a, exports, d, e) } else { a.daterangepicker = b(a, {}, a.moment || moment, (a.jQuery || a.Zepto || a.ender || a.$)) } } }(this || {}, function (b, c, e, d) { var a = function (n, t, l) { this.parentEl = "body"; this.element = d(n); this.startDate = e().startOf("day"); this.endDate = e().endOf("day"); this.minDate = false; this.maxDate = false; this.dateLimit = false; this.autoApply = false; this.singleDatePicker = false; this.showDropdowns = false; this.showWeekNumbers = false; this.timePicker = false; this.timePicker24Hour = false; this.timePickerIncrement = 1; this.timePickerSeconds = false; this.linkedCalendars = true; this.autoUpdateInput = true; this.ranges = {}; this.opens = "right"; if (this.element.hasClass("pull-right")) { this.opens = "left" } this.drops = "down"; if (this.element.hasClass("dropup")) { this.drops = "up" } this.buttonClasses = "btn btn-sm"; this.applyClass = "btn-success"; this.cancelClass = "btn-default"; this.locale = { format: "MM/DD/YYYY", separator: " - ", applyLabel: "Apply", cancelLabel: "Cancel", weekLabel: "W", customRangeLabel: "Custom Range", daysOfWeek: e.weekdaysMin(), monthNames: e.monthsShort(), firstDay: e.localeData().firstDayOfWeek() }; this.callback = function () { }; this.isShowing = false; this.leftCalendar = {}; this.rightCalendar = {}; if (typeof t !== "object" || t === null) { t = {} } t = d.extend(this.element.data(), t); if (typeof t.template !== "string") { t.template = '<div class="daterangepicker dropdown-menu"><div class="calendar left"><div class="daterangepicker_input"><input class="input-mini" type="text" name="daterangepicker_start" value="" /><i class="fa fa-calendar glyphicon glyphicon-calendar"></i><div class="calendar-time"><div></div><i class="fa fa-clock-o glyphicon glyphicon-time"></i></div></div><div class="calendar-table"></div></div><div class="calendar right"><div class="daterangepicker_input"><input class="input-mini" type="text" name="daterangepicker_end" value="" /><i class="fa fa-calendar glyphicon glyphicon-calendar"></i><div class="calendar-time"><div></div><i class="fa fa-clock-o glyphicon glyphicon-time"></i></div></div><div class="calendar-table"></div></div><div class="ranges"><div class="range_inputs"><button class="applyBtn" disabled="disabled" type="button"></button> <button class="cancelBtn" type="button"></button></div></div></div>' } this.parentEl = (t.parentEl && d(t.parentEl).length) ? d(t.parentEl) : d(this.parentEl); this.container = d(t.template).appendTo(this.parentEl); if (typeof t.locale === "object") { if (typeof t.locale.format === "string") { this.locale.format = t.locale.format } if (typeof t.locale.separator === "string") { this.locale.separator = t.locale.separator } if (typeof t.locale.daysOfWeek === "object") { this.locale.daysOfWeek = t.locale.daysOfWeek.slice() } if (typeof t.locale.monthNames === "object") { this.locale.monthNames = t.locale.monthNames.slice() } if (typeof t.locale.firstDay === "number") { this.locale.firstDay = t.locale.firstDay } if (typeof t.locale.applyLabel === "string") { this.locale.applyLabel = t.locale.applyLabel } if (typeof t.locale.cancelLabel === "string") { this.locale.cancelLabel = t.locale.cancelLabel } if (typeof t.locale.weekLabel === "string") { this.locale.weekLabel = t.locale.weekLabel } if (typeof t.locale.customRangeLabel === "string") { this.locale.customRangeLabel = t.locale.customRangeLabel } } if (typeof t.startDate === "string") { this.startDate = e(t.startDate, this.locale.format) } if (typeof t.endDate === "string") { this.endDate = e(t.endDate, this.locale.format) } if (typeof t.minDate === "string") { this.minDate = e(t.minDate, this.locale.format) } if (typeof t.maxDate === "string") { this.maxDate = e(t.maxDate, this.locale.format) } if (typeof t.startDate === "object") { this.startDate = e(t.startDate) } if (typeof t.endDate === "object") { this.endDate = e(t.endDate) } if (typeof t.minDate === "object") { this.minDate = e(t.minDate) } if (typeof t.maxDate === "object") { this.maxDate = e(t.maxDate) } if (this.minDate && this.startDate.isBefore(this.minDate)) { this.startDate = this.minDate.clone() } if (this.maxDate && this.endDate.isAfter(this.maxDate)) { this.endDate = this.maxDate.clone() } if (typeof t.applyClass === "string") { this.applyClass = t.applyClass } if (typeof t.cancelClass === "string") { this.cancelClass = t.cancelClass } if (typeof t.dateLimit === "object") { this.dateLimit = t.dateLimit } if (typeof t.opens === "string") { this.opens = t.opens } if (typeof t.drops === "string") { this.drops = t.drops } if (typeof t.showWeekNumbers === "boolean") { this.showWeekNumbers = t.showWeekNumbers } if (typeof t.buttonClasses === "string") { this.buttonClasses = t.buttonClasses } if (typeof t.buttonClasses === "object") { this.buttonClasses = t.buttonClasses.join(" ") } if (typeof t.showDropdowns === "boolean") { this.showDropdowns = t.showDropdowns } if (typeof t.singleDatePicker === "boolean") { this.singleDatePicker = t.singleDatePicker; if (this.singleDatePicker) { this.endDate = this.startDate.clone() } } if (typeof t.timePicker === "boolean") { this.timePicker = t.timePicker } if (typeof t.timePickerSeconds === "boolean") { this.timePickerSeconds = t.timePickerSeconds } if (typeof t.timePickerIncrement === "number") { this.timePickerIncrement = t.timePickerIncrement } if (typeof t.timePicker24Hour === "boolean") { this.timePicker24Hour = t.timePicker24Hour } if (typeof t.autoApply === "boolean") { this.autoApply = t.autoApply } if (typeof t.autoUpdateInput === "boolean") { this.autoUpdateInput = t.autoUpdateInput } if (typeof t.linkedCalendars === "boolean") { this.linkedCalendars = t.linkedCalendars } if (typeof t.isInvalidDate === "function") { this.isInvalidDate = t.isInvalidDate } if (typeof t.isCustomDate === "function") { this.isCustomDate = t.isCustomDate } if (this.locale.firstDay != 0) { var p = this.locale.firstDay; while (p > 0) { this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift()); p-- } } var h, m, q; if (typeof t.startDate === "undefined" && typeof t.endDate === "undefined") { if (d(this.element).is("input[type=text]")) { var j = d(this.element).val(), s = j.split(this.locale.separator); h = m = null; if (s.length == 2) { h = e(s[0], this.locale.format); m = e(s[1], this.locale.format) } else { if (this.singleDatePicker && j !== "") { h = e(j, this.locale.format); m = e(j, this.locale.format) } } if (h !== null && m !== null) { this.setStartDate(h); this.setEndDate(m) } } } if (typeof t.ranges === "object") { for (q in t.ranges) { if (typeof t.ranges[q][0] === "string") { h = e(t.ranges[q][0], this.locale.format) } else { h = e(t.ranges[q][0]) } if (typeof t.ranges[q][1] === "string") { m = e(t.ranges[q][1], this.locale.format) } else { m = e(t.ranges[q][1]) } if (this.minDate && h.isBefore(this.minDate)) { h = this.minDate.clone() } var g = this.maxDate; if (this.dateLimit && h.clone().add(this.dateLimit).isAfter(g)) { g = h.clone().add(this.dateLimit) } if (g && m.isAfter(g)) { m = g.clone() } if ((this.minDate && m.isBefore(this.minDate)) || (g && h.isAfter(g))) { continue } var k = document.createElement("textarea"); k.innerHTML = q; var i = k.value; this.ranges[i] = [h, m] } var r = "<ul>"; for (q in this.ranges) { r += "<li>" + q + "</li>" } r += "<li>" + this.locale.customRangeLabel + "</li>"; r += "</ul>"; this.container.find(".ranges").prepend(r) } if (typeof l === "function") { this.callback = l } if (!this.timePicker) { this.startDate = this.startDate.startOf("day"); this.endDate = this.endDate.endOf("day"); this.container.find(".calendar-time").hide() } if (this.timePicker && this.autoApply) { this.autoApply = false } if (this.autoApply && typeof t.ranges !== "object") { this.container.find(".ranges").hide() } else { if (this.autoApply) { this.container.find(".applyBtn, .cancelBtn").addClass("hide") } } if (this.singleDatePicker) { this.container.addClass("single"); this.container.find(".calendar.left").addClass("single"); this.container.find(".calendar.left").show(); this.container.find(".calendar.right").hide(); this.container.find(".daterangepicker_input input, .daterangepicker_input i").hide(); if (!this.timePicker) { this.container.find(".ranges").hide() } } if (typeof t.ranges === "undefined" && !this.singleDatePicker) { this.container.addClass("show-calendar") } this.container.addClass("opens" + this.opens); if (typeof t.ranges !== "undefined" && this.opens == "right") { var f = this.container.find(".ranges"); var o = f.clone(); f.remove(); this.container.find(".calendar.left").parent().prepend(o) } this.container.find(".applyBtn, .cancelBtn").addClass(this.buttonClasses); if (this.applyClass.length) { this.container.find(".applyBtn").addClass(this.applyClass) } if (this.cancelClass.length) { this.container.find(".cancelBtn").addClass(this.cancelClass) } this.container.find(".applyBtn").html(this.locale.applyLabel); this.container.find(".cancelBtn").html(this.locale.cancelLabel); this.container.find(".calendar").on("click.daterangepicker", ".prev", d.proxy(this.clickPrev, this)).on("click.daterangepicker", ".next", d.proxy(this.clickNext, this)).on("click.daterangepicker", "td.available", d.proxy(this.clickDate, this)).on("mouseenter.daterangepicker", "td.available", d.proxy(this.hoverDate, this)).on("mouseleave.daterangepicker", "td.available", d.proxy(this.updateFormInputs, this)).on("change.daterangepicker", "select.yearselect", d.proxy(this.monthOrYearChanged, this)).on("change.daterangepicker", "select.monthselect", d.proxy(this.monthOrYearChanged, this)).on("change.daterangepicker", "select.hourselect,select.minuteselect,select.secondselect,select.ampmselect", d.proxy(this.timeChanged, this)).on("click.daterangepicker", ".daterangepicker_input input", d.proxy(this.showCalendars, this)).on("change.daterangepicker", ".daterangepicker_input input", d.proxy(this.formInputsChanged, this)); this.container.find(".ranges").on("click.daterangepicker", "button.applyBtn", d.proxy(this.clickApply, this)).on("click.daterangepicker", "button.cancelBtn", d.proxy(this.clickCancel, this)).on("click.daterangepicker", "li", d.proxy(this.clickRange, this)).on("mouseenter.daterangepicker", "li", d.proxy(this.hoverRange, this)).on("mouseleave.daterangepicker", "li", d.proxy(this.updateFormInputs, this)); if (this.element.is("input")) { this.element.on({ "click.daterangepicker": d.proxy(this.show, this), "focus.daterangepicker": d.proxy(this.show, this), "keyup.daterangepicker": d.proxy(this.elementChanged, this), "keydown.daterangepicker": d.proxy(this.keydown, this) }) } else { this.element.on("click.daterangepicker", d.proxy(this.toggle, this)) } if (this.element.is("input") && !this.singleDatePicker && this.autoUpdateInput) { this.element.val(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format)); this.element.trigger("change") } else { if (this.element.is("input") && this.autoUpdateInput) { this.element.val(this.startDate.format(this.locale.format)); this.element.trigger("change") } } }; a.prototype = { constructor: a, setStartDate: function (f) { if (typeof f === "string") { this.startDate = e(f, this.locale.format) } if (typeof f === "object") { this.startDate = e(f) } if (!this.timePicker) { this.startDate = this.startDate.startOf("day") } if (this.timePicker && this.timePickerIncrement) { this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement) } if (this.minDate && this.startDate.isBefore(this.minDate)) { this.startDate = this.minDate } if (this.maxDate && this.startDate.isAfter(this.maxDate)) { this.startDate = this.maxDate } if (!this.isShowing) { this.updateElement() } this.updateMonthsInView() }, setEndDate: function (f) { if (typeof f === "string") { this.endDate = e(f, this.locale.format) } if (typeof f === "object") { this.endDate = e(f) } if (!this.timePicker) { this.endDate = this.endDate.endOf("day") } if (this.timePicker && this.timePickerIncrement) { this.endDate.minute(Math.round(this.endDate.minute() / this.timePickerIncrement) * this.timePickerIncrement) } if (this.endDate.isBefore(this.startDate)) { this.endDate = this.startDate.clone() } if (this.maxDate && this.endDate.isAfter(this.maxDate)) { this.endDate = this.maxDate } if (this.dateLimit && this.startDate.clone().add(this.dateLimit).isBefore(this.endDate)) { this.endDate = this.startDate.clone().add(this.dateLimit) } this.previousRightTime = this.endDate.clone(); if (!this.isShowing) { this.updateElement() } this.updateMonthsInView() }, isInvalidDate: function () { return false }, isCustomDate: function () { return false }, updateView: function () { if (this.timePicker) { this.renderTimePicker("left"); this.renderTimePicker("right"); if (!this.endDate) { this.container.find(".right .calendar-time select").attr("disabled", "disabled").addClass("disabled") } else { this.container.find(".right .calendar-time select").removeAttr("disabled").removeClass("disabled") } } if (this.endDate) { this.container.find('input[name="daterangepicker_end"]').removeClass("active"); this.container.find('input[name="daterangepicker_start"]').addClass("active") } else { this.container.find('input[name="daterangepicker_end"]').addClass("active"); this.container.find('input[name="daterangepicker_start"]').removeClass("active") } this.updateMonthsInView(); this.updateCalendars(); this.updateFormInputs() }, updateMonthsInView: function () { if (this.endDate) { if (!this.singleDatePicker && this.leftCalendar.month && this.rightCalendar.month && (this.startDate.format("YYYY-MM") == this.leftCalendar.month.format("YYYY-MM") || this.startDate.format("YYYY-MM") == this.rightCalendar.month.format("YYYY-MM")) && (this.endDate.format("YYYY-MM") == this.leftCalendar.month.format("YYYY-MM") || this.endDate.format("YYYY-MM") == this.rightCalendar.month.format("YYYY-MM"))) { return } this.leftCalendar.month = this.startDate.clone().date(2); if (!this.linkedCalendars && (this.endDate.month() != this.startDate.month() || this.endDate.year() != this.startDate.year())) { this.rightCalendar.month = this.endDate.clone().date(2) } else { this.rightCalendar.month = this.startDate.clone().date(2).add(1, "month") } } else { if (this.leftCalendar.month.format("YYYY-MM") != this.startDate.format("YYYY-MM") && this.rightCalendar.month.format("YYYY-MM") != this.startDate.format("YYYY-MM")) { this.leftCalendar.month = this.startDate.clone().date(2); this.rightCalendar.month = this.startDate.clone().date(2).add(1, "month") } } }, updateCalendars: function () { if (this.timePicker) { var g, m, k; if (this.endDate) { g = parseInt(this.container.find(".left .hourselect").val(), 10); m = parseInt(this.container.find(".left .minuteselect").val(), 10); k = this.timePickerSeconds ? parseInt(this.container.find(".left .secondselect").val(), 10) : 0; if (!this.timePicker24Hour) { var j = this.container.find(".left .ampmselect").val(); if (j === "PM" && g < 12) { g += 12 } if (j === "AM" && g === 12) { g = 0 } } } else { g = parseInt(this.container.find(".right .hourselect").val(), 10); m = parseInt(this.container.find(".right .minuteselect").val(), 10); k = this.timePickerSeconds ? parseInt(this.container.find(".right .secondselect").val(), 10) : 0; if (!this.timePicker24Hour) { var j = this.container.find(".right .ampmselect").val(); if (j === "PM" && g < 12) { g += 12 } if (j === "AM" && g === 12) { g = 0 } } } this.leftCalendar.month.hour(g).minute(m).second(k); this.rightCalendar.month.hour(g).minute(m).second(k) } this.renderCalendar("left"); this.renderCalendar("right"); this.container.find(".ranges li").removeClass("active"); if (this.endDate == null) { return } var f = true; var l = 0; for (var h in this.ranges) { if (this.timePicker) { if (this.startDate.isSame(this.ranges[h][0]) && this.endDate.isSame(this.ranges[h][1])) { f = false; this.chosenLabel = this.container.find(".ranges li:eq(" + l + ")").addClass("active").html(); break } } else { if (this.startDate.format("YYYY-MM-DD") == this.ranges[h][0].format("YYYY-MM-DD") && this.endDate.format("YYYY-MM-DD") == this.ranges[h][1].format("YYYY-MM-DD")) { f = false; this.chosenLabel = this.container.find(".ranges li:eq(" + l + ")").addClass("active").html(); break } } l++ } if (f) { this.chosenLabel = this.container.find(".ranges li:last").addClass("active").html(); this.showCalendars() } }, renderCalendar: function (A) { var Q = A == "left" ? this.leftCalendar : this.rightCalendar; var g = Q.month.month(); var h = Q.month.year(); var D = Q.month.hour(); var q = Q.month.minute(); var G = Q.month.second(); var k = e([h, g]).daysInMonth(); var B = e([h, g, 1]); var M = e([h, g, k]); var J = e(B).subtract(1, "month").month(); var v = e(B).subtract(1, "month").year(); var z = e([v, J]).daysInMonth(); var t = B.day(); var Q = []; Q.firstDay = B; Q.lastDay = M; for (var S = 0; S < 6; S++) { Q[S] = [] } var U = z - t + this.locale.firstDay + 1; if (U > z) { U -= 7 } if (t == this.locale.firstDay) { U = z - 6 } var p = e([v, J, U, 12, q, G]); var n, w; for (var S = 0, n = 0, w = 0; S < 42; S++, n++, p = e(p).add(24, "hour")) { if (S > 0 && n % 7 === 0) { n = 0; w++ } Q[w][n] = p.clone().hour(D).minute(q).second(G); p.hour(12); if (this.minDate && Q[w][n].format("YYYY-MM-DD") == this.minDate.format("YYYY-MM-DD") && Q[w][n].isBefore(this.minDate) && A == "left") { Q[w][n] = this.minDate.clone() } if (this.maxDate && Q[w][n].format("YYYY-MM-DD") == this.maxDate.format("YYYY-MM-DD") && Q[w][n].isAfter(this.maxDate) && A == "right") { Q[w][n] = this.maxDate.clone() } } if (A == "left") { this.leftCalendar.calendar = Q } else { this.rightCalendar.calendar = Q } var j = A == "left" ? this.minDate : this.startDate; var s = this.maxDate; var H = A == "left" ? this.startDate : this.endDate; var I = '<table class="table-condensed">'; I += "<thead>"; I += "<tr>"; if (this.showWeekNumbers) { I += "<th></th>" } if ((!j || j.isBefore(Q.firstDay)) && (!this.linkedCalendars || A == "left")) { I += '<th class="prev available"><i class="fa fa-chevron-left glyphicon glyphicon-chevron-left"></i></th>' } else { I += "<th></th>" } var N = this.locale.monthNames[Q[1][1].month()] + Q[1][1].format(" YYYY"); if (this.showDropdowns) { var F = Q[1][1].month(); var u = Q[1][1].year(); var E = (s && s.year()) || (u + 5); var x = (j && j.year()) || (u - 50); var L = u == x; var P = u == E; var r = '<select class="monthselect">'; for (var R = 0; R < 12; R++) { if ((!L || R >= j.month()) && (!P || R <= s.month())) { r += "<option value='" + R + "'" + (R === F ? " selected='selected'" : "") + ">" + this.locale.monthNames[R] + "</option>" } else { r += "<option value='" + R + "'" + (R === F ? " selected='selected'" : "") + " disabled='disabled'>" + this.locale.monthNames[R] + "</option>" } } r += "</select>"; var f = '<select class="yearselect">'; for (var O = x; O <= E; O++) { f += '<option value="' + O + '"' + (O === u ? ' selected="selected"' : "") + ">" + O + "</option>" } f += "</select>"; N = r + f } I += '<th colspan="5" class="month">' + N + "</th>"; if ((!s || s.isAfter(Q.lastDay)) && (!this.linkedCalendars || A == "right" || this.singleDatePicker)) { I += '<th class="next available"><i class="fa fa-chevron-right glyphicon glyphicon-chevron-right"></i></th>' } else { I += "<th></th>" } I += "</tr>"; I += "<tr>"; if (this.showWeekNumbers) { I += '<th class="week">' + this.locale.weekLabel + "</th>" } d.each(this.locale.daysOfWeek, function (m, i) { I += "<th>" + i + "</th>" }); I += "</tr>"; I += "</thead>"; I += "<tbody>"; if (this.endDate == null && this.dateLimit) { var T = this.startDate.clone().add(this.dateLimit).endOf("day"); if (!s || T.isBefore(s)) { s = T } } for (var w = 0; w < 6; w++) { I += "<tr>"; if (this.showWeekNumbers) { I += '<td class="week">' + Q[w][0].week() + "</td>" } for (var n = 0; n < 7; n++) { var l = []; if (Q[w][n].isSame(new Date(), "day")) { l.push("today") } if (Q[w][n].isoWeekday() > 5) { l.push("weekend") } if (Q[w][n].month() != Q[1][1].month()) { l.push("off", "othermonth") } if (this.minDate && Q[w][n].isBefore(this.minDate, "day")) { l.push("off", "disabled", "before_min") } if (s && Q[w][n].isAfter(s, "day")) { l.push("off", "disabled", "after_max") } if (this.isInvalidDate(Q[w][n])) { l.push("off", "disabled", "booked") } if (Q[w][n].format("YYYY-MM-DD") == this.startDate.format("YYYY-MM-DD")) { l.push("active", "start-date") } if (this.endDate != null && Q[w][n].format("YYYY-MM-DD") == this.endDate.format("YYYY-MM-DD")) { l.push("active", "end-date") } if (this.endDate != null && Q[w][n] > this.startDate && Q[w][n] < this.endDate) { l.push("in-range") } var C = this.isCustomDate(Q[w][n]); if (C !== false) { if (typeof C === "string") { l.push(C) } else { Array.prototype.push.apply(l, C) } } var o = "", K = false; for (var S = 0; S < l.length; S++) { o += l[S] + " "; if (l[S] == "disabled") { K = true } } if (!K) { o += "available" } I += '<td data-date="' + Q[w][n].format("YYYY-MM-DD") + '" class="' + o.replace(/^\s+|\s+$/g, "") + '" data-title="r' + w + "c" + n + '"><span>' + Q[w][n].date() + "</span></td>" } I += "</tr>" } I += "</tbody>"; I += "</table>"; this.container.find(".calendar." + A + " .calendar-table").html(I); d(document).trigger("calendar.updated") }, renderTimePicker: function (t) { var s, q, p, g = this.maxDate; if (this.dateLimit && (!this.maxDate || this.startDate.clone().add(this.dateLimit).isAfter(this.maxDate))) { g = this.startDate.clone().add(this.dateLimit) } if (t == "left") { q = this.startDate.clone(); p = this.minDate } else { if (t == "right") { q = this.endDate ? this.endDate.clone() : this.previousRightTime.clone(); p = this.startDate; var v = this.container.find(".calendar.right .calendar-time div"); if (v.html() != "") { q.hour(v.find(".hourselect option:selected").val() || q.hour()); q.minute(v.find(".minuteselect option:selected").val() || q.minute()); q.second(v.find(".secondselect option:selected").val() || q.second()); if (!this.timePicker24Hour) { var u = v.find(".ampmselect option:selected").val(); if (u === "PM" && q.hour() < 12) { q.hour(q.hour() + 12) } if (u === "AM" && q.hour() === 12) { q.hour(0) } } if (q.isBefore(this.startDate)) { q = this.startDate.clone() } if (q.isAfter(g)) { q = g.clone() } } } } s = '<select class="hourselect">'; var h = this.timePicker24Hour ? 0 : 1; var n = this.timePicker24Hour ? 23 : 12; for (var r = h; r <= n; r++) { var j = r; if (!this.timePicker24Hour) { j = q.hour() >= 12 ? (r == 12 ? 12 : r + 12) : (r == 12 ? 0 : r) } var l = q.clone().hour(j); var o = false; if (p && l.minute(59).isBefore(p)) { o = true } if (g && l.minute(0).isAfter(g)) { o = true } if (j == q.hour() && !o) { s += '<option value="' + r + '" selected="selected">' + r + "</option>" } else { if (o) { s += '<option value="' + r + '" disabled="disabled" class="disabled">' + r + "</option>" } else { s += '<option value="' + r + '">' + r + "</option>" } } } s += "</select> "; s += ': <select class="minuteselect">'; for (var r = 0; r < 60; r += this.timePickerIncrement) { var f = r < 10 ? "0" + r : r; var l = q.clone().minute(r); var o = false; if (p && l.second(59).isBefore(p)) { o = true } if (g && l.second(0).isAfter(g)) { o = true } if (q.minute() == r && !o) { s += '<option value="' + r + '" selected="selected">' + f + "</option>" } else { if (o) { s += '<option value="' + r + '" disabled="disabled" class="disabled">' + f + "</option>" } else { s += '<option value="' + r + '">' + f + "</option>" } } } s += "</select> "; if (this.timePickerSeconds) { s += ': <select class="secondselect">'; for (var r = 0; r < 60; r++) { var f = r < 10 ? "0" + r : r; var l = q.clone().second(r); var o = false; if (p && l.isBefore(p)) { o = true } if (g && l.isAfter(g)) { o = true } if (q.second() == r && !o) { s += '<option value="' + r + '" selected="selected">' + f + "</option>" } else { if (o) { s += '<option value="' + r + '" disabled="disabled" class="disabled">' + f + "</option>" } else { s += '<option value="' + r + '">' + f + "</option>" } } } s += "</select> " } if (!this.timePicker24Hour) { s += '<select class="ampmselect">'; var k = ""; var m = ""; if (p && q.clone().hour(12).minute(0).second(0).isBefore(p)) { k = ' disabled="disabled" class="disabled"' } if (g && q.clone().hour(0).minute(0).second(0).isAfter(g)) { m = ' disabled="disabled" class="disabled"' } if (q.hour() >= 12) { s += '<option value="AM"' + k + '>AM</option><option value="PM" selected="selected"' + m + ">PM</option>" } else { s += '<option value="AM" selected="selected"' + k + '>AM</option><option value="PM"' + m + ">PM</option>" } s += "</select>" } this.container.find(".calendar." + t + " .calendar-time div").html(s) }, updateFormInputs: function () { if (this.container.find("input[name=daterangepicker_start]").is(":focus") || this.container.find("input[name=daterangepicker_end]").is(":focus")) { return } this.container.find("input[name=daterangepicker_start]").val(this.startDate.format(this.locale.format)); if (this.endDate) { this.container.find("input[name=daterangepicker_end]").val(this.endDate.format(this.locale.format)) } if (this.singleDatePicker || (this.endDate && (this.startDate.isBefore(this.endDate) || this.startDate.isSame(this.endDate)))) { this.container.find("button.applyBtn").removeAttr("disabled") } else { this.container.find("button.applyBtn").attr("disabled", "disabled") } }, move: function () { var f = { top: 0, left: 0 }, h; var g = d(window).width(); if (!this.parentEl.is("body")) { f = { top: this.parentEl.offset().top - this.parentEl.scrollTop(), left: this.parentEl.offset().left - this.parentEl.scrollLeft() }; g = this.parentEl[0].clientWidth + this.parentEl.offset().left } if (this.drops == "up") { h = this.element.offset().top - this.container.outerHeight() - f.top } else { h = this.element.offset().top + this.element.outerHeight() - f.top } this.container[this.drops == "up" ? "addClass" : "removeClass"]("dropup"); if (this.opens == "left") { this.container.css({ top: h, right: g - this.element.offset().left - this.element.outerWidth(), left: "auto" }); if (this.container.offset().left < 0) { this.container.css({ right: "auto", left: 9 }) } } else { if (this.opens == "center") { this.container.css({ top: h, left: this.element.offset().left - f.left + this.element.outerWidth() / 2 - this.container.outerWidth() / 2, right: "auto" }); if (this.container.offset().left < 0) { this.container.css({ right: "auto", left: 9 }) } } else { this.container.css({ top: h, left: this.element.offset().left - f.left, right: "auto" }); if (this.container.offset().left + this.container.outerWidth() > d(window).width()) { this.container.css({ left: "auto", right: 0 }) } } } }, show: function (f) { if (this.isShowing) { return } this._outsideClickProxy = d.proxy(function (g) { this.outsideClick(g) }, this); d(document).on("mousedown.daterangepicker", this._outsideClickProxy).on("touchend.daterangepicker", this._outsideClickProxy).on("click.daterangepicker", "[data-toggle=dropdown]", this._outsideClickProxy).on("focusin.daterangepicker", this._outsideClickProxy); d(window).on("resize.daterangepicker", d.proxy(function (g) { this.move(g) }, this)); this.oldStartDate = this.startDate.clone(); this.oldEndDate = this.endDate.clone(); this.previousRightTime = this.endDate.clone(); this.updateView(); this.container.show(); this.move(); this.element.trigger("show.daterangepicker", this); this.isShowing = true }, hide: function (f) { if (!this.isShowing) { return } if (!this.endDate) { this.startDate = this.oldStartDate.clone(); this.endDate = this.oldEndDate.clone() } if (!this.startDate.isSame(this.oldStartDate) || !this.endDate.isSame(this.oldEndDate)) { this.callback(this.startDate, this.endDate, this.chosenLabel) } this.updateElement(); d(document).off(".daterangepicker"); d(window).off(".daterangepicker"); this.container.hide(); this.element.trigger("hide.daterangepicker", this); this.isShowing = false }, toggle: function (f) { if (this.isShowing) { this.hide() } else { this.show() } }, outsideClick: function (g) { var f = d(g.target); if (g.type == "focusin" || f.closest(this.element).length || f.closest(this.container).length || f.closest(".calendar-table").length) { return } this.hide() }, showCalendars: function () { this.container.addClass("show-calendar"); this.move(); this.element.trigger("showCalendar.daterangepicker", this) }, hideCalendars: function () { this.container.removeClass("show-calendar"); this.element.trigger("hideCalendar.daterangepicker", this) }, hoverRange: function (h) { if (this.container.find("input[name=daterangepicker_start]").is(":focus") || this.container.find("input[name=daterangepicker_end]").is(":focus")) { return } var f = h.target.innerHTML; if (f == this.locale.customRangeLabel) { this.updateView() } else { var g = this.ranges[f]; this.container.find("input[name=daterangepicker_start]").val(g[0].format(this.locale.format)); this.container.find("input[name=daterangepicker_end]").val(g[1].format(this.locale.format)) } }, clickRange: function (h) { var f = h.target.innerHTML; this.chosenLabel = f; if (f == this.locale.customRangeLabel) { this.showCalendars() } else { var g = this.ranges[f]; this.startDate = g[0]; this.endDate = g[1]; if (!this.timePicker) { this.startDate.startOf("day"); this.endDate.endOf("day") } this.hideCalendars(); this.clickApply() } }, clickPrev: function (g) { var f = d(g.target).parents(".calendar"); if (f.hasClass("left")) { this.leftCalendar.month.subtract(1, "month"); if (this.linkedCalendars) { this.rightCalendar.month.subtract(1, "month") } } else { this.rightCalendar.month.subtract(1, "month") } this.updateCalendars() }, clickNext: function (g) { var f = d(g.target).parents(".calendar"); if (f.hasClass("left")) { this.leftCalendar.month.add(1, "month") } else { this.rightCalendar.month.add(1, "month"); if (this.linkedCalendars) { this.leftCalendar.month.add(1, "month") } } this.updateCalendars() }, hoverDate: function (k) { if (this.container.find("input[name=daterangepicker_start]").is(":focus") || this.container.find("input[name=daterangepicker_end]").is(":focus")) { return } if (!d(k.target).hasClass("available")) { return } var m = d(k.target).attr("data-title"); var n = m.substr(1, 1); var h = m.substr(3, 1); var f = d(k.target).parents(".calendar"); var i = f.hasClass("left") ? this.leftCalendar.calendar[n][h] : this.rightCalendar.calendar[n][h]; if (this.endDate) { this.container.find("input[name=daterangepicker_start]").val(i.format(this.locale.format)) } else { this.container.find("input[name=daterangepicker_end]").val(i.format(this.locale.format)) } var j = this.leftCalendar; var l = this.rightCalendar; var g = this.startDate; if (!this.endDate) { this.container.find(".calendar td").each(function (p, q) { if (d(q).hasClass("week")) { return } var u = d(q).attr("data-title"); var t = u.substr(1, 1); var o = u.substr(3, 1); var s = d(q).parents(".calendar"); var r = s.hasClass("left") ? j.calendar[t][o] : l.calendar[t][o]; if (r.isAfter(g) && r.isBefore(i)) { d(q).addClass("in-range") } else { d(q).removeClass("in-range") } }) } }, clickDate: function (l) { if (!d(l.target).parent().hasClass("available")) { return } var n = d(l.target).parent().attr("data-title"); var o = n.substr(1, 1); var h = n.substr(3, 1); var f = d(l.target).parents(".calendar"); var i = f.hasClass("left") ? this.leftCalendar.calendar[o][h] : this.rightCalendar.calendar[o][h]; if (this.endDate || i.isBefore(this.startDate, "day")) { if (this.timePicker) { var k = parseInt(this.container.find(".left .hourselect").val(), 10); if (!this.timePicker24Hour) { var m = this.container.find(".left .ampmselect").val(); if (m === "PM" && k < 12) { k += 12 } if (m === "AM" && k === 12) { k = 0 } } var j = parseInt(this.container.find(".left .minuteselect").val(), 10); var g = this.timePickerSeconds ? parseInt(this.container.find(".left .secondselect").val(), 10) : 0; i = i.clone().hour(k).minute(j).second(g) } this.endDate = null; this.setStartDate(i.clone()) } else { if (!this.endDate && i.isBefore(this.startDate)) { this.setEndDate(this.startDate.clone()) } else { if (this.timePicker) { var k = parseInt(this.container.find(".right .hourselect").val(), 10); if (!this.timePicker24Hour) { var m = this.container.find(".right .ampmselect").val(); if (m === "PM" && k < 12) { k += 12 } if (m === "AM" && k === 12) { k = 0 } } var j = parseInt(this.container.find(".right .minuteselect").val(), 10); var g = this.timePickerSeconds ? parseInt(this.container.find(".right .secondselect").val(), 10) : 0; i = i.clone().hour(k).minute(j).second(g) } this.setEndDate(i.clone()); if (this.autoApply) { this.clickApply() } } } if (this.singleDatePicker) { this.setEndDate(this.startDate); if (!this.timePicker) { this.clickApply() } } this.updateView() }, clickApply: function (f) { this.hide(); this.element.trigger("apply.daterangepicker", this) }, clickCancel: function (f) { this.startDate = this.oldStartDate; this.endDate = this.oldEndDate; this.hide(); this.element.trigger("cancel.daterangepicker", this) }, monthOrYearChanged: function (i) { var k = d(i.target).closest(".calendar").hasClass("left"), j = k ? "left" : "right", h = this.container.find(".calendar." + j); var g = parseInt(h.find(".monthselect").val(), 10); var f = h.find(".yearselect").val(); if (!k) { if (f < this.startDate.year() || (f == this.startDate.year() && g < this.startDate.month())) { g = this.startDate.month(); f = this.startDate.year() } } if (this.minDate) { if (f < this.minDate.year() || (f == this.minDate.year() && g < this.minDate.month())) { g = this.minDate.month(); f = this.minDate.year() } } if (this.maxDate) { if (f > this.maxDate.year() || (f == this.maxDate.year() && g > this.maxDate.month())) { g = this.maxDate.month(); f = this.maxDate.year() } } if (k) { this.leftCalendar.month.month(g).year(f); if (this.linkedCalendars) { this.rightCalendar.month = this.leftCalendar.month.clone().add(1, "month") } } else { this.rightCalendar.month.month(g).year(f); if (this.linkedCalendars) { this.leftCalendar.month = this.rightCalendar.month.clone().subtract(1, "month") } } this.updateCalendars() }, timeChanged: function (l) { var f = d(l.target).closest(".calendar"), n = f.hasClass("left"); var k = parseInt(f.find(".hourselect").val(), 10); var i = parseInt(f.find(".minuteselect").val(), 10); var h = this.timePickerSeconds ? parseInt(f.find(".secondselect").val(), 10) : 0; if (!this.timePicker24Hour) { var m = f.find(".ampmselect").val(); if (m === "PM" && k < 12) { k += 12 } if (m === "AM" && k === 12) { k = 0 } } if (n) { var g = this.startDate.clone(); g.hour(k); g.minute(i); g.second(h); this.setStartDate(g); if (this.singleDatePicker) { this.endDate = this.startDate.clone() } else { if (this.endDate && this.endDate.format("YYYY-MM-DD") == g.format("YYYY-MM-DD") && this.endDate.isBefore(g)) { this.setEndDate(g.clone()) } } } else { if (this.endDate) { var j = this.endDate.clone(); j.hour(k); j.minute(i); j.second(h); this.setEndDate(j) } } this.updateCalendars(); this.updateFormInputs(); this.renderTimePicker("left"); this.renderTimePicker("right") }, formInputsChanged: function (h) { var g = d(h.target).closest(".calendar").hasClass("right"); var i = e(this.container.find('input[name="daterangepicker_start"]').val(), this.locale.format); var f = e(this.container.find('input[name="daterangepicker_end"]').val(), this.locale.format); if (i.isValid() && f.isValid()) { if (g && f.isBefore(i)) { i = f.clone() } this.setStartDate(i); this.setEndDate(f); if (g) { this.container.find('input[name="daterangepicker_start"]').val(this.startDate.format(this.locale.format)) } else { this.container.find('input[name="daterangepicker_end"]').val(this.endDate.format(this.locale.format)) } } this.updateCalendars(); if (this.timePicker) { this.renderTimePicker("left"); this.renderTimePicker("right") } }, elementChanged: function () { if (!this.element.is("input")) { return } if (!this.element.val().length) { return } if (this.element.val().length < this.locale.format.length) { return } var g = this.element.val().split(this.locale.separator), h = null, f = null; if (g.length === 2) { h = e(g[0], this.locale.format); f = e(g[1], this.locale.format) } if (this.singleDatePicker || h === null || f === null) { h = e(this.element.val(), this.locale.format); f = h } if (!h.isValid() || !f.isValid()) { return } this.setStartDate(h); this.setEndDate(f); this.updateView() }, keydown: function (f) { if ((f.keyCode === 9) || (f.keyCode === 13)) { this.hide() } }, updateElement: function () { if (this.element.is("input") && !this.singleDatePicker && this.autoUpdateInput) { this.element.val(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format)); this.element.trigger("change") } else { if (this.element.is("input") && this.autoUpdateInput) { this.element.val(this.startDate.format(this.locale.format)); this.element.trigger("change") } } }, remove: function () { this.container.remove(); this.element.off(".daterangepicker"); this.element.removeData() } }; d.fn.daterangepicker = function (f, g) { this.each(function () { var h = d(this); if (h.data("daterangepicker")) { h.data("daterangepicker").remove() } h.data("daterangepicker", new a(h, f, g)) }); return this }; return a }));/*!
    SlickNav Responsive Mobile Menu v1.0.1
    (c) 2014 Josh Cope
    licensed under MIT
*/
; (function ($, document, window) {
    var
        // default settings object.
        defaults = {
            label: 'MENU',
            duplicate: true,
            duration: 200,
            easingOpen: 'swing',
            easingClose: 'swing',
            closedSymbol: '&#9658;',
            openedSymbol: '&#9660;',
            prependTo: 'body',
            parentTag: 'a',
            closeOnClick: false,
            allowParentLinks: false,
            nestedParentLinks: true,
            showChildren: false,
            init: function () { },
            open: function () { },
            close: function () { }
        },
        mobileMenu = 'slicknav',
        prefix = 'slicknav';

    function Plugin(element, options) {
        this.element = element;

        // jQuery has an extend method which merges the contents of two or
        // more objects, storing the result in the first object. The first object
        // is generally empty as we don't want to alter the default options for
        // future instances of the plugin
        this.settings = $.extend({}, defaults, options);

        this._defaults = defaults;
        this._name = mobileMenu;

        this.init();
    }

    Plugin.prototype.init = function () {
        var $this = this,
            menu = $(this.element),
            settings = this.settings,
            iconClass,
            menuBar;

        // clone menu if needed
        if (settings.duplicate) {
            $this.mobileNav = menu.clone();
            //remove ids from clone to prevent css issues
            $this.mobileNav.removeAttr('id');
            $this.mobileNav.find('*').each(function (i, e) {
                $(e).removeAttr('id');
            });
        } else {
            $this.mobileNav = menu;
        }

        // styling class for the button
        iconClass = prefix + '_icon';

        if (settings.label === '') {
            iconClass += ' ' + prefix + '_no-text';
        }

        if (settings.parentTag == 'a') {
            settings.parentTag = 'a href="#"';
        }

        // create menu bar
        $this.mobileNav.attr('class', prefix + '_nav');
        menuBar = $('<div class="' + prefix + '_menu"></div>');
        $this.btn = $(
            ['<' + settings.parentTag + ' aria-haspopup="true" tabindex="0" class="' + prefix + '_btn ' + prefix + '_collapsed">',
            '<span class="' + prefix + '_menutxt">' + settings.label + '</span>',
            '<span class="' + iconClass + '">',
                '<img src="/assets/img/burger.png">',
                '</span>',
            '</' + settings.parentTag + '>'
            ].join('')
        );
        $(menuBar).append($this.btn);
        $(settings.prependTo).prepend(menuBar);
        menuBar.append($this.mobileNav);

        // iterate over structure adding additional structure
        var items = $this.mobileNav.find('li');
        $(items).each(function () {
            var item = $(this),
                data = {};
            data.children = item.children('ul').attr('role', 'menu');
            item.data('menu', data);

            // if a list item has a nested menu
            if (data.children.length > 0) {

                // select all text before the child menu
                // check for anchors

                var a = item.contents(),
                    containsAnchor = false;
                nodes = [];

                $(a).each(function () {
                    if (!$(this).is('ul')) {
                        nodes.push(this);
                    } else {
                        return false;
                    }

                    if ($(this).is("a")) {
                        containsAnchor = true;
                    }
                });

                var wrapElement = $(
                    '<' + settings.parentTag + ' role="menuitem" aria-haspopup="true" tabindex="-1" class="' + prefix + '_item"/>'
                );

                // wrap item text with tag and add classes unless we are separating parent links
                if ((!settings.allowParentLinks || settings.nestedParentLinks) || !containsAnchor) {
                    var $wrap = $(nodes).wrapAll(wrapElement).parent();
                    $wrap.addClass(prefix + '_row');
                } else
                    $(nodes).wrapAll('<span class="' + prefix + '_parent-link ' + prefix + '_row"/>').parent();

                item.addClass(prefix + '_collapsed');
                item.addClass(prefix + '_parent');

                // create parent arrow. wrap with link if parent links and separating
                var arrowElement = $('<span class="' + prefix + '_arrow">' + settings.closedSymbol + '</span>');

                if (settings.allowParentLinks && !settings.nestedParentLinks && containsAnchor)
                    arrowElement = arrowElement.wrap(wrapElement).parent();

                //append arrow
                $(nodes).last().after(arrowElement);


            } else if (item.children().length === 0) {
                item.addClass(prefix + '_txtnode');
            }

            // accessibility for links
            item.children('a').attr('role', 'menuitem').click(function (event) {
                //Ensure that it's not a parent
                if (settings.closeOnClick && !$(event.target).parent().closest('li').hasClass(prefix + '_parent')) {
                    //Emulate menu close if set
                    $($this.btn).click();
                }
            });

            //also close on click if parent links are set
            if (settings.closeOnClick && settings.allowParentLinks) {
                item.children('a').children('a').click(function (event) {
                    //Emulate menu close
                    $($this.btn).click();
                });

                item.find('.' + prefix + '_parent-link a:not(.' + prefix + '_item)').click(function (event) {
                    //Emulate menu close
                    $($this.btn).click();
                });
            }
        });

        // structure is in place, now hide appropriate items
        $(items).each(function () {
            var data = $(this).data('menu');
            if (!settings.showChildren) {
                $this._visibilityToggle(data.children, null, false, null, true);
            }
        });

        // finally toggle entire menu
        $this._visibilityToggle($this.mobileNav, null, false, 'init', true);

        // accessibility for menu button
        $this.mobileNav.attr('role', 'menu');

        // outline prevention when using mouse
        $(document).mousedown(function () {
            $this._outlines(false);
        });

        $(document).keyup(function () {
            $this._outlines(true);
        });

        // menu button click
        $($this.btn).click(function (e) {
            e.preventDefault();
            $this._menuToggle();
        });

        // click on menu parent
        $this.mobileNav.on('click', '.' + prefix + '_item', function (e) {
            e.preventDefault();
            $this._itemClick($(this));
        });

        // check for enter key on menu button and menu parents
        $($this.btn).keydown(function (e) {
            var ev = e || event;
            if (ev.keyCode == 13) {
                e.preventDefault();
                $this._menuToggle();
            }
        });

        $this.mobileNav.on('keydown', '.' + prefix + '_item', function (e) {
            var ev = e || event;
            if (ev.keyCode == 13) {
                e.preventDefault();
                $this._itemClick($(e.target));
            }
        });

        // allow links clickable within parent tags if set
        if (settings.allowParentLinks && settings.nestedParentLinks) {
            $('.' + prefix + '_item a').click(function (e) {
                e.stopImmediatePropagation();
            });
        }
    };

    //toggle menu
    Plugin.prototype._menuToggle = function (el) {
        var $this = this;
        var btn = $this.btn;
        var mobileNav = $this.mobileNav;

        if (btn.hasClass(prefix + '_collapsed')) {
            btn.removeClass(prefix + '_collapsed');
            btn.addClass(prefix + '_open');
        } else {
            btn.removeClass(prefix + '_open');
            btn.addClass(prefix + '_collapsed');
        }
        btn.addClass(prefix + '_animating');
        $this._visibilityToggle(mobileNav, btn.parent(), true, btn);
    };

    // toggle clicked items
    Plugin.prototype._itemClick = function (el) {
        var $this = this;
        var settings = $this.settings;
        var data = el.data('menu');
        if (!data) {
            data = {};
            data.arrow = el.children('.' + prefix + '_arrow');
            data.ul = el.next('ul');
            data.parent = el.parent();
            //Separated parent link structure
            if (data.parent.hasClass(prefix + '_parent-link')) {
                data.parent = el.parent().parent();
                data.ul = el.parent().next('ul');
            }
            el.data('menu', data);
        }
        if (data.parent.hasClass(prefix + '_collapsed')) {
            data.arrow.html(settings.openedSymbol);
            data.parent.removeClass(prefix + '_collapsed');
            data.parent.addClass(prefix + '_open');
            data.parent.addClass(prefix + '_animating');
            $this._visibilityToggle(data.ul, data.parent, true, el);
        } else {
            data.arrow.html(settings.closedSymbol);
            data.parent.addClass(prefix + '_collapsed');
            data.parent.removeClass(prefix + '_open');
            data.parent.addClass(prefix + '_animating');
            $this._visibilityToggle(data.ul, data.parent, true, el);
        }
    };

    // toggle actual visibility and accessibility tags
    Plugin.prototype._visibilityToggle = function (el, parent, animate, trigger, init) {
        var $this = this;
        var settings = $this.settings;
        var items = $this._getActionItems(el);
        var duration = 0;
        if (animate) {
            duration = settings.duration;
        }

        if (el.hasClass(prefix + '_hidden')) {
            el.removeClass(prefix + '_hidden');
            el.slideDown(duration, settings.easingOpen, function () {

                $(trigger).removeClass(prefix + '_animating');
                $(parent).removeClass(prefix + '_animating');

                //Fire open callback
                if (!init) {
                    settings.open(trigger);
                }
            });
            el.attr('aria-hidden', 'false');
            items.attr('tabindex', '0');
            $this._setVisAttr(el, false);
        } else {
            el.addClass(prefix + '_hidden');
            el.slideUp(duration, this.settings.easingClose, function () {
                el.attr('aria-hidden', 'true');
                items.attr('tabindex', '-1');
                $this._setVisAttr(el, true);
                el.hide(); //jQuery 1.7 bug fix

                $(trigger).removeClass(prefix + '_animating');
                $(parent).removeClass(prefix + '_animating');

                //Fire init or close callback
                if (!init) {
                    settings.close(trigger);
                }
                else if (trigger == 'init') {
                    settings.init();
                }
            });
        }
    };

    // set attributes of element and children based on visibility
    Plugin.prototype._setVisAttr = function (el, hidden) {
        var $this = this;

        // select all parents that aren't hidden
        var nonHidden = el.children('li').children('ul').not('.' + prefix + '_hidden');

        // iterate over all items setting appropriate tags
        if (!hidden) {
            nonHidden.each(function () {
                var ul = $(this);
                ul.attr('aria-hidden', 'false');
                var items = $this._getActionItems(ul);
                items.attr('tabindex', '0');
                $this._setVisAttr(ul, hidden);
            });
        } else {
            nonHidden.each(function () {
                var ul = $(this);
                ul.attr('aria-hidden', 'true');
                var items = $this._getActionItems(ul);
                items.attr('tabindex', '-1');
                $this._setVisAttr(ul, hidden);
            });
        }
    };

    // get all 1st level items that are clickable
    Plugin.prototype._getActionItems = function (el) {
        var data = el.data("menu");
        if (!data) {
            data = {};
            var items = el.children('li');
            var anchors = items.find('a');
            data.links = anchors.add(items.find('.' + prefix + '_item'));
            el.data('menu', data);
        }
        return data.links;
    };

    Plugin.prototype._outlines = function (state) {
        if (!state) {
            $('.' + prefix + '_item, .' + prefix + '_btn').css('outline', 'none');
        } else {
            $('.' + prefix + '_item, .' + prefix + '_btn').css('outline', '');
        }
    };

    Plugin.prototype.toggle = function () {
        var $this = this;
        $this._menuToggle();
    };

    Plugin.prototype.open = function () {
        var $this = this;
        if ($this.btn.hasClass(prefix + '_collapsed')) {
            $this._menuToggle();
        }
    };

    Plugin.prototype.close = function () {
        var $this = this;
        if ($this.btn.hasClass(prefix + '_open')) {
            $this._menuToggle();
        }
    };

    $.fn[mobileMenu] = function (options) {
        var args = arguments;

        // Is the first parameter an object (options), or was omitted, instantiate a new instance
        if (options === undefined || typeof options === 'object') {
            return this.each(function () {

                // Only allow the plugin to be instantiated once due to methods
                if (!$.data(this, 'plugin_' + mobileMenu)) {

                    // if it has no instance, create a new one, pass options to our plugin constructor,
                    // and store the plugin instance in the elements jQuery data object.
                    $.data(this, 'plugin_' + mobileMenu, new Plugin(this, options));
                }
            });

            // If is a string and doesn't start with an underscore or 'init' function, treat this as a call to a public method.
        } else if (typeof options === 'string' && options[0] !== '_' && options !== 'init') {

            // Cache the method call to make it possible to return a value
            var returns;

            this.each(function () {
                var instance = $.data(this, 'plugin_' + mobileMenu);

                // Tests that there's already a plugin-instance and checks that the requested public method exists
                if (instance instanceof Plugin && typeof instance[options] === 'function') {

                    // Call the method of our plugin instance, and pass it the supplied arguments.
                    returns = instance[options].apply(instance, Array.prototype.slice.call(args, 1));
                }
            });

            // If the earlier cached method gives a value back return the value, otherwise return this to preserve chainability.
            return returns !== undefined ? returns : this;
        }
    };
}(jQuery, document, window));/*! jQuery Validation Plugin - v1.16.0 - 12/2/2016
 * http://jqueryvalidation.org/
 * Copyright (c) 2016 Jörn Zaefferer; Licensed MIT */
!function (a) { "function" == typeof define && define.amd ? define(["jquery"], a) : "object" == typeof module && module.exports ? module.exports = a(require("jquery")) : a(jQuery) }(function (a) { a.extend(a.fn, { validate: function (b) { if (!this.length) return void (b && b.debug && window.console && console.warn("Nothing selected, can't validate, returning nothing.")); var c = a.data(this[0], "validator"); return c ? c : (this.attr("novalidate", "novalidate"), c = new a.validator(b, this[0]), a.data(this[0], "validator", c), c.settings.onsubmit && (this.on("click.validate", ":submit", function (b) { c.settings.submitHandler && (c.submitButton = b.target), a(this).hasClass("cancel") && (c.cancelSubmit = !0), void 0 !== a(this).attr("formnovalidate") && (c.cancelSubmit = !0) }), this.on("submit.validate", function (b) { function d() { var d, e; return !c.settings.submitHandler || (c.submitButton && (d = a("<input type='hidden'/>").attr("name", c.submitButton.name).val(a(c.submitButton).val()).appendTo(c.currentForm)), e = c.settings.submitHandler.call(c, c.currentForm, b), c.submitButton && d.remove(), void 0 !== e && e) } return c.settings.debug && b.preventDefault(), c.cancelSubmit ? (c.cancelSubmit = !1, d()) : c.form() ? c.pendingRequest ? (c.formSubmitted = !0, !1) : d() : (c.focusInvalid(), !1) })), c) }, valid: function () { var b, c, d; return a(this[0]).is("form") ? b = this.validate().form() : (d = [], b = !0, c = a(this[0].form).validate(), this.each(function () { b = c.element(this) && b, b || (d = d.concat(c.errorList)) }), c.errorList = d), b }, rules: function (b, c) { var d, e, f, g, h, i, j = this[0]; if (null != j && null != j.form) { if (b) switch (d = a.data(j.form, "validator").settings, e = d.rules, f = a.validator.staticRules(j), b) { case "add": a.extend(f, a.validator.normalizeRule(c)), delete f.messages, e[j.name] = f, c.messages && (d.messages[j.name] = a.extend(d.messages[j.name], c.messages)); break; case "remove": return c ? (i = {}, a.each(c.split(/\s/), function (b, c) { i[c] = f[c], delete f[c], "required" === c && a(j).removeAttr("aria-required") }), i) : (delete e[j.name], f) }return g = a.validator.normalizeRules(a.extend({}, a.validator.classRules(j), a.validator.attributeRules(j), a.validator.dataRules(j), a.validator.staticRules(j)), j), g.required && (h = g.required, delete g.required, g = a.extend({ required: h }, g), a(j).attr("aria-required", "true")), g.remote && (h = g.remote, delete g.remote, g = a.extend(g, { remote: h })), g } } }), a.extend(a.expr.pseudos || a.expr[":"], { blank: function (b) { return !a.trim("" + a(b).val()) }, filled: function (b) { var c = a(b).val(); return null !== c && !!a.trim("" + c) }, unchecked: function (b) { return !a(b).prop("checked") } }), a.validator = function (b, c) { this.settings = a.extend(!0, {}, a.validator.defaults, b), this.currentForm = c, this.init() }, a.validator.format = function (b, c) { return 1 === arguments.length ? function () { var c = a.makeArray(arguments); return c.unshift(b), a.validator.format.apply(this, c) } : void 0 === c ? b : (arguments.length > 2 && c.constructor !== Array && (c = a.makeArray(arguments).slice(1)), c.constructor !== Array && (c = [c]), a.each(c, function (a, c) { b = b.replace(new RegExp("\\{" + a + "\\}", "g"), function () { return c }) }), b) }, a.extend(a.validator, { defaults: { messages: {}, groups: {}, rules: {}, errorClass: "error", pendingClass: "pending", validClass: "valid", errorElement: "label", focusCleanup: !1, focusInvalid: !0, errorContainer: a([]), errorLabelContainer: a([]), onsubmit: !0, ignore: ":hidden", ignoreTitle: !1, onfocusin: function (a) { this.lastActive = a, this.settings.focusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, a, this.settings.errorClass, this.settings.validClass), this.hideThese(this.errorsFor(a))) }, onfocusout: function (a) { this.checkable(a) || !(a.name in this.submitted) && this.optional(a) || this.element(a) }, onkeyup: function (b, c) { var d = [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225]; 9 === c.which && "" === this.elementValue(b) || a.inArray(c.keyCode, d) !== -1 || (b.name in this.submitted || b.name in this.invalid) && this.element(b) }, onclick: function (a) { a.name in this.submitted ? this.element(a) : a.parentNode.name in this.submitted && this.element(a.parentNode) }, highlight: function (b, c, d) { "radio" === b.type ? this.findByName(b.name).addClass(c).removeClass(d) : a(b).addClass(c).removeClass(d) }, unhighlight: function (b, c, d) { "radio" === b.type ? this.findByName(b.name).removeClass(c).addClass(d) : a(b).removeClass(c).addClass(d) } }, setDefaults: function (b) { a.extend(a.validator.defaults, b) }, messages: { required: "This field is required.", remote: "Please fix this field.", email: "Please enter a valid email address.", url: "Please enter a valid URL.", date: "Please enter a valid date.", dateISO: "Please enter a valid date (ISO).", number: "Please enter a valid number.", digits: "Please enter only digits.", equalTo: "Please enter the same value again.", maxlength: a.validator.format("Please enter no more than {0} characters."), minlength: a.validator.format("Please enter at least {0} characters."), rangelength: a.validator.format("Please enter a value between {0} and {1} characters long."), range: a.validator.format("Please enter a value between {0} and {1}."), max: a.validator.format("Please enter a value less than or equal to {0}."), min: a.validator.format("Please enter a value greater than or equal to {0}."), step: a.validator.format("Please enter a multiple of {0}.") }, autoCreateRanges: !1, prototype: { init: function () { function b(b) { !this.form && this.hasAttribute("contenteditable") && (this.form = a(this).closest("form")[0]); var c = a.data(this.form, "validator"), d = "on" + b.type.replace(/^validate/, ""), e = c.settings; e[d] && !a(this).is(e.ignore) && e[d].call(c, this, b) } this.labelContainer = a(this.settings.errorLabelContainer), this.errorContext = this.labelContainer.length && this.labelContainer || a(this.currentForm), this.containers = a(this.settings.errorContainer).add(this.settings.errorLabelContainer), this.submitted = {}, this.valueCache = {}, this.pendingRequest = 0, this.pending = {}, this.invalid = {}, this.reset(); var c, d = this.groups = {}; a.each(this.settings.groups, function (b, c) { "string" == typeof c && (c = c.split(/\s/)), a.each(c, function (a, c) { d[c] = b }) }), c = this.settings.rules, a.each(c, function (b, d) { c[b] = a.validator.normalizeRule(d) }), a(this.currentForm).on("focusin.validate focusout.validate keyup.validate", ":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']", b).on("click.validate", "select, option, [type='radio'], [type='checkbox']", b), this.settings.invalidHandler && a(this.currentForm).on("invalid-form.validate", this.settings.invalidHandler), a(this.currentForm).find("[required], [data-rule-required], .required").attr("aria-required", "true") }, form: function () { return this.checkForm(), a.extend(this.submitted, this.errorMap), this.invalid = a.extend({}, this.errorMap), this.valid() || a(this.currentForm).triggerHandler("invalid-form", [this]), this.showErrors(), this.valid() }, checkForm: function () { this.prepareForm(); for (var a = 0, b = this.currentElements = this.elements(); b[a]; a++)this.check(b[a]); return this.valid() }, element: function (b) { var c, d, e = this.clean(b), f = this.validationTargetFor(e), g = this, h = !0; return void 0 === f ? delete this.invalid[e.name] : (this.prepareElement(f), this.currentElements = a(f), d = this.groups[f.name], d && a.each(this.groups, function (a, b) { b === d && a !== f.name && (e = g.validationTargetFor(g.clean(g.findByName(a))), e && e.name in g.invalid && (g.currentElements.push(e), h = g.check(e) && h)) }), c = this.check(f) !== !1, h = h && c, c ? this.invalid[f.name] = !1 : this.invalid[f.name] = !0, this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)), this.showErrors(), a(b).attr("aria-invalid", !c)), h }, showErrors: function (b) { if (b) { var c = this; a.extend(this.errorMap, b), this.errorList = a.map(this.errorMap, function (a, b) { return { message: a, element: c.findByName(b)[0] } }), this.successList = a.grep(this.successList, function (a) { return !(a.name in b) }) } this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors() }, resetForm: function () { a.fn.resetForm && a(this.currentForm).resetForm(), this.invalid = {}, this.submitted = {}, this.prepareForm(), this.hideErrors(); var b = this.elements().removeData("previousValue").removeAttr("aria-invalid"); this.resetElements(b) }, resetElements: function (a) { var b; if (this.settings.unhighlight) for (b = 0; a[b]; b++)this.settings.unhighlight.call(this, a[b], this.settings.errorClass, ""), this.findByName(a[b].name).removeClass(this.settings.validClass); else a.removeClass(this.settings.errorClass).removeClass(this.settings.validClass) }, numberOfInvalids: function () { return this.objectLength(this.invalid) }, objectLength: function (a) { var b, c = 0; for (b in a) a[b] && c++; return c }, hideErrors: function () { this.hideThese(this.toHide) }, hideThese: function (a) { a.not(this.containers).text(""), this.addWrapper(a).hide() }, valid: function () { return 0 === this.size() }, size: function () { return this.errorList.length }, focusInvalid: function () { if (this.settings.focusInvalid) try { a(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").focus().trigger("focusin") } catch (b) { } }, findLastActive: function () { var b = this.lastActive; return b && 1 === a.grep(this.errorList, function (a) { return a.element.name === b.name }).length && b }, elements: function () { var b = this, c = {}; return a(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function () { var d = this.name || a(this).attr("name"); return !d && b.settings.debug && window.console && console.error("%o has no name assigned", this), this.hasAttribute("contenteditable") && (this.form = a(this).closest("form")[0]), !(d in c || !b.objectLength(a(this).rules())) && (c[d] = !0, !0) }) }, clean: function (b) { return a(b)[0] }, errors: function () { var b = this.settings.errorClass.split(" ").join("."); return a(this.settings.errorElement + "." + b, this.errorContext) }, resetInternals: function () { this.successList = [], this.errorList = [], this.errorMap = {}, this.toShow = a([]), this.toHide = a([]) }, reset: function () { this.resetInternals(), this.currentElements = a([]) }, prepareForm: function () { this.reset(), this.toHide = this.errors().add(this.containers) }, prepareElement: function (a) { this.reset(), this.toHide = this.errorsFor(a) }, elementValue: function (b) { var c, d, e = a(b), f = b.type; return "radio" === f || "checkbox" === f ? this.findByName(b.name).filter(":checked").val() : "number" === f && "undefined" != typeof b.validity ? b.validity.badInput ? "NaN" : e.val() : (c = b.hasAttribute("contenteditable") ? e.text() : e.val(), "file" === f ? "C:\\fakepath\\" === c.substr(0, 12) ? c.substr(12) : (d = c.lastIndexOf("/"), d >= 0 ? c.substr(d + 1) : (d = c.lastIndexOf("\\"), d >= 0 ? c.substr(d + 1) : c)) : "string" == typeof c ? c.replace(/\r/g, "") : c) }, check: function (b) { b = this.validationTargetFor(this.clean(b)); var c, d, e, f = a(b).rules(), g = a.map(f, function (a, b) { return b }).length, h = !1, i = this.elementValue(b); if ("function" == typeof f.normalizer) { if (i = f.normalizer.call(b, i), "string" != typeof i) throw new TypeError("The normalizer should return a string value."); delete f.normalizer } for (d in f) { e = { method: d, parameters: f[d] }; try { if (c = a.validator.methods[d].call(this, i, b, e.parameters), "dependency-mismatch" === c && 1 === g) { h = !0; continue } if (h = !1, "pending" === c) return void (this.toHide = this.toHide.not(this.errorsFor(b))); if (!c) return this.formatAndAdd(b, e), !1 } catch (j) { throw this.settings.debug && window.console && console.log("Exception occurred when checking element " + b.id + ", check the '" + e.method + "' method.", j), j instanceof TypeError && (j.message += ".  Exception occurred when checking element " + b.id + ", check the '" + e.method + "' method."), j } } if (!h) return this.objectLength(f) && this.successList.push(b), !0 }, customDataMessage: function (b, c) { return a(b).data("msg" + c.charAt(0).toUpperCase() + c.substring(1).toLowerCase()) || a(b).data("msg") }, customMessage: function (a, b) { var c = this.settings.messages[a]; return c && (c.constructor === String ? c : c[b]) }, findDefined: function () { for (var a = 0; a < arguments.length; a++)if (void 0 !== arguments[a]) return arguments[a] }, defaultMessage: function (b, c) { "string" == typeof c && (c = { method: c }); var d = this.findDefined(this.customMessage(b.name, c.method), this.customDataMessage(b, c.method), !this.settings.ignoreTitle && b.title || void 0, a.validator.messages[c.method], "<strong>Warning: No message defined for " + b.name + "</strong>"), e = /\$?\{(\d+)\}/g; return "function" == typeof d ? d = d.call(this, c.parameters, b) : e.test(d) && (d = a.validator.format(d.replace(e, "{$1}"), c.parameters)), d }, formatAndAdd: function (a, b) { var c = this.defaultMessage(a, b); this.errorList.push({ message: c, element: a, method: b.method }), this.errorMap[a.name] = c, this.submitted[a.name] = c }, addWrapper: function (a) { return this.settings.wrapper && (a = a.add(a.parent(this.settings.wrapper))), a }, defaultShowErrors: function () { var a, b, c; for (a = 0; this.errorList[a]; a++)c = this.errorList[a], this.settings.highlight && this.settings.highlight.call(this, c.element, this.settings.errorClass, this.settings.validClass), this.showLabel(c.element, c.message); if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success) for (a = 0; this.successList[a]; a++)this.showLabel(this.successList[a]); if (this.settings.unhighlight) for (a = 0, b = this.validElements(); b[a]; a++)this.settings.unhighlight.call(this, b[a], this.settings.errorClass, this.settings.validClass); this.toHide = this.toHide.not(this.toShow), this.hideErrors(), this.addWrapper(this.toShow).show() }, validElements: function () { return this.currentElements.not(this.invalidElements()) }, invalidElements: function () { return a(this.errorList).map(function () { return this.element }) }, showLabel: function (b, c) { var d, e, f, g, h = this.errorsFor(b), i = this.idOrName(b), j = a(b).attr("aria-describedby"); h.length ? (h.removeClass(this.settings.validClass).addClass(this.settings.errorClass), h.html(c)) : (h = a("<" + this.settings.errorElement + ">").attr("id", i + "-error").addClass(this.settings.errorClass).html(c || ""), d = h, this.settings.wrapper && (d = h.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), this.labelContainer.length ? this.labelContainer.append(d) : this.settings.errorPlacement ? this.settings.errorPlacement.call(this, d, a(b)) : d.insertAfter(b), h.is("label") ? h.attr("for", i) : 0 === h.parents("label[for='" + this.escapeCssMeta(i) + "']").length && (f = h.attr("id"), j ? j.match(new RegExp("\\b" + this.escapeCssMeta(f) + "\\b")) || (j += " " + f) : j = f, a(b).attr("aria-describedby", j), e = this.groups[b.name], e && (g = this, a.each(g.groups, function (b, c) { c === e && a("[name='" + g.escapeCssMeta(b) + "']", g.currentForm).attr("aria-describedby", h.attr("id")) })))), !c && this.settings.success && (h.text(""), "string" == typeof this.settings.success ? h.addClass(this.settings.success) : this.settings.success(h, b)), this.toShow = this.toShow.add(h) }, errorsFor: function (b) { var c = this.escapeCssMeta(this.idOrName(b)), d = a(b).attr("aria-describedby"), e = "label[for='" + c + "'], label[for='" + c + "'] *"; return d && (e = e + ", #" + this.escapeCssMeta(d).replace(/\s+/g, ", #")), this.errors().filter(e) }, escapeCssMeta: function (a) { return a.replace(/([\\!"#$%&'()*+,./:;<=>?@\[\]^`{|}~])/g, "\\$1") }, idOrName: function (a) { return this.groups[a.name] || (this.checkable(a) ? a.name : a.id || a.name) }, validationTargetFor: function (b) { return this.checkable(b) && (b = this.findByName(b.name)), a(b).not(this.settings.ignore)[0] }, checkable: function (a) { return /radio|checkbox/i.test(a.type) }, findByName: function (b) { return a(this.currentForm).find("[name='" + this.escapeCssMeta(b) + "']") }, getLength: function (b, c) { switch (c.nodeName.toLowerCase()) { case "select": return a("option:selected", c).length; case "input": if (this.checkable(c)) return this.findByName(c.name).filter(":checked").length }return b.length }, depend: function (a, b) { return !this.dependTypes[typeof a] || this.dependTypes[typeof a](a, b) }, dependTypes: { "boolean": function (a) { return a }, string: function (b, c) { return !!a(b, c.form).length }, "function": function (a, b) { return a(b) } }, optional: function (b) { var c = this.elementValue(b); return !a.validator.methods.required.call(this, c, b) && "dependency-mismatch" }, startRequest: function (b) { this.pending[b.name] || (this.pendingRequest++, a(b).addClass(this.settings.pendingClass), this.pending[b.name] = !0) }, stopRequest: function (b, c) { this.pendingRequest--, this.pendingRequest < 0 && (this.pendingRequest = 0), delete this.pending[b.name], a(b).removeClass(this.settings.pendingClass), c && 0 === this.pendingRequest && this.formSubmitted && this.form() ? (a(this.currentForm).submit(), this.formSubmitted = !1) : !c && 0 === this.pendingRequest && this.formSubmitted && (a(this.currentForm).triggerHandler("invalid-form", [this]), this.formSubmitted = !1) }, previousValue: function (b, c) { return c = "string" == typeof c && c || "remote", a.data(b, "previousValue") || a.data(b, "previousValue", { old: null, valid: !0, message: this.defaultMessage(b, { method: c }) }) }, destroy: function () { this.resetForm(), a(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur") } }, classRuleSettings: { required: { required: !0 }, email: { email: !0 }, url: { url: !0 }, date: { date: !0 }, dateISO: { dateISO: !0 }, number: { number: !0 }, digits: { digits: !0 }, creditcard: { creditcard: !0 } }, addClassRules: function (b, c) { b.constructor === String ? this.classRuleSettings[b] = c : a.extend(this.classRuleSettings, b) }, classRules: function (b) { var c = {}, d = a(b).attr("class"); return d && a.each(d.split(" "), function () { this in a.validator.classRuleSettings && a.extend(c, a.validator.classRuleSettings[this]) }), c }, normalizeAttributeRule: function (a, b, c, d) { /min|max|step/.test(c) && (null === b || /number|range|text/.test(b)) && (d = Number(d), isNaN(d) && (d = void 0)), d || 0 === d ? a[c] = d : b === c && "range" !== b && (a[c] = !0) }, attributeRules: function (b) { var c, d, e = {}, f = a(b), g = b.getAttribute("type"); for (c in a.validator.methods) "required" === c ? (d = b.getAttribute(c), "" === d && (d = !0), d = !!d) : d = f.attr(c), this.normalizeAttributeRule(e, g, c, d); return e.maxlength && /-1|2147483647|524288/.test(e.maxlength) && delete e.maxlength, e }, dataRules: function (b) { var c, d, e = {}, f = a(b), g = b.getAttribute("type"); for (c in a.validator.methods) d = f.data("rule" + c.charAt(0).toUpperCase() + c.substring(1).toLowerCase()), this.normalizeAttributeRule(e, g, c, d); return e }, staticRules: function (b) { var c = {}, d = a.data(b.form, "validator"); return d.settings.rules && (c = a.validator.normalizeRule(d.settings.rules[b.name]) || {}), c }, normalizeRules: function (b, c) { return a.each(b, function (d, e) { if (e === !1) return void delete b[d]; if (e.param || e.depends) { var f = !0; switch (typeof e.depends) { case "string": f = !!a(e.depends, c.form).length; break; case "function": f = e.depends.call(c, c) }f ? b[d] = void 0 === e.param || e.param : (a.data(c.form, "validator").resetElements(a(c)), delete b[d]) } }), a.each(b, function (d, e) { b[d] = a.isFunction(e) && "normalizer" !== d ? e(c) : e }), a.each(["minlength", "maxlength"], function () { b[this] && (b[this] = Number(b[this])) }), a.each(["rangelength", "range"], function () { var c; b[this] && (a.isArray(b[this]) ? b[this] = [Number(b[this][0]), Number(b[this][1])] : "string" == typeof b[this] && (c = b[this].replace(/[\[\]]/g, "").split(/[\s,]+/), b[this] = [Number(c[0]), Number(c[1])])) }), a.validator.autoCreateRanges && (null != b.min && null != b.max && (b.range = [b.min, b.max], delete b.min, delete b.max), null != b.minlength && null != b.maxlength && (b.rangelength = [b.minlength, b.maxlength], delete b.minlength, delete b.maxlength)), b }, normalizeRule: function (b) { if ("string" == typeof b) { var c = {}; a.each(b.split(/\s/), function () { c[this] = !0 }), b = c } return b }, addMethod: function (b, c, d) { a.validator.methods[b] = c, a.validator.messages[b] = void 0 !== d ? d : a.validator.messages[b], c.length < 3 && a.validator.addClassRules(b, a.validator.normalizeRule(b)) }, methods: { required: function (b, c, d) { if (!this.depend(d, c)) return "dependency-mismatch"; if ("select" === c.nodeName.toLowerCase()) { var e = a(c).val(); return e && e.length > 0 } return this.checkable(c) ? this.getLength(b, c) > 0 : b.length > 0 }, email: function (a, b) { return this.optional(b) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(a) }, url: function (a, b) { return this.optional(b) || /^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(a) }, date: function (a, b) { return this.optional(b) || !/Invalid|NaN/.test(new Date(a).toString()) }, dateISO: function (a, b) { return this.optional(b) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(a) }, number: function (a, b) { return this.optional(b) || /^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a) }, digits: function (a, b) { return this.optional(b) || /^\d+$/.test(a) }, minlength: function (b, c, d) { var e = a.isArray(b) ? b.length : this.getLength(b, c); return this.optional(c) || e >= d }, maxlength: function (b, c, d) { var e = a.isArray(b) ? b.length : this.getLength(b, c); return this.optional(c) || e <= d }, rangelength: function (b, c, d) { var e = a.isArray(b) ? b.length : this.getLength(b, c); return this.optional(c) || e >= d[0] && e <= d[1] }, min: function (a, b, c) { return this.optional(b) || a >= c }, max: function (a, b, c) { return this.optional(b) || a <= c }, range: function (a, b, c) { return this.optional(b) || a >= c[0] && a <= c[1] }, step: function (b, c, d) { var e, f = a(c).attr("type"), g = "Step attribute on input type " + f + " is not supported.", h = ["text", "number", "range"], i = new RegExp("\\b" + f + "\\b"), j = f && !i.test(h.join()), k = function (a) { var b = ("" + a).match(/(?:\.(\d+))?$/); return b && b[1] ? b[1].length : 0 }, l = function (a) { return Math.round(a * Math.pow(10, e)) }, m = !0; if (j) throw new Error(g); return e = k(d), (k(b) > e || l(b) % l(d) !== 0) && (m = !1), this.optional(c) || m }, equalTo: function (b, c, d) { var e = a(d); return this.settings.onfocusout && e.not(".validate-equalTo-blur").length && e.addClass("validate-equalTo-blur").on("blur.validate-equalTo", function () { a(c).valid() }), b === e.val() }, remote: function (b, c, d, e) { if (this.optional(c)) return "dependency-mismatch"; e = "string" == typeof e && e || "remote"; var f, g, h, i = this.previousValue(c, e); return this.settings.messages[c.name] || (this.settings.messages[c.name] = {}), i.originalMessage = i.originalMessage || this.settings.messages[c.name][e], this.settings.messages[c.name][e] = i.message, d = "string" == typeof d && { url: d } || d, h = a.param(a.extend({ data: b }, d.data)), i.old === h ? i.valid : (i.old = h, f = this, this.startRequest(c), g = {}, g[c.name] = b, a.ajax(a.extend(!0, { mode: "abort", port: "validate" + c.name, dataType: "json", data: g, context: f.currentForm, success: function (a) { var d, g, h, j = a === !0 || "true" === a; f.settings.messages[c.name][e] = i.originalMessage, j ? (h = f.formSubmitted, f.resetInternals(), f.toHide = f.errorsFor(c), f.formSubmitted = h, f.successList.push(c), f.invalid[c.name] = !1, f.showErrors()) : (d = {}, g = a || f.defaultMessage(c, { method: e, parameters: b }), d[c.name] = i.message = g, f.invalid[c.name] = !0, f.showErrors(d)), i.valid = j, f.stopRequest(c, j) } }, d)), "pending") } } }); var b, c = {}; return a.ajaxPrefilter ? a.ajaxPrefilter(function (a, b, d) { var e = a.port; "abort" === a.mode && (c[e] && c[e].abort(), c[e] = d) }) : (b = a.ajax, a.ajax = function (d) { var e = ("mode" in d ? d : a.ajaxSettings).mode, f = ("port" in d ? d : a.ajaxSettings).port; return "abort" === e ? (c[f] && c[f].abort(), c[f] = b.apply(this, arguments), c[f]) : b.apply(this, arguments) }), a });
$(document).ready(function () { $("#viewingForm").validate({ rules: { captcha_code: { required: true, remote: { url: "/ajax.php?action=validateCaptcha", type: "post", dataFilter: function (a) { if (a == "Invalid") { return false } else { return true } } } } }, messages: { captcha_code: { required: "Captcha code is required.", remote: "Enter valid captcha code." } } }); $("#offerForm").validate({ rules: { captcha_code: { required: true, remote: { url: "/ajax.php?action=validateCaptcha", type: "post", dataFilter: function (a) { if (a == "Invalid") { return false } else { return true } } } } }, messages: { captcha_code: { required: "Captcha code is required.", remote: "Enter valid captcha code." } } }); $("#contactForm").validate({ rules: { captcha_code: { required: true, remote: { url: "/ajax.php?action=validateCaptcha", type: "post", dataFilter: function (a) { if (a == "Invalid") { return false } else { return true } } } } }, messages: { captcha_code: { required: "Captcha code is required.", remote: "Enter valid captcha code." } } }); $('input[name="date_of_viewing"]').datetimepicker({ dayOfWeekStart: 1, lang: "en", step: 1, format: "Y-m-d", formatDate: "Y-m-d", timepicker: false, scrollInput: false }) });
$(function () { $(".btn.currency, .change-currency").on("click", function (c) { c.preventDefault(); $("#currency-select").val($(this).data("id")); $("#currency-select").parents("form.currency-selector").submit() }); $("header nav > ul").slicknav({ label: "", prependTo: "body" }); $("header .burger").on("click", function (c) { $("header nav ul").slicknav("toggle") }); $(".home-slider").owlCarousel({ animateOut: "fadeOut", items: 1, loop: true, autoplay: true, autoplayTimeout: 5500, smartSpeed: 450, }); $(".featured-slider").owlCarousel({ margin: 30, items: 4, slideBy: 4, loop: true, autoplay: true, autoplayTimeout: 7500, smartSpeed: 850, nav: true, dots: false, navText: ['<i class="fa fa-angle-left"></i>', '<i class="fa fa-angle-right"></i>'], responsive: { 0: { items: 1, slideBy: 1, }, 760: { items: 3, slideBy: 3, }, 960: { items: 4, slideBy: 4, }, } }); $(".test-slider").owlCarousel({ animateOut: "fadeOut", items: 1, loop: true, autoplay: true, autoplayTimeout: 5500, smartSpeed: 450, nav: true, dots: false, navText: ['<i class="fa fa-angle-left"></i>', '<i class="fa fa-angle-right"></i>'], }); var b = $(".property-slider"), a = $(".property-slider-thumbs"); b.owlCarousel({ items: 1, autoplay: true, autoplayTimeout: 5500, smartSpeed: 450, nav: true, dots: false, navText: ['<i class="fa fa-angle-left"></i>', '<i class="fa fa-angle-right"></i>'], }).on("changed.owl.carousel", function (c) { a.trigger("to.owl.carousel", [c.item.index - ((6 - 1) / 2), 300, true]); a.find(".owl-item").removeClass("current"); a.find(".owl-item").eq(c.item.index).addClass("current") }); a.owlCarousel({ items: 6, margin: 7, autoplay: true, autoplayTimeout: 5500, smartSpeed: 450, nav: true, dots: false, navText: ['<i class="fa fa-angle-left"></i>', '<i class="fa fa-angle-right"></i>'], }).on("click", ".owl-item", function () { b.trigger("to.owl.carousel", [$(this).index(), 300, true]) }); $(".images").each(function () { $(this).magnificPopup({ delegate: "a", type: "image", gallery: { enabled: true } }) }); $('.btn.alert[href="javascript:;"]').on("click", function () { $.magnificPopup.open({ items: { src: $(".alert-popup"), type: "inline", }, disableOn: false, }); $(".alert-popup").css("display", "block") }); $(document).on("click", ".alert-popup .btn.cancel", function () { $.magnificPopup.close(); $(".alert-popup form").show(); $(".alert-popup p").show(); $(".alert-popup .success").hide(); $(".alert-popup .close-btn").hide(); $(".alert-popup h2").html("Add a New Alert"); $(".alert-popup select").each(function () { $("option", this).removeAttr("selected"); $("option:first-child", this).attr("selected", "SELECTED") }); $('.alert-popup input[name="email"]').prop("checked", true).val(1); $('.alert-popup input[name="sms"]').prop("checked", false).val(0) }); $(document).on("click", '.alert-popup input[type="submit"]', function (c) { c.preventDefault(); $.post("/_includes/ajax.php", $(this).parents("form").serialize(), function (d) { console.log(d); if (d.success == true) { $(".alert-popup form").slideUp(); $(".alert-popup p").slideUp(); $(".alert-popup .success").slideDown(); $(".alert-popup .close-btn").slideDown(); $(".alert-popup h2").html("Your Alert Has Been Added") } }) }); $(".login-tabs a").on("click", function () { var c = $(this).attr("data-tab"); $(".login-tabs li").removeClass("active"); $(".tab").removeClass("active"); $(this).parent().addClass("active"); $('.tab[data-tab="' + c + '"]').addClass("active") }); $("#dates").daterangepicker({ autoUpdateInput: false, locale: { format: "DD/MM/YYYY" }, autoApply: true, minDate: moment(), opens: "left" }, function (e, c, d) { $('input[name="arrival"]').val(e.format("YYYY-MM-DD")); $('input[name="departure"]').val(c.format("YYYY-MM-DD")) }); $("#dates").on("apply.daterangepicker", function (d, c) { $(this).val(c.startDate.format("YYYY-MM-DD") + " - " + c.endDate.format("YYYY-MM-DD")); $('input[name="arrival"]').val(c.startDate.format("YYYY-MM-DD")); $('input[name="departure"]').val(c.endDate.format("YYYY-MM-DD")) }) });